{
  "configurations" : [
    {
      "hdfs-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "NAMENODE:hdfs_namenode;DATANODE:hdfs_datanode;SECONDARY_NAMENODE:hdfs_secondarynamenode;JOURNALNODE:hdfs_journalnode;ZKFC:hdfs_zkfc;NFS_GATEWAY:hdfs_nfs3",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"hdfs_datanode\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-datanode-*.log\"\n    },\n    {\n      \"type\":\"hdfs_namenode\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-namenode-*.log\"\n    },\n    {\n      \"type\":\"hdfs_journalnode\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-journalnode-*.log\"\n    },\n    {\n      \"type\":\"hdfs_secondarynamenode\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-secondarynamenode-*.log\"\n    },\n    {\n      \"type\":\"hdfs_zkfc\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-zkfc-*.log\"\n    },\n    {\n      \"type\":\"hdfs_nfs3\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hadoop-{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}-nfs3-*.log\"\n    },\n    {\n      \"type\":\"hdfs_audit\",\n      \"rowtype\":\"audit\",\n      \"is_enabled\":\"true\",\n      \"add_fields\":{\n        \"logType\":\"HDFSAudit\",\n        \"enforcer\":\"hadoop-acl\",\n        \"repoType\":\"1\",\n        \"repo\":\"hdfs\"\n      },\n      \"path\":\"{{default('/configurations/hadoop-env/hdfs_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/hadoop-env/hdfs_user', 'hdfs')}}/hdfs-audit.log\"\n    }\n   ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"hdfs_datanode\",\n            \"hdfs_journalnode\",\n            \"hdfs_secondarynamenode\",\n            \"hdfs_namenode\",\n            \"hdfs_zkfc\",\n            \"hdfs_nfs3\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{JAVAMETHOD:method}\\\\(%{INT:line_number}\\\\)\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n        }\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"hdfs_audit\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:evtTime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:evtTime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}:%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"evtTime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     },\n    {\n      \"filter\":\"keyvalue\",\n      \"sort_order\":1,\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"hdfs_audit\"\n          ]\n         }\n       },\n      \"source_field\":\"log_message\",\n      \"value_split\":\"=\",\n      \"field_split\":\"\\t\",\n      \"post_map_values\":{\n        \"src\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"resource\"\n          }\n         },\n        \"ip\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"cliIP\"\n          }\n         },\n        \"allowed\":[\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"true\",\n              \"post_value\":\"1\"\n            }\n           },\n          {\n            \"map_fieldvalue\":{\n              \"pre_value\":\"false\",\n              \"post_value\":\"0\"\n            }\n           },\n          {\n            \"map_fieldname\":{\n              \"new_fieldname\":\"result\"\n            }\n           }\n         ],\n        \"cmd\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"action\"\n          }\n         },\n        \"proto\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"cliType\"\n          }\n         },\n        \"callerContext\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"req_caller_id\"\n          }\n         }\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"sort_order\":2,\n      \"source_field\":\"ugi\",\n      \"remove_source_field\":\"false\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"hdfs_audit\"\n          ]\n         }\n       },\n      \"message_pattern\":\"%{USERNAME:p_user}.+auth:%{USERNAME:p_authType}.+via %{USERNAME:k_user}.+auth:%{USERNAME:k_authType}|%{USERNAME:user}.+auth:%{USERNAME:authType}|%{USERNAME:x_user}\",\n      \"post_map_values\":{\n        \"user\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"reqUser\"\n          }\n         },\n        \"x_user\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"reqUser\"\n          }\n         },\n        \"p_user\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"reqUser\"\n          }\n         },\n        \"k_user\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"proxyUsers\"\n          }\n         },\n        \"p_authType\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"authType\"\n          }\n         },\n        \"k_authType\":{\n          \"map_fieldname\":{\n            \"new_fieldname\":\"proxyAuthType\"\n          }\n         }\n       }\n     }\n   ]\n }",
          "service_name" : "HDFS"
        }
      }
    },
    {
      "solr-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "solr_ssl_enable" : "false",
          "solr_ssl_want_client_auth" : "false",
          "solr_ssl_trust_store" : "etc/solr-ssl.keystore.jks",
          "solr_ssl_key_store" : "etc/solr-ssl.keystore.jks",
          "solr_ssl_need_client_auth" : "false"
        }
      }
    },
    {
      "hive-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "HIVE_METASTORE:hive_metastore;HIVE_SERVER:hive_hiveserver2;WEBHCAT_SERVER:webhcat_server",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"hive_hiveserver2\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/hive-env/hive_log_dir', '/var/log/hive')}}/hiveserver2.log\"\n    },\n    {\n      \"type\":\"hive_metastore\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/hive-env/hive_log_dir', '/var/log/hive')}}/hivemetastore.log\"\n    },\n    {\n      \"type\": \"webhcat_server\",\n      \"rowntype\":\"service\",\n      \"path\":\"{{default('configurations/hive-env/hcat_log_dir', '/var/log/webhcat')}}/webhcat.log\"\n    }\n  ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"hive_hiveserver2\",\n            \"hive_metastore\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]:%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{JAVAMETHOD:method}\\\\(%{INT:line_number}\\\\)\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"webhcat_server\"\n          ]\n         }\n       },\n      \"log4j_format\":\" %-5p | %d{DATE} | %c | %m%n\",\n      \"multiline_pattern\":\"^(%{SPACE}%{LOGLEVEL:level}%{CUSTOM_SEPARATOR}%{CUSTOM_DATESTAMP:logtime})\",\n      \"message_pattern\":\"(?m)^%{SPACE}%{LOGLEVEL:level}%{CUSTOM_SEPARATOR}%{CUSTOM_DATESTAMP:logtime}%{CUSTOM_SEPARATOR}%{JAVACLASS:file}%{CUSTOM_SEPARATOR}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"dd MMM yyyy HH:mm:ss,SSS\"\n          }\n         },\n        \"level\":{\n           \"map_fieldvalue\":{\n             \"pre_value\":\"WARNING\",\n             \"post_value\":\"WARN\"\n            }\n        }\n       }\n     }\n   ]\n }",
          "service_name" : "Hive"
        }
      }
    },
    {
      "zoo.cfg" : {
        "properties_attributes" : { },
        "properties" : {
          "autopurge.purgeInterval" : "24",
          "dataDir" : "/hadoop/zookeeper",
          "autopurge.snapRetainCount" : "30",
          "clientPort" : "2181",
          "initLimit" : "10",
          "tickTime" : "3000",
          "syncLimit" : "5"
        }
      }
    },
    {
      "zookeeper-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "zookeeper_log_max_backup_size" : "10",
          "zookeeper_log_number_of_backup_files" : "10",
          "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n#\n# ZooKeeper Logging Configuration\n#\n\n# DEFAULT: console appender only\nlog4j.rootLogger=INFO, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file\n#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n\n# Example with rolling log file and tracing\n#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n\n#\n# Log INFO level and above messages to the console\n#\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n#\n# Add ROLLINGFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender\nlog4j.appender.ROLLINGFILE.Threshold=DEBUG\nlog4j.appender.ROLLINGFILE.File={{zk_log_dir}}/zookeeper.log\n\n# Max log file size of 10MB\nlog4j.appender.ROLLINGFILE.MaxFileSize={{zookeeper_log_max_backup_size}}MB\n# uncomment the next line to limit number of backup files\n#log4j.appender.ROLLINGFILE.MaxBackupIndex={{zookeeper_log_number_of_backup_files}}\n\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n\n\n#\n# Add TRACEFILE to rootLogger to get log file output\n#    Log DEBUG level and above messages to a log file\nlog4j.appender.TRACEFILE=org.apache.log4j.FileAppender\nlog4j.appender.TRACEFILE.Threshold=TRACE\nlog4j.appender.TRACEFILE.File=zookeeper_trace.log\n\nlog4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n### Notice we are including log4j's NDC here (%x)\nlog4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"
        }
      }
    },
    {
      "tagsync-application-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "atlas.kafka.security.protocol" : "PLAINTEXTSASL",
          "atlas.jaas.KafkaClient.option.useKeyTab" : "true",
          "atlas.kafka.entities.group.id" : "ranger_entities_consumer",
          "atlas.jaas.KafkaClient.option.keyTab" : "/etc/security/keytabs/rangertagsync.service.keytab",
          "atlas.jaas.KafkaClient.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
          "atlas.jaas.KafkaClient.option.principal" : "rangertagsync/_HOST@LBG.DEV",
          "atlas.jaas.KafkaClient.option.serviceName" : "kafka",
          "atlas.jaas.KafkaClient.option.storeKey" : "true",
          "atlas.jaas.KafkaClient.loginModuleControlFlag" : "required",
          "atlas.kafka.sasl.kerberos.service.name" : "kafka",
          "atlas.kafka.bootstrap.servers" : "dn1.lbg.dev:6667,dn2.lbg.dev:6667,dn0.lbg.dev:6667",
          "atlas.kafka.zookeeper.connect" : "dn1.lbg.dev:2181,dn2.lbg.dev:2181,dn0.lbg.dev:2181"
        }
      }
    },
    {
      "admin-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "db_root_user" : "postgres",
          "DB_FLAVOR" : "POSTGRES",
          "db_name" : "ranger",
          "policymgr_external_url" : "http://%HOSTGROUP::host_group_1%:6080",
          "db_user" : "rangeradmin",
          "SQL_CONNECTOR_JAR" : "{{driver_curl_target}}",
          "db_host" : "postgres.lbg.dev"
        }
      }
    },
    {
      "hive-log4j2" : {
        "properties_attributes" : { },
        "properties" : {
          "hive2_log_maxfilesize" : "256",
          "hive2_log_maxbackupindex" : "30",
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = HiveLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = {{hive_log_level}}\nproperty.hive.root.logger = DRFA\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = hive.log\nproperty.hive.perflogger.log.level = INFO\n\n# list of all appenders\nappenders = console, DRFA\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{ISO8601} %5p [%t] %c{2}: %m%n\n\n# daily rolling file appender\nappender.DRFA.type = RollingRandomAccessFile\nappender.DRFA.name = DRFA\nappender.DRFA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\n# Use %pid in the filePattern to append process-id@host-name to the filename if you want separate log files for different CLI session\nappender.DRFA.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}\nappender.DRFA.layout.type = PatternLayout\nappender.DRFA.layout.pattern = %d{ISO8601} %5p [%t] %c{2}: %m%n\nappender.DRFA.policies.type = Policies\nappender.DRFA.policies.time.type = TimeBasedTriggeringPolicy\nappender.DRFA.policies.time.interval = 1\nappender.DRFA.policies.time.modulate = true\nappender.DRFA.strategy.type = DefaultRolloverStrategy\nappender.DRFA.strategy.max = {{hive2_log_maxbackupindex}}\nappender.DRFA.policies.fsize.type = SizeBasedTriggeringPolicy\nappender.DRFA.policies.fsize.size = {{hive2_log_maxfilesize}}MB\n\n# list of all loggers\nloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX, PerfLogger, AmazonAws, ApacheHttp\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\nlogger.AmazonAws.name=com.amazonaws\nlogger.AmazonAws.level = INFO\n\nlogger.ApacheHttp.name=org.apache.http\nlogger.ApacheHttp.level = INFO\n\nlogger.PerfLogger.name = org.apache.hadoop.hive.ql.log.PerfLogger\nlogger.PerfLogger.level = ${sys:hive.perflogger.log.level}\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
        }
      }
    },
    {
      "mapred-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "HISTORYSERVER:mapred_historyserver",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"mapred_historyserver\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/mapred-env/mapred_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/mapred-env/mapred_user', 'mapred')}}/mapred-{{default('configurations/mapred-env/mapred_user', 'mapred')}}-historyserver*.log\"\n    }\n   ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"mapred_historyserver\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{JAVAMETHOD:method}\\\\(%{INT:line_number}\\\\)\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     }\n   ]\n }",
          "service_name" : "MapReduce"
        }
      }
    },
    {
      "ssl-server" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.server.truststore.location" : "/etc/security/serverKeys/all.jks",
          "ssl.server.truststore.reload.interval" : "10000",
          "ssl.server.truststore.type" : "jks",
          "ssl.server.keystore.location" : "/etc/security/serverKeys/keystore.jks",
          "ssl.server.keystore.type" : "jks"
        }
      }
    },
    {
      "solr-cloud" : {
        "properties_attributes" : { },
        "properties" : {
          "solr_cloud_zk_directory" : "/solr",
          "solr_cloud_enable" : "true"
        }
      }
    },
    {
      "livy2-spark-blacklist" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n            #\n            # Configuration override / blacklist. Defines a list of properties that users are not allowed\n            # to override when starting Spark sessions.\n            #\n            # This file takes a list of property names (one per line). Empty lines and lines starting with \"#\"\n            # are ignored.\n            #\n\n            # Disallow overriding the master and the deploy mode.\n            spark.master\n            spark.submit.deployMode\n\n            # Disallow overriding the location of Spark cached jars.\n            spark.yarn.jar\n            spark.yarn.jars\n            spark.yarn.archive\n\n            # Don't allow users to override the RSC timeout.\n            livy.rsc.server.idle_timeout"
        }
      }
    },
    {
      "hadoop-policy" : {
        "properties_attributes" : { },
        "properties" : {
          "security.inter.datanode.protocol.acl" : "*",
          "security.refresh.usertogroups.mappings.protocol.acl" : "hadoop",
          "security.admin.operations.protocol.acl" : "hadoop",
          "security.client.datanode.protocol.acl" : "*",
          "security.datanode.protocol.acl" : "*",
          "security.inter.tracker.protocol.acl" : "*",
          "security.job.client.protocol.acl" : "*",
          "security.client.protocol.acl" : "*",
          "security.job.task.protocol.acl" : "*",
          "security.refresh.policy.protocol.acl" : "hadoop",
          "security.namenode.protocol.acl" : "*"
        }
      }
    },
    {
      "core-site" : {
        "properties_attributes" : {
          "final" : {
            "fs.defaultFS" : "true"
          }
        },
        "properties" : {
          "fs.defaultFS" : "hdfs://%HOSTGROUP::host_group_4%:8020",
          "hadoop.proxyuser.beacon.groups" : "*",
          "ipc.server.tcpnodelay" : "true",
          "mapreduce.jobtracker.webinterface.trusted" : "false",
          "hadoop.security.auth_to_local" : "RULE:[1:$1@$0](ambari-qa-dev@LBG.DEV)s/.*/ambari-qa/\nRULE:[1:$1@$0](hdfs-dev@LBG.DEV)s/.*/hdfs/\nRULE:[1:$1@$0](spark-dev@LBG.DEV)s/.*/spark/\nRULE:[1:$1@$0](.*@LBG.DEV)s/@.*//\nRULE:[2:$1@$0](beacon@LBG.DEV)s/.*/beacon/\nRULE:[2:$1@$0](dn@LBG.DEV)s/.*/hdfs/\nRULE:[2:$1@$0](hive@LBG.DEV)s/.*/hive/\nRULE:[2:$1@$0](jhs@LBG.DEV)s/.*/mapred/\nRULE:[2:$1@$0](knox@LBG.DEV)s/.*/knox/\nRULE:[2:$1@$0](nm@LBG.DEV)s/.*/yarn/\nRULE:[2:$1@$0](nn@LBG.DEV)s/.*/hdfs/\nRULE:[2:$1@$0](rangeradmin@LBG.DEV)s/.*/ranger/\nRULE:[2:$1@$0](rangertagsync@LBG.DEV)s/.*/rangertagsync/\nRULE:[2:$1@$0](rangerusersync@LBG.DEV)s/.*/rangerusersync/\nRULE:[2:$1@$0](rm@LBG.DEV)s/.*/yarn/\nRULE:[2:$1@$0](yarn@LBG.DEV)s/.*/yarn/\nDEFAULT",
          "ipc.client.idlethreshold" : "8000",
          "hadoop.proxyuser.hdfs.groups" : "*",
          "hadoop.proxyuser.knox.hosts" : "%HOSTGROUP::host_group_1%",
          "fs.trash.interval" : "360",
          "hadoop.proxyuser.ambari-server-dev.hosts" : "ambari-server.lbg.dev",
          "hadoop.http.authentication.simple.anonymous.allowed" : "true",
          "hadoop.security.authorization" : "true",
          "ipc.client.connection.maxidletime" : "30000",
          "hadoop.proxyuser.knox.groups" : "users",
          "hadoop.proxyuser.HTTP.hosts" : "%HOSTGROUP::host_group_4%",
          "hadoop.proxyuser.hcat.groups" : "*",
          "hadoop.proxyuser.livy.groups" : "*",
          "hadoop.proxyuser.beacon.hosts" : "*",
          "hadoop.proxyuser.hive.hosts" : "%HOSTGROUP::host_group_4%",
          "hadoop.proxyuser.ambari-server-dev.groups" : "*",
          "ha.failover-controller.active-standby-elector.zk.op.retries" : "120",
          "hadoop.security.authentication" : "kerberos",
          "hadoop.proxyuser.beacon.users" : "*",
          "hadoop.proxyuser.hdfs.hosts" : "*",
          "ha.zookeeper.acl" : "sasl:nn:rwcda",
          "ipc.client.connect.max.retries" : "50",
          "hadoop.proxyuser.yarn.groups" : "*",
          "io.file.buffer.size" : "131072",
          "hadoop.proxyuser.livy.hosts" : "*",
          "hadoop.proxyuser.hcat.hosts" : "%HOSTGROUP::host_group_4%",
          "net.topology.script.file.name" : "/etc/hadoop/conf/topology_script.py",
          "io.compression.codecs" : "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec",
          "hadoop.custom-extensions.root" : "/hdp/ext/{{major_stack_version}}/hadoop",
          "hadoop.proxyuser.hive.groups" : "*",
          "hadoop.proxyuser.yarn.hosts" : "%HOSTGROUP::host_group_4%",
          "hadoop.proxyuser.HTTP.groups" : "users",
          "io.serializations" : "org.apache.hadoop.io.serializer.WritableSerialization"
        }
      }
    },
    {
      "solr-metrics" : {
        "properties_attributes" : { },
        "properties" : {
          "solr_system_stats" : "true",
          "solr_enable_metrics" : "false",
          "solr_metrics_period" : "5000",
          "solr_queryhandler_stats" : "true",
          "solr_core_stats" : "true",
          "solr_metrics_properties" : "\n            # Security\n            truststore.path={{metric_truststore_path}}\n            truststore.type={{metric_truststore_type}}\n            truststore.password={{metric_truststore_password}}\n\n            solr.truststore.path={{solr_ssl_trust_store}}\n            solr.truststore.password={{solr_ssl_trust_store_password}}\n\n            jaas.file={{solr_metrics_kerberos_jaas_config}}\n\n            # Metrics\n            metrics.delay={{solr_metrics_delay}}\n            metrics.period={{solr_metrics_period}}\n\n            metrics.core.stats={{solr_core_stats}}\n            metrics.cache.stats={{solr_cache_stats}}\n            metrics.updatehandler.stats={{solr_updatehandler_stats}}\n            metrics.queryhandler.stats={{solr_queryhandler_stats}}\n            metrics.system.stats={{solr_system_stats}}\n            metrics.status.stats={{solr_status_stats}}\n\n            # Collector\n            collector.hosts={{ams_collector_hosts}}\n            collector.port={{metric_collector_port}}\n            collector.protocol={{metric_collector_protocol}}\n\n            # Solr\n            solr.host={{solr_protocol}}://{{hostname}}:{{solr_config_port}}/solr\n            solr.retry.times=3\n            solr.retry.interval=10",
          "solr_updatehandler_stats" : "true",
          "solr_metrics_config_log_dir" : "/opt/lucidworks-hdpsearch/metrics/log",
          "solr_cache_stats" : "true",
          "solr_metrics_config_conf_dir" : "/opt/lucidworks-hdpsearch/metrics/conf",
          "solr_metrics_config_pid_dir" : "/opt/lucidworks-hdpsearch/metrics/var",
          "solr_metrics_delay" : "500"
        }
      }
    },
    {
      "kafka-broker" : {
        "properties_attributes" : { },
        "properties" : {
          "replica.high.watermark.checkpoint.interval.ms" : "5000",
          "offsets.topic.num.partitions" : "50",
          "auto.create.topics.enable" : "true",
          "controller.socket.timeout.ms" : "30000",
          "external.kafka.metrics.include.prefix" : "kafka.network.RequestMetrics.ResponseQueueTimeMs.request.OffsetCommit.98percentile,kafka.network.RequestMetrics.ResponseQueueTimeMs.request.Offsets.95percentile,kafka.network.RequestMetrics.ResponseSendTimeMs.request.Fetch.95percentile,kafka.network.RequestMetrics.RequestsPerSec.request",
          "replica.socket.receive.buffer.bytes" : "65536",
          "min.insync.replicas" : "1",
          "kafka.timeline.metrics.maxRowCacheSize" : "10000",
          "zookeeper.connection.timeout.ms" : "25000",
          "controlled.shutdown.retry.backoff.ms" : "5000",
          "replica.fetch.wait.max.ms" : "500",
          "num.recovery.threads.per.data.dir" : "1",
          "principal.to.local.class" : "kafka.security.auth.KerberosPrincipalToLocal",
          "kafka.timeline.metrics.reporter.sendInterval" : "5900",
          "super.users" : "User:kafka",
          "log.roll.hours" : "168",
          "sasl.mechanism.inter.broker.protocol" : "GSSAPI",
          "default.replication.factor" : "1",
          "kafka.timeline.metrics.port" : "{{metric_collector_port}}",
          "sasl.kerberos.principal.to.local.rules" : "RULE:[1:$1@$0](ambari-qa-dev@LBG.DEV)s/.*/ambari-qa/,RULE:[1:$1@$0](hdfs-dev@LBG.DEV)s/.*/hdfs/,RULE:[1:$1@$0](spark-dev@LBG.DEV)s/.*/spark/,RULE:[1:$1@$0](.*@LBG.DEV)s/@.*//,RULE:[2:$1@$0](beacon@LBG.DEV)s/.*/beacon/,RULE:[2:$1@$0](dn@LBG.DEV)s/.*/hdfs/,RULE:[2:$1@$0](hive@LBG.DEV)s/.*/hive/,RULE:[2:$1@$0](jhs@LBG.DEV)s/.*/mapred/,RULE:[2:$1@$0](knox@LBG.DEV)s/.*/knox/,RULE:[2:$1@$0](nm@LBG.DEV)s/.*/yarn/,RULE:[2:$1@$0](nn@LBG.DEV)s/.*/hdfs/,RULE:[2:$1@$0](rangeradmin@LBG.DEV)s/.*/ranger/,RULE:[2:$1@$0](rangertagsync@LBG.DEV)s/.*/rangertagsync/,RULE:[2:$1@$0](rangerusersync@LBG.DEV)s/.*/rangerusersync/,RULE:[2:$1@$0](rm@LBG.DEV)s/.*/yarn/,RULE:[2:$1@$0](yarn@LBG.DEV)s/.*/yarn/,DEFAULT",
          "offsets.topic.segment.bytes" : "104857600",
          "fetch.purgatory.purge.interval.requests" : "10000",
          "replica.socket.timeout.ms" : "30000",
          "message.max.bytes" : "1000000",
          "replica.lag.max.messages" : "4000",
          "kafka.ganglia.metrics.port" : "8671",
          "num.io.threads" : "8",
          "offsets.commit.required.acks" : "-1",
          "delete.topic.enable" : "false",
          "log.index.interval.bytes" : "4096",
          "offsets.commit.timeout.ms" : "5000",
          "log.segment.bytes" : "1073741824",
          "offset.metadata.max.bytes" : "4096",
          "zookeeper.connect" : "%HOSTGROUP::host_group_3%:2181,%HOSTGROUP::host_group_2%:2181",
          "authorizer.class.name" : "org.apache.ranger.authorization.kafka.authorizer.RangerKafkaAuthorizer",
          "port" : "6667",
          "zookeeper.sync.time.ms" : "2000",
          "num.replica.fetchers" : "1",
          "log.dirs" : "/kafka-logs",
          "controlled.shutdown.enable" : "true",
          "compression.type" : "producer",
          "offsets.load.buffer.size" : "5242880",
          "controlled.shutdown.max.retries" : "3",
          "offsets.topic.replication.factor" : "3",
          "queued.max.requests" : "500",
          "auto.leader.rebalance.enable" : "true",
          "leader.imbalance.check.interval.seconds" : "300",
          "replica.lag.time.max.ms" : "10000",
          "socket.request.max.bytes" : "104857600",
          "zookeeper.session.timeout.ms" : "30000",
          "kafka.timeline.metrics.truststore.path" : "{{metric_truststore_path}}",
          "log.retention.bytes" : "-1",
          "num.network.threads" : "3",
          "kafka.timeline.metrics.protocol" : "{{metric_collector_protocol}}",
          "offsets.retention.minutes" : "86400000",
          "zookeeper.set.acl" : "true",
          "kafka.metrics.reporters" : "",
          "log.cleanup.interval.mins" : "10",
          "socket.send.buffer.bytes" : "102400",
          "log.retention.hours" : "168",
          "kafka.timeline.metrics.reporter.enabled" : "true",
          "num.partitions" : "1",
          "listeners" : "PLAINTEXT://localhost:6667",
          "socket.receive.buffer.bytes" : "102400",
          "replica.fetch.min.bytes" : "1",
          "kafka.timeline.metrics.hosts" : "{{ams_collector_hosts}}",
          "sasl.enabled.mechanisms" : "GSSAPI",
          "external.kafka.metrics.exclude.prefix" : "kafka.network.RequestMetrics,kafka.server.DelayedOperationPurgatory,kafka.server.BrokerTopicMetrics.BytesRejectedPerSec,kafka.server.KafkaServer.ClusterId",
          "controller.message.queue.size" : "10",
          "kafka.ganglia.metrics.reporter.enabled" : "true",
          "log.index.size.max.bytes" : "10485760",
          "offsets.retention.check.interval.ms" : "600000",
          "producer.purgatory.purge.interval.requests" : "10000",
          "kafka.ganglia.metrics.group" : "kafka",
          "security.inter.broker.protocol" : "PLAINTEXTSASL",
          "offsets.topic.compression.codec" : "0",
          "replica.fetch.max.bytes" : "1048576",
          "leader.imbalance.per.broker.percentage" : "10",
          "kafka.timeline.metrics.truststore.type" : "{{metric_truststore_type}}"
        }
      }
    },
    {
      "pig-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\n\n# ***** Set root logger level to DEBUG and its only appender to A.\nlog4j.logger.org.apache.pig=info, A\n\n# ***** A is set to be a ConsoleAppender.\nlog4j.appender.A=org.apache.log4j.ConsoleAppender\n# ***** A uses PatternLayout.\nlog4j.appender.A.layout=org.apache.log4j.PatternLayout\nlog4j.appender.A.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n"
        }
      }
    },
    {
      "spark2-env" : {
        "properties_attributes" : { },
        "properties" : {
          "spark_user" : "spark",
          "spark_group" : "spark",
          "spark_pid_dir" : "/var/run/spark2",
          "spark_thrift_cmd_opts" : "",
          "spark_daemon_memory" : "1024",
          "hive_kerberos_keytab" : "{{hive_kerberos_keytab}}",
          "spark_log_dir" : "/var/log/spark2",
          "content" : "\n#!/usr/bin/env bash\n\n# This file is sourced when running various Spark programs.\n# Copy it as spark-env.sh and edit that to configure Spark for your site.\n\n# Options read in YARN client mode\n#SPARK_EXECUTOR_INSTANCES=\"2\" #Number of workers to start (Default: 2)\n#SPARK_EXECUTOR_CORES=\"1\" #Number of cores for the workers (Default: 1).\n#SPARK_EXECUTOR_MEMORY=\"1G\" #Memory per Worker (e.g. 1000M, 2G) (Default: 1G)\n#SPARK_DRIVER_MEMORY=\"512M\" #Memory for Master (e.g. 1000M, 2G) (Default: 512 Mb)\n#SPARK_YARN_APP_NAME=\"spark\" #The name of your application (Default: Spark)\n#SPARK_YARN_QUEUE=\"default\" #The hadoop queue to use for allocation requests (Default: default)\n#SPARK_YARN_DIST_FILES=\"\" #Comma separated list of files to be distributed with the job.\n#SPARK_YARN_DIST_ARCHIVES=\"\" #Comma separated list of archives to be distributed with the job.\n\n# Generic options for the daemons used in the standalone deploy mode\n\n# Alternate conf dir. (Default: ${SPARK_HOME}/conf)\nexport SPARK_CONF_DIR=${SPARK_CONF_DIR:-{{spark_home}}/conf}\n\n# Where log files are stored.(Default:${SPARK_HOME}/logs)\n#export SPARK_LOG_DIR=${SPARK_HOME:-{{spark_home}}}/logs\nexport SPARK_LOG_DIR={{spark_log_dir}}\n\n# Where the pid file is stored. (Default: /tmp)\nexport SPARK_PID_DIR={{spark_pid_dir}}\n\n#Memory for Master, Worker and history server (default: 1024MB)\nexport SPARK_DAEMON_MEMORY={{spark_daemon_memory}}m\n\n# A string representing this instance of spark.(Default: $USER)\nSPARK_IDENT_STRING=$USER\n\n# The scheduling priority for daemons. (Default: 0)\nSPARK_NICENESS=0\n\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\nexport HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-{{hadoop_conf_dir}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java_home}}"
        }
      }
    },
    {
      "hive-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "hive_log_maxbackupindex" : "30",
          "hive_log_maxfilesize" : "256",
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\nhive.log.threshold=ALL\nhive.root.logger={{hive_log_level}},DRFA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.log.file=hive.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshold=${hive.log.threshold}\n\n#\n# Daily Rolling File Appender\n#\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\n# for different CLI session.\n#\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex= {{hive_log_maxbackupindex}}\nlog4j.appender.DRFA.MaxFileSize = {{hive_log_maxfilesize}}MB\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nlog4j.appender.console.encoding=UTF-8\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,DRFA\nlog4j.category.Datastore=ERROR,DRFA\nlog4j.category.Datastore.Schema=ERROR,DRFA\nlog4j.category.JPOX.Datastore=ERROR,DRFA\nlog4j.category.JPOX.Plugin=ERROR,DRFA\nlog4j.category.JPOX.MetaData=ERROR,DRFA\nlog4j.category.JPOX.Query=ERROR,DRFA\nlog4j.category.JPOX.General=ERROR,DRFA\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA"
        }
      }
    },
    {
      "slider-client" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "spark2-hive-site-override" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.metastore.client.connect.retry.delay" : "5",
          "hive.server2.enable.doAs" : "false",
          "hive.server2.thrift.port" : "10016",
          "hive.server2.transport.mode" : "binary",
          "hive.metastore.client.socket.timeout" : "1800"
        }
      }
    },
    {
      "tez-env" : {
        "properties_attributes" : { },
        "properties" : {
          "heap_dump_location" : "/tmp",
          "content" : "\n# Tez specific configuration\nexport TEZ_CONF_DIR={{config_dir}}\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}",
          "enable_heap_dump" : "false",
          "tez_user" : "tez"
        }
      }
    },
    {
      "beeline-log4j2" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = BeelineLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = {{hive_log_level}}\nproperty.hive.root.logger = console\n\n# list of all appenders\nappenders = console\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\n\n# list of all loggers\nloggers = HiveConnection\n\n# HiveConnection logs useful info for dynamic service discovery\nlogger.HiveConnection.name = org.apache.hive.jdbc.HiveConnection\nlogger.HiveConnection.level = INFO\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
        }
      }
    },
    {
      "spark2-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "SPARK2_JOBHISTORYSERVER:spark2_jobhistory_server;SPARK2_THRIFTSERVER:spark2_thriftserver;LIVY2_SERVER:livy2_server",
          "content" : "\n{\n   \"input\":[\n      {\n       \"type\":\"spark2_jobhistory_server\",\n       \"rowtype\":\"service\",\n       \"path\":\"{{default('/configurations/spark2-env/spark_log_dir', '/var/log/spark2')}}/spark-*-org.apache.spark.deploy.history.HistoryServer*.out\"\n     },\n     {\n       \"type\":\"spark2_thriftserver\",\n       \"rowtype\":\"service\",\n       \"path\":\"{{default('/configurations/spark2-env/spark_log_dir', '/var/log/spark2')}}/spark-*-org.apache.spark.sql.hive.thriftserver.HiveThriftServer2*.out\"\n     },\n     {\n       \"type\":\"livy2_server\",\n       \"rowtype\":\"service\",\n       \"path\":\"{{default('/configurations/livy2-env/livy2_log_dir', '/var/log/livy2')}}/livy-livy-server.out\"\n     }\n   ],\n   \"filter\":[\n      {\n          \"filter\":\"grok\",\n          \"conditions\":{\n            \"fields\":{\n              \"type\":[\n                \"spark2_jobhistory_server\",\n                \"spark2_thriftserver\",\n                \"livy2_server\"\n              ]\n             }\n          },\n          \"log4j_format\":\"\",\n          \"multiline_pattern\":\"^(%{SPARK_DATESTAMP:logtime}%{SPACE}%{LOGLEVEL:level})\",\n          \"message_pattern\":\"(?m)^%{SPARK_DATESTAMP:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVAFILE:file}:%{SPACE}%{GREEDYDATA:log_message}\",\n          \"post_map_values\":{\n            \"logtime\":{\n              \"map_date\":{\n                \"target_date_pattern\":\"yy/MM/dd HH:mm:ss\"\n              }\n             },\n            \"level\":{\n              \"map_fieldvalue\":{\n                \"pre_value\":\"WARNING\",\n                \"post_value\":\"WARN\"\n              }\n             }\n           }\n      }\n   ]\n}",
          "service_name" : "Spark2"
        }
      }
    },
    {
      "kafka_client_jaas_conf" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n{% if kerberos_security_enabled %}\nKafkaClient {\ncom.sun.security.auth.module.Krb5LoginModule required\nuseTicketCache=true\nrenewTicket=true\nserviceName=\"{{kafka_bare_jaas_principal}}\";\n};\n{% endif %}"
        }
      }
    },
    {
      "capacity-scheduler" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn.scheduler.capacity.root.accessible-node-labels" : "*",
          "yarn.scheduler.capacity.default.minimum-user-limit-percent" : "100",
          "yarn.scheduler.capacity.maximum-am-resource-percent" : "0.2",
          "yarn.scheduler.capacity.root.acl_administer_queue" : "yarn",
          "yarn.scheduler.capacity.root.default.acl_administer_jobs" : "yarn",
          "yarn.scheduler.capacity.resource-calculator" : "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
          "yarn.scheduler.capacity.root.default.capacity" : "100",
          "yarn.scheduler.capacity.root.default.user-limit-factor" : "1",
          "yarn.scheduler.capacity.root.acl_administer_jobs" : "yarn",
          "yarn.scheduler.capacity.root.queues" : "default",
          "yarn.scheduler.capacity.root.capacity" : "100",
          "yarn.scheduler.capacity.root.default.acl_submit_applications" : "yarn",
          "yarn.scheduler.capacity.root.default.maximum-capacity" : "100",
          "yarn.scheduler.capacity.node-locality-delay" : "40",
          "yarn.scheduler.capacity.root.default.acl_administer_queue" : "yarn",
          "yarn.scheduler.capacity.maximum-applications" : "10000",
          "yarn.scheduler.capacity.root.default.state" : "RUNNING"
        }
      }
    },
    {
      "webhcat-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "webhcat_log_maxfilesize" : "256",
          "webhcat_log_maxbackupindex" : "20",
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Define some default values that can be overridden by system properties\nwebhcat.root.logger = {{hive_log_level}}, standard\nwebhcat.log.dir = .\nwebhcat.log.file = webhcat.log\n\nlog4j.rootLogger = ${webhcat.root.logger}\n\n# Logging Threshold\nlog4j.threshhold = DEBUG\n\nlog4j.appender.standard  =  org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.standard.File = ${webhcat.log.dir}/${webhcat.log.file}\nlog4j.appender.standard.MaxFileSize = {{webhcat_log_maxfilesize}}MB\nlog4j.appender.standard.MaxBackupIndex = {{webhcat_log_maxbackupindex}}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern = .yyyy-MM-dd\n\nlog4j.appender.DRFA.layout = org.apache.log4j.PatternLayout\n\nlog4j.appender.standard.layout = org.apache.log4j.PatternLayout\nlog4j.appender.standard.layout.conversionPattern = %-5p | %d{DATE} | %c | %m%n\n\n# Class logging settings\nlog4j.logger.com.sun.jersey = DEBUG\nlog4j.logger.com.sun.jersey.spi.container.servlet.WebComponent = ERROR\nlog4j.logger.org.apache.hadoop = INFO\nlog4j.logger.org.apache.hadoop.conf = WARN\nlog4j.logger.org.apache.zookeeper = WARN\nlog4j.logger.org.eclipse.jetty = INFO"
        }
      }
    },
    {
      "hadoop-metrics2.properties" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements. See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# syntax: [prefix].[source|sink|jmx].[instance].[options]\n# See package.html for org.apache.hadoop.metrics2 for details\n\n{% if has_ganglia_server %}\n*.period=60\n\n*.sink.ganglia.class=org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31\n*.sink.ganglia.period=10\n\n# default for supportsparse is false\n*.sink.ganglia.supportsparse=true\n\n.sink.ganglia.slope=jvm.metrics.gcCount=zero,jvm.metrics.memHeapUsedM=both\n.sink.ganglia.dmax=jvm.metrics.threadsBlocked=70,jvm.metrics.memHeapUsedM=40\n\n# Hook up to the server\nnamenode.sink.ganglia.servers={{ganglia_server_host}}:8661\ndatanode.sink.ganglia.servers={{ganglia_server_host}}:8659\njobtracker.sink.ganglia.servers={{ganglia_server_host}}:8662\ntasktracker.sink.ganglia.servers={{ganglia_server_host}}:8658\nmaptask.sink.ganglia.servers={{ganglia_server_host}}:8660\nreducetask.sink.ganglia.servers={{ganglia_server_host}}:8660\nresourcemanager.sink.ganglia.servers={{ganglia_server_host}}:8664\nnodemanager.sink.ganglia.servers={{ganglia_server_host}}:8657\nhistoryserver.sink.ganglia.servers={{ganglia_server_host}}:8666\njournalnode.sink.ganglia.servers={{ganglia_server_host}}:8654\nnimbus.sink.ganglia.servers={{ganglia_server_host}}:8649\nsupervisor.sink.ganglia.servers={{ganglia_server_host}}:8650\n\nresourcemanager.sink.ganglia.tagsForPrefix.yarn=Queue\n\n{% endif %}\n\n{% if has_metric_collector %}\n\n*.period={{metrics_collection_period}}\n*.sink.timeline.plugin.urls=file:///usr/lib/ambari-metrics-hadoop-sink/ambari-metrics-hadoop-sink.jar\n*.sink.timeline.class=org.apache.hadoop.metrics2.sink.timeline.HadoopTimelineMetricsSink\n*.sink.timeline.period={{metrics_collection_period}}\n*.sink.timeline.sendInterval={{metrics_report_interval}}000\n*.sink.timeline.slave.host.name={{hostname}}\n*.sink.timeline.zookeeper.quorum={{zookeeper_quorum}}\n*.sink.timeline.protocol={{metric_collector_protocol}}\n*.sink.timeline.port={{metric_collector_port}}\n\n# HTTPS properties\n*.sink.timeline.truststore.path = {{metric_truststore_path}}\n*.sink.timeline.truststore.type = {{metric_truststore_type}}\n*.sink.timeline.truststore.password = {{metric_truststore_password}}\n\ndatanode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nnamenode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nresourcemanager.sink.timeline.collector.hosts={{ams_collector_hosts}}\nnodemanager.sink.timeline.collector.hosts={{ams_collector_hosts}}\njobhistoryserver.sink.timeline.collector.hosts={{ams_collector_hosts}}\njournalnode.sink.timeline.collector.hosts={{ams_collector_hosts}}\nmaptask.sink.timeline.collector.hosts={{ams_collector_hosts}}\nreducetask.sink.timeline.collector.hosts={{ams_collector_hosts}}\napplicationhistoryserver.sink.timeline.collector.hosts={{ams_collector_hosts}}\n\nresourcemanager.sink.timeline.tagsForPrefix.yarn=Queue\n\n{% if is_nn_client_port_configured %}\n# Namenode rpc ports customization\nnamenode.sink.timeline.metric.rpc.client.port={{nn_rpc_client_port}}\n{% endif %}\n{% if is_nn_dn_port_configured %}\nnamenode.sink.timeline.metric.rpc.datanode.port={{nn_rpc_dn_port}}\n{% endif %}\n{% if is_nn_healthcheck_port_configured %}\nnamenode.sink.timeline.metric.rpc.healthcheck.port={{nn_rpc_healthcheck_port}}\n{% endif %}\n\n{% endif %}"
        }
      }
    },
    {
      "admin-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger_xa_log_maxfilesize" : "256",
          "ranger_xa_log_maxbackupindex" : "20",
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nlog4j.rootLogger = warn,xa_log_appender\n\n\n# xa_logger\nlog4j.appender.xa_log_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.xa_log_appender.file=${logdir}/xa_portal.log\nlog4j.appender.xa_log_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.xa_log_appender.append=true\nlog4j.appender.xa_log_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.xa_log_appender.layout.ConversionPattern=%d [%t] %-5p %C{6} (%F:%L) - %m%n\nlog4j.appender.xa_log_appender.MaxFileSize={{ranger_xa_log_maxfilesize}}MB\n\n# xa_log_appender : category and additivity\nlog4j.category.org.springframework=warn,xa_log_appender\nlog4j.additivity.org.springframework=false\n\nlog4j.category.org.apache.ranger=info,xa_log_appender\nlog4j.additivity.org.apache.ranger=false\n\nlog4j.category.xa=info,xa_log_appender\nlog4j.additivity.xa=false\n\n# perf_logger\nlog4j.appender.perf_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.perf_appender.file=${logdir}/ranger_admin_perf.log\nlog4j.appender.perf_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.perf_appender.append=true\nlog4j.appender.perf_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.perf_appender.layout.ConversionPattern=%d [%t] %m%n\n\n\n# sql_appender\nlog4j.appender.sql_appender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.sql_appender.file=${logdir}/xa_portal_sql.log\nlog4j.appender.sql_appender.datePattern='.'yyyy-MM-dd\nlog4j.appender.sql_appender.append=true\nlog4j.appender.sql_appender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.sql_appender.layout.ConversionPattern=%d [%t] %-5p %C{6} (%F:%L) - %m%n\n\n# sql_appender : category and additivity\nlog4j.category.org.hibernate.SQL=warn,sql_appender\nlog4j.additivity.org.hibernate.SQL=false\n\nlog4j.category.jdbc.sqlonly=fatal,sql_appender\nlog4j.additivity.jdbc.sqlonly=false\n\nlog4j.category.jdbc.sqltiming=warn,sql_appender\nlog4j.additivity.jdbc.sqltiming=false\n\nlog4j.category.jdbc.audit=fatal,sql_appender\nlog4j.additivity.jdbc.audit=false\n\nlog4j.category.jdbc.resultset=fatal,sql_appender\nlog4j.additivity.jdbc.resultset=false\n\nlog4j.category.jdbc.connection=fatal,sql_appender\nlog4j.additivity.jdbc.connection=false"
        }
      }
    },
    {
      "hiveserver2-interactive-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.async.log.enabled" : "false",
          "hive.service.metrics.hadoop2.component" : "hiveserver2",
          "hive.metastore.metrics.enabled" : "true",
          "hive.service.metrics.reporter" : "HADOOP2"
        }
      }
    },
    {
      "ranger-tagsync-site" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger.tagsync.kerberos.keytab" : "/etc/security/keytabs/rangertagsync.service.keytab",
          "ranger.tagsync.dest.ranger.ssl.config.filename" : "{{stack_root}}/current/ranger-tagsync/conf/ranger-policymgr-ssl.xml",
          "ranger.tagsync.atlas.default.cluster.name" : "{{cluster_name}}",
          "ranger.tagsync.source.atlasrest.download.interval.millis" : "60000",
          "ranger.tagsync.source.file" : "false",
          "ranger.tagsync.source.file.filename" : "",
          "ranger.tagsync.source.atlasrest.username" : "admin",
          "ranger.tagsync.source.atlasrest.endpoint" : "",
          "ranger.tagsync.source.atlasrest.ssl.config.filename" : "{{stack_root}}/current/ranger-tagsync/conf/atlas-tagsync-ssl.xml",
          "ranger.tagsync.keystore.filename" : "/usr/hdp/current/ranger-tagsync/conf/rangertagsync.jceks",
          "ranger.tagsync.dest.ranger.endpoint" : "{{ranger_external_url}}",
          "ranger.tagsync.dest.ranger.username" : "rangertagsync",
          "ranger.tagsync.source.atlas" : "false",
          "ranger.tagsync.logdir" : "/var/log/ranger/tagsync",
          "ranger.tagsync.source.atlasrest" : "false",
          "ranger.tagsync.source.atlasrest.keystore.filename" : "/usr/hdp/current/ranger-tagsync/conf/atlasuser.jceks",
          "ranger.tagsync.source.file.check.interval.millis" : ""
        }
      }
    },
    {
      "krb5-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "manage_krb5_conf" : "true",
          "conf_dir" : "/etc",
          "content" : "{#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#}\n[libdefaults]\n  renew_lifetime = 7d\n  forwardable = true\n  default_realm = {{realm}}\n  ticket_lifetime = 24h\n  dns_lookup_realm = false\n  dns_lookup_kdc = false\n  default_ccache_name = /tmp/krb5cc_%{uid}\n  #default_tgs_enctypes = {{encryption_types}}\n  #default_tkt_enctypes = {{encryption_types}}\n{% if domains %}\n[domain_realm]\n{%- for domain in domains.split(',') %}\n  {{domain|trim()}} = {{realm}}\n{%- endfor %}\n{% endif %}\n[logging]\n  default = FILE:/var/log/krb5kdc.log\n  admin_server = FILE:/var/log/kadmind.log\n  kdc = FILE:/var/log/krb5kdc.log\n\n[realms]\n  {{realm}} = {\n{%- if master_kdc %}\n    master_kdc = {{master_kdc|trim()}}\n{%- endif -%}\n{%- if kdc_hosts > 0 -%}\n{%- set kdc_host_list = kdc_hosts.split(',')  -%}\n{%- if kdc_host_list and kdc_host_list|length > 0 %}\n    admin_server = {{admin_server_host|default(kdc_host_list[0]|trim(), True)}}\n{%- if kdc_host_list -%}\n{%- if master_kdc and (master_kdc not in kdc_host_list) %}\n    kdc = {{master_kdc|trim()}}\n{%- endif -%}\n{% for kdc_host in kdc_host_list %}\n    kdc = {{kdc_host|trim()}}\n{%- endfor -%}\n{% endif %}\n{%- endif %}\n{%- endif %}\n  }\n\n{# Append additional realm declarations below #}"
        }
      }
    },
    {
      "example-collection" : {
        "properties_attributes" : { },
        "properties" : {
          "solr_collection_sample_replicas" : "1",
          "solr_collection_sample_config_directory" : "data_driven_schema_configs",
          "solr_collection_sample_shards" : "2",
          "solr_collection_sample_create" : "true",
          "solr_collection_sample_name" : "collection1"
        }
      }
    },
    {
      "ranger-admin-site" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger.admin.kerberos.cookie.path" : "/",
          "xasecure.audit.jaas.Client.option.serviceName" : "solr",
          "ranger.sso.browser.useragent" : "Mozilla,chrome",
          "ranger.truststore.alias" : "trustStoreAlias",
          "xasecure.audit.jaas.Client.option.useKeyTab" : "true",
          "ranger.jpa.jdbc.dialect" : "{{jdbc_dialect}}",
          "ranger.jpa.jdbc.user" : "{{ranger_db_user}}",
          "ranger.https.attrib.keystore.file" : "/etc/ranger/admin/conf/ranger-admin-keystore.jks",
          "ranger.admin.kerberos.cookie.domain" : "{{ranger_host}}",
          "ranger.service.http.enabled" : "true",
          "ranger.admin.kerberos.token.valid.seconds" : "30",
          "ranger.plugins.kafka.serviceuser" : "kafka",
          "ranger.plugins.atlas.serviceuser" : "atlas",
          "ranger.ldap.ad.url" : "{{ranger_ug_ldap_url}}",
          "ranger.truststore.file" : "/etc/ranger/admin/conf/ranger-admin-keystore.jks",
          "ranger.audit.solr.username" : "ranger_solr",
          "ranger.lookup.kerberos.keytab" : "/etc/security/keytabs/rangerlookup.service.keytab",
          "ranger.ldap.base.dn" : "dc=example,dc=com",
          "ranger.plugins.knox.serviceuser" : "knox",
          "ranger.kms.service.user.hive" : "hive",
          "ranger.ldap.group.roleattribute" : "cn",
          "ranger.plugins.hive.serviceuser" : "hive",
          "ranger.unixauth.remote.login.enabled" : "true",
          "ranger.plugins.kms.serviceuser" : "kms",
          "ranger.authentication.method" : "LDAP",
          "ranger.ldap.user.dnpattern" : "uid={0},ou=users,dc=xasecure,dc=net",
          "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
          "ranger.ldap.ad.bind.dn" : "{{ranger_ug_ldap_bind_dn}}",
          "ranger.ldap.group.searchfilter" : "{{ranger_ug_ldap_group_searchfilter}}",
          "ranger.service.https.attrib.ssl.enabled" : "false",
          "ranger.audit.solr.urls" : "",
          "ranger.service.https.attrib.clientAuth" : "want",
          "ranger.sso.enabled" : "false",
          "ranger.ldap.group.searchbase" : "{{ranger_ug_ldap_group_searchbase}}",
          "ranger.sso.publicKey" : "",
          "ranger.is.solr.kerberised" : "{{ranger_is_solr_kerberised}}",
          "ranger.jpa.jdbc.credential.alias" : "rangeradmin",
          "ranger.unixauth.service.hostname" : "{{ugsync_host}}",
          "ranger.ldap.ad.binddn.credential.alias" : "ranger.ldap.ad.bind.password",
          "ranger.kms.service.user.hdfs" : "hdfs",
          "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
          "ranger.plugins.storm.serviceuser" : "storm",
          "ranger.spnego.kerberos.keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "ranger.jpa.jdbc.url" : "jdbc:postgresql://postgres.lbg.dev:5432/ranger",
          "ranger.service.host" : "{{ranger_host}}",
          "ranger.ldap.bind.dn" : "{{ranger_ug_ldap_bind_dn}}",
          "ranger.service.http.port" : "6080",
          "ranger.plugins.yarn.serviceuser" : "yarn",
          "ranger.ldap.url" : "{{ranger_ug_ldap_url}}",
          "ranger.jpa.jdbc.driver" : "org.postgresql.Driver",
          "ranger.ldap.binddn.credential.alias" : "ranger.ldap.bind.password",
          "ranger.unixauth.service.port" : "5151",
          "ranger.ldap.ad.base.dn" : "dc=example,dc=com",
          "ranger.ldap.referral" : "ignore",
          "ranger.service.https.attrib.keystore.keyalias" : "rangeradmin",
          "ranger.ldap.ad.referral" : "ignore",
          "xasecure.audit.jaas.Client.option.keyTab" : "/etc/security/keytabs/rangeradmin.service.keytab",
          "ranger.ldap.ad.domain" : "",
          "ranger.ldap.ad.user.searchfilter" : "(sAMAccountName={0})",
          "ranger.credential.provider.path" : "/etc/ranger/admin/rangeradmin.jceks",
          "ranger.sso.providerurl" : "",
          "xasecure.audit.jaas.Client.option.principal" : "rangeradmin/_HOST@LBG.DEV",
          "ranger.ldap.user.searchfilter" : "(uid={0})",
          "ranger.plugins.hbase.serviceuser" : "hbase",
          "ranger.audit.source.type" : "solr",
          "ranger.service.https.attrib.keystore.credential.alias" : "keyStoreCredentialAlias",
          "ranger.audit.solr.zookeepers" : "NONE",
          "ranger.admin.kerberos.keytab" : "/etc/security/keytabs/rangeradmin.service.keytab",
          "ranger.externalurl" : "{{ranger_external_url}}",
          "ranger.plugins.hdfs.serviceuser" : "hdfs",
          "xasecure.audit.jaas.Client.option.storeKey" : "false",
          "ranger.service.https.port" : "6182"
        }
      }
    },
    {
      "ranger-kafka-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.policymgr.clientssl.truststore" : "cacerts-xasecure.jks",
          "xasecure.policymgr.clientssl.keystore" : "kafkadev-clientcert.jks",
          "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file/{{credential_file}}",
          "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file/{{credential_file}}"
        }
      }
    },
    {
      "ranger-env" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger-hive-plugin-enabled" : "Yes",
          "admin_username" : "admin",
          "ranger-hbase-plugin-enabled" : "No",
          "ranger-hdfs-plugin-enabled" : "Yes",
          "ranger_solr_config_set" : "ranger_audits",
          "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_4%:8020/ranger/audit",
          "ranger_privelege_user_jdbc_url" : "jdbc:postgresql://postgres.lbg.dev:5432/postgres",
          "ranger-kafka-plugin-enabled" : "Yes",
          "ranger-nifi-plugin-enabled" : "No",
          "ranger_user" : "ranger",
          "is_external_solrCloud_enabled" : "false",
          "xasecure.audit.destination.solr" : "false",
          "ranger_solr_collection_name" : "ranger_audits",
          "is_external_solrCloud_kerberos" : "false",
          "ranger_group" : "ranger",
          "ranger_usersync_log_dir" : "/var/log/ranger/usersync",
          "is_solrCloud_enabled" : "false",
          "xasecure.audit.destination.hdfs" : "true",
          "ranger_admin_log_dir" : "/var/log/ranger/admin",
          "ranger-knox-plugin-enabled" : "No",
          "is_nested_groupsync_enabled" : "false",
          "ranger-atlas-plugin-enabled" : "No",
          "xml_configurations_supported" : "true",
          "ranger-yarn-plugin-enabled" : "Yes",
          "ranger_solr_replication_factor" : "1",
          "ranger_admin_username" : "amb_ranger_admin",
          "ranger_solr_shards" : "1",
          "ranger_pid_dir" : "/var/run/ranger",
          "create_db_dbuser" : "true",
          "ranger-storm-plugin-enabled" : "No"
        }
      }
    },
    {
      "solr-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n      # Licensed to the Apache Software Foundation (ASF) under one or more\n      # contributor license agreements.  See the NOTICE file distributed with\n      # this work for additional information regarding copyright ownership.\n      # The ASF licenses this file to You under the Apache License, Version 2.0\n      # (the \"License\"); you may not use this file except in compliance with\n      # the License.  You may obtain a copy of the License at\n      #\n      #     http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      #  Logging level\n      solr.log={{solr_config_log_dir}}\n      #log4j.rootLogger=INFO, file, CONSOLE\n      log4j.rootLogger=INFO, file\n\n      log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\n\n      log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\n      log4j.appender.CONSOLE.layout.ConversionPattern=%-4r [%t] %-5p %c %x [%X{collection} %X{shard} %X{replica} %X{core}] \\u2013 %m%n\n\n      #- size rotation with log cleanup.\n      log4j.appender.file=org.apache.log4j.RollingFileAppender\n      log4j.appender.file.MaxFileSize=10MB\n      log4j.appender.file.MaxBackupIndex=9\n\n      #- File to log to and log format\n      log4j.appender.file.File=${solr.log}/solr.log\n      log4j.appender.file.layout=org.apache.log4j.PatternLayout\n      log4j.appender.file.layout.ConversionPattern=%d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n\n\n      log4j.logger.org.apache.zookeeper=WARN\n      log4j.logger.org.apache.hadoop=WARN\n\n      # set to INFO to enable infostream log messages\n      log4j.logger.org.apache.solr.update.LoggingInfoStream=OFF"
        }
      }
    },
    {
      "hdfs-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "hadoop_security_log_max_backup_size" : "256",
          "hadoop_security_log_number_of_backup_files" : "20",
          "hadoop_log_number_of_backup_files" : "10",
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize={{hadoop_security_log_max_backup_size}}MB\nhadoop.security.log.maxbackupindex={{hadoop_security_log_number_of_backup_files}}\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.additivity.SecurityLogger=false\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# NameNode metrics logging.\n# The default is to retain two namenode-metrics.log files up to 64MB each.\n#\nnamenode.metrics.logger=INFO,NullAppender\nlog4j.logger.NameNodeMetricsLog=${namenode.metrics.logger}\nlog4j.additivity.NameNodeMetricsLog=false\nlog4j.appender.NNMETRICSRFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.NNMETRICSRFA.File=${hadoop.log.dir}/namenode-metrics.log\nlog4j.appender.NNMETRICSRFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NNMETRICSRFA.layout.ConversionPattern=%d{ISO8601} %m%n\nlog4j.appender.NNMETRICSRFA.MaxBackupIndex=1\nlog4j.appender.NNMETRICSRFA.MaxFileSize=64MB\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize={{hadoop_log_max_backup_size}}MB\nlog4j.appender.RFA.MaxBackupIndex={{hadoop_log_number_of_backup_files}}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN",
          "hadoop_log_max_backup_size" : "256"
        }
      }
    },
    {
      "solr-hdfs" : {
        "properties_attributes" : { },
        "properties" : {
          "solr_hdfs_delete_write_lock_files" : "false",
          "solr_hdfs_enable" : "true",
          "solr_hdfs_directory" : "/solr"
        }
      }
    },
    {
      "solr-config-env" : {
        "properties_attributes" : { },
        "properties" : {
          "solr_config_user" : "solr",
          "solr_metrics_keytab_path" : "/etc/security/keytabs/solr.metrics.service.keytab",
          "solr_keytab_path" : "/etc/security/keytabs/solr.service.keytab",
          "solr_config_port" : "8983",
          "solr_config_log_dir" : "/var/log/solr",
          "solr_config_service_log_dir" : "/var/log/service_solr",
          "solr_config_memory" : "512m",
          "solr_config_pid_dir" : "/var/run/solr",
          "solr_principal_name" : "solr/_HOST@LBG.DEV",
          "solr_spnego_principal_name" : "HTTP/_HOST@LBG.DEV",
          "solr_config_group" : "solr",
          "solr_config_conf_dir" : "/etc/solr/conf",
          "solr_spnego_keytab_path" : "/etc/security/keytabs/spnego.service.keytab",
          "solr_config_data_dir" : "/etc/solr/data_dir",
          "solr_metrics_principal_name" : "solr_metrics/_HOST@LBG.DEV",
          "solr_in_sh_template" : "\n            # Licensed to the Apache Software Foundation (ASF) under one or more\n            # contributor license agreements.  See the NOTICE file distributed with\n            # this work for additional information regarding copyright ownership.\n            # The ASF licenses this file to You under the Apache License, Version 2.0\n            # (the \"License\"); you may not use this file except in compliance with\n            # the License.  You may obtain a copy of the License at\n            #\n            #     http://www.apache.org/licenses/LICENSE-2.0\n            #\n            # Unless required by applicable law or agreed to in writing, software\n            # distributed under the License is distributed on an \"AS IS\" BASIS,\n            # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n            # See the License for the specific language governing permissions and\n            # limitations under the License.\n\n            # By default the script will use JAVA_HOME to determine which java\n            # to use, but you can set a specific path for Solr to use without\n            # affecting other Java applications on your server/workstation.\n            SOLR_JAVA_HOME={{java64_home}}\n\n            # Increase Java Heap as needed to support your indexing / query needs\n            SOLR_HEAP=\"{{solr_config_memory}}\"\n\n            # Expert: If you want finer control over memory options, specify them directly\n            # Comment out SOLR_HEAP if you are using this though, that takes precedence\n            # SOLR_JAVA_MEM=\"-Xms512m -Xmx512m\"\n\n            # Enable verbose GC logging\n            GC_LOG_OPTS=\"-verbose:gc -XX:+PrintHeapAtGC -XX:+PrintGCDetails \\\n            -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime\"\n\n            # These GC settings have shown to work well for a number of common Solr workloads\n            GC_TUNE=\"-XX:NewRatio=3 \\\n            -XX:SurvivorRatio=4 \\\n            -XX:TargetSurvivorRatio=90 \\\n            -XX:MaxTenuringThreshold=8 \\\n            -XX:+UseConcMarkSweepGC \\\n            -XX:+UseParNewGC \\\n            -XX:ConcGCThreads=4 -XX:ParallelGCThreads=4 \\\n            -XX:+CMSScavengeBeforeRemark \\\n            -XX:PretenureSizeThreshold=64m \\\n            -XX:+UseCMSInitiatingOccupancyOnly \\\n            -XX:CMSInitiatingOccupancyFraction=50 \\\n            -XX:CMSMaxAbortablePrecleanTime=6000 \\\n            -XX:+CMSParallelRemarkEnabled \\\n            -XX:+ParallelRefProcEnabled\"\n\n            {{solr_hdfs_prefix}}GC_TUNE=\"$GC_TUNE -XX:MaxDirectMemorySize=20g -XX:+UseLargePages\"\n\n            # Set the ZooKeeper connection string if using an external ZooKeeper ensemble\n            # e.g. host1:2181,host2:2181/chroot\n            # Leave empty if not using SolrCloud\n            {{solr_cloud_mode_prefix}}ZK_HOST=\"{{zookeeper_hosts}}{{solr_cloud_zk_directory}}\"\n\n            # Set the ZooKeeper client timeout (for SolrCloud mode)\n            #ZK_CLIENT_TIMEOUT=\"15000\"\n\n            # By default the start script uses \"localhost\"; override the hostname here\n            # for production SolrCloud environments to control the hostname exposed to cluster state\n            SOLR_HOST=\"{{solr_hostname}}\"\n\n            # By default the start script uses UTC; override the timezone if needed\n            #SOLR_TIMEZONE=\"UTC\"\n\n            # Set to true to activate the JMX RMI connector to allow remote JMX client applications\n            # to monitor the JVM hosting Solr; set to \"false\" to disable that behavior\n            # (false is recommended in production environments)\n            ENABLE_REMOTE_JMX_OPTS=\"false\"\n\n            # The script will use SOLR_PORT+10000 for the RMI_PORT or you can set it here\n            # RMI_PORT=18983\n\n            # Set the thread stack size\n            SOLR_OPTS=\"$SOLR_OPTS -Xss256k\"\n\n            # Anything you add to the SOLR_OPTS variable will be included in the java\n            # start command line as-is, in ADDITION to other options. If you specify the\n            # -a option on start script, those options will be appended as well. Examples:\n            #SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=3000\"\n            #SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoCommit.maxTime=60000\"\n            #SOLR_OPTS=\"$SOLR_OPTS -Dsolr.clustering.enabled=true\"\n\n            # Not cloud + kerberos start settings\n            {{solr_not_cloud_mode_prefix}}{{solr_kerberos_prefix}}SOLR_OPTS=\"$SOLR_OPTS \\\n            {{solr_not_cloud_mode_prefix}}{{solr_kerberos_prefix}}-DauthenticationPlugin=org.apache.solr.security.KerberosPlugin\"\n\n            # HDFS start settings\n            {{solr_hdfs_prefix}}SOLR_OPTS=\"$SOLR_OPTS -Dsolr.directoryFactory=HdfsDirectoryFactory \\\n            {{solr_hdfs_prefix}} -Dsolr.lock.type=hdfs -Dsolr.hdfs.home={{default_fs}}{{solr_hdfs_directory}} \\\n            {{solr_hdfs_prefix}} -Dsolr.hdfs.confdir={{hadoop_conf_dir}}\"\n\n            # Kerberos + HDFS start settings\n            {{solr_hdfs_prefix}}{{solr_kerberos_prefix}}SOLR_OPTS=\"$SOLR_OPTS \\\n            {{solr_hdfs_prefix}}{{solr_kerberos_prefix}}-Dsolr.hdfs.security.kerberos.enabled=true \\\n            {{solr_hdfs_prefix}}{{solr_kerberos_prefix}}-Dsolr.hdfs.security.kerberos.keytabfile={{solr_kerberos_keytab}} \\\n            {{solr_hdfs_prefix}}{{solr_kerberos_prefix}}-Dsolr.hdfs.security.kerberos.principal={{solr_kerberos_principal}}\"\n\n            # Location where the bin/solr script will save PID files for running instances\n            # If not set, the script will create PID files in $SOLR_TIP/bin\n            SOLR_PID_DIR={{solr_config_pid_dir}}\n\n            # Path to a directory for Solr to store cores and their data. By default, Solr will use server/solr\n            # If solr.xml is not stored in ZooKeeper, this directory needs to contain solr.xml\n            SOLR_HOME={{solr_config_data_dir}}\n\n            # Solr provides a default Log4J configuration properties file in server/resources\n            # however, you may want to customize the log settings and file appender location\n            # so you can point the script to use a different log4j.properties file\n            LOG4J_PROPS={{solr_config_conf_dir}}/log4j.properties\n\n            # Location where Solr should write logs to; should agree with the file appender\n            # settings in server/resources/log4j.properties\n            SOLR_LOGS_DIR={{solr_config_log_dir}}\n\n            # Sets the port Solr binds to, default is 8983\n            SOLR_PORT={{solr_config_port}}\n\n            # Uncomment to set SSL-related system properties\n            # Be sure to update the paths to the correct keystore for your environment\n            {{solr_ssl_prefix}}SOLR_SSL_KEY_STORE={{ solr_ssl_key_store }}\n            {{solr_ssl_prefix}}SOLR_SSL_KEY_STORE_PASSWORD={{ solr_ssl_key_store_password }}\n            {{solr_ssl_prefix}}SOLR_SSL_TRUST_STORE={{ solr_ssl_trust_store }}\n            {{solr_ssl_prefix}}SOLR_SSL_TRUST_STORE_PASSWORD={{ solr_ssl_trust_store_password }}\n            {{solr_ssl_prefix}}SOLR_SSL_NEED_CLIENT_AUTH={{ solr_ssl_need_client_auth }}\n            {{solr_ssl_prefix}}SOLR_SSL_WANT_CLIENT_AUTH={{ solr_ssl_want_client_auth }}\n\n            # Uncomment if you want to override previously defined SSL values for HTTP client\n            # otherwise keep them commented and the above values will automatically be set for HTTP clients\n            #SOLR_SSL_CLIENT_KEY_STORE=\n            #SOLR_SSL_CLIENT_KEY_STORE_PASSWORD=\n            #SOLR_SSL_CLIENT_TRUST_STORE=\n            #SOLR_SSL_CLIENT_TRUST_STORE_PASSWORD=\n\n            # Settings for authentication\n            {{solr_kerberos_prefix}}SOLR_AUTHENTICATION_CLIENT_CONFIGURER=org.apache.solr.client.solrj.impl.Krb5HttpClientConfigurer\n            {{solr_kerberos_prefix}}SOLR_AUTHENTICATION_OPTS=\"-Djava.security.auth.login.config={{solr_kerberos_jaas_config}} \\\n            {{solr_kerberos_prefix}}-Dsolr.kerberos.cookie.domain={{solr_kerberos_cookie_domain}} \\\n            {{solr_kerberos_prefix}}-Dsolr.kerberos.cookie.portaware=true \\\n            {{solr_kerberos_prefix}}-Dsolr.kerberos.principal={{solr_spnego_principal}} \\\n            {{solr_kerberos_prefix}}-Dsolr.kerberos.keytab={{solr_spnego_keytab}}\""
        }
      }
    },
    {
      "usersync-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger_usersync_log_maxfilesize" : "256",
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nlog4j.rootLogger = info,logFile\n\n# logFile\nlog4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.logFile.file=${logdir}/usersync.log\nlog4j.appender.logFile.datePattern='.'yyyy-MM-dd\nlog4j.appender.logFile.layout=org.apache.log4j.PatternLayout\nlog4j.appender.logFile.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n\nlog4j.appender.logFile.MaxFileSize={{ranger_usersync_log_maxfilesize}}MB\n\n# console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target=System.out\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n",
          "ranger_usersync_log_maxbackupindex" : "20"
        }
      }
    },
    {
      "hive-exec-log4j2" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = INFO\nname = HiveExecLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = {{hive_log_level}}\nproperty.hive.root.logger = FA\nproperty.hive.query.id = hadoop\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = ${sys:hive.query.id}.log\n\n# list of all appenders\nappenders = console, FA\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{ISO8601} %5p [%t] %c{2}: %m%n\n\n# simple file appender\nappender.FA.type = RandomAccessFile\nappender.FA.name = FA\nappender.FA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\nappender.FA.layout.type = PatternLayout\nappender.FA.layout.pattern = %d{ISO8601} %5p [%t] %c{2}: %m%n\n\n# list of all loggers\nloggers = NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}"
        }
      }
    },
    {
      "solr-security" : {
        "properties_attributes" : { },
        "properties" : {
          "solr_security_json" : "\n      {\n        \"authentication\": {\n          \"class\": \"org.apache.solr.security.KerberosPlugin\"\n        }\n      }"
        }
      }
    },
    {
      "atlas-tagsync-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.policymgr.clientssl.truststore" : "/etc/security/serverKeys/atlas-tagsync-mytruststore.jks",
          "xasecure.policymgr.clientssl.keystore" : "/etc/security/serverKeys/atlas-tagsync-keystore.jks",
          "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{atlas_tagsync_credential_file}}",
          "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{atlas_tagsync_credential_file}}"
        }
      }
    },
    {
      "kafka-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "controller_log_maxbackupindex" : "20",
          "controller_log_maxfilesize" : "256",
          "kafka_log_maxfilesize" : "256",
          "content" : "\n#\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n#\nkafka.logs.dir=logs\n\nlog4j.rootLogger=INFO, stdout\n\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log\nlog4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\nlog4j.appender.kafkaAppender.MaxFileSize = {{kafka_log_maxfilesize}}MB\nlog4j.appender.kafkaAppender.MaxBackupIndex = {{kafka_log_maxbackupindex}}\n\nlog4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log\nlog4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log\nlog4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log\nlog4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\n\nlog4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log\nlog4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n\nlog4j.appender.controllerAppender.MaxFileSize = {{controller_log_maxfilesize}}MB\nlog4j.appender.controllerAppender.MaxBackupIndex = {{controller_log_maxbackupindex}}\n# Turn on all our debugging info\n#log4j.logger.kafka.producer.async.DefaultEventHandler=DEBUG, kafkaAppender\n#log4j.logger.kafka.client.ClientUtils=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf=DEBUG, kafkaAppender\n#log4j.logger.kafka.perf.ProducerPerformance$ProducerThread=DEBUG, kafkaAppender\n#log4j.logger.org.I0Itec.zkclient.ZkClient=DEBUG\nlog4j.logger.kafka=INFO, kafkaAppender\nlog4j.logger.kafka.network.RequestChannel$=WARN, requestAppender\nlog4j.additivity.kafka.network.RequestChannel$=false\n\n#log4j.logger.kafka.network.Processor=TRACE, requestAppender\n#log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender\n#log4j.additivity.kafka.server.KafkaApis=false\nlog4j.logger.kafka.request.logger=WARN, requestAppender\nlog4j.additivity.kafka.request.logger=false\n\nlog4j.logger.kafka.controller=TRACE, controllerAppender\nlog4j.additivity.kafka.controller=false\n\nlog4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender\nlog4j.additivity.kafka.log.LogCleaner=false\n\nlog4j.logger.state.change.logger=TRACE, stateChangeAppender\nlog4j.additivity.state.change.logger=false\nlog4j.appender.rangerAppender=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.rangerAppender.DatePattern='.'yyyy-MM-dd-HH\nlog4j.appender.rangerAppender.File=${kafka.logs.dir}/ranger_kafka.log\nlog4j.appender.rangerAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.rangerAppender.layout.ConversionPattern=%d{ISO8601} %p [%t] %C{6} (%F:%L) - %m%n\nlog4j.logger.org.apache.ranger=INFO, rangerAppender",
          "kafka_log_maxbackupindex" : "20"
        }
      }
    },
    {
      "kafka-env" : {
        "properties_attributes" : { },
        "properties" : {
          "kafka_pid_dir" : "/var/run/kafka",
          "kafka_user_nofile_limit" : "128000",
          "kafka_keytab" : "/etc/security/keytabs/kafka.service.keytab",
          "kafka_log_dir" : "/var/log/kafka",
          "kafka_user_nproc_limit" : "65536",
          "content" : "\n#!/bin/bash\n\n# Set KAFKA specific environment variables here.\n\n# The java implementation to use.\nexport JAVA_HOME={{java64_home}}\nexport PATH=$PATH:$JAVA_HOME/bin\nexport PID_DIR={{kafka_pid_dir}}\nexport LOG_DIR={{kafka_log_dir}}\n{% if kerberos_security_enabled or kafka_other_sasl_enabled %}\nexport KAFKA_KERBEROS_PARAMS=\"-Djavax.security.auth.useSubjectCredsOnly=false {{kafka_kerberos_params}}\"\n{% else %}\nexport KAFKA_KERBEROS_PARAMS={{kafka_kerberos_params}}\n{% endif %}\n# Add kafka sink to classpath and related depenencies\nif [ -e \"/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\" ]; then\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/ambari-metrics-kafka-sink.jar\n  export CLASSPATH=$CLASSPATH:/usr/lib/ambari-metrics-kafka-sink/lib/*\nfi\nif [ -f /etc/kafka/conf/kafka-ranger-env.sh ]; then\n. /etc/kafka/conf/kafka-ranger-env.sh\nfi",
          "is_supported_kafka_ranger" : "true",
          "kafka_user" : "kafka"
        }
      }
    },
    {
      "ranger-solr-configuration" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger_audit_max_retention_days" : "90",
          "ranger_audit_logs_merge_factor" : "5",
          "content" : "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n\n<!--\n     For more details about configurations options that may appear in\n     this file, see http://wiki.apache.org/solr/SolrConfigXml.\n-->\n<config>\n  <!-- In all configuration below, a prefix of \"solr.\" for class names\n       is an alias that causes solr to search appropriate packages,\n       including org.apache.solr.(search|update|request|core|analysis)\n\n       You may also specify a fully qualified Java classname if you\n       have your own custom plugins.\n    -->\n\n  <!-- Controls what version of Lucene various components of Solr\n       adhere to.  Generally, you want to use the latest version to\n       get all bug fixes and improvements. It is highly recommended\n       that you fully re-index after changing this setting as it can\n       affect both how text is indexed and queried.\n  -->\n  <luceneMatchVersion>5.2.0</luceneMatchVersion>\n\n  <!-- <lib/> directives can be used to instruct Solr to load any Jars\n       identified and use them to resolve any \"plugins\" specified in\n       your solrconfig.xml or schema.xml (ie: Analyzers, Request\n       Handlers, etc...).\n\n       All directories and paths are resolved relative to the\n       instanceDir.\n\n       Please note that <lib/> directives are processed in the order\n       that they appear in your solrconfig.xml file, and are \"stacked\"\n       on top of each other when building a ClassLoader - so if you have\n       plugin jars with dependencies on other jars, the \"lower level\"\n       dependency jars should be loaded first.\n\n       If a \"./lib\" directory exists in your instanceDir, all files\n       found in it are included as if you had used the following\n       syntax...\n\n              <lib dir=\"./lib\" />\n    -->\n\n  <!-- A 'dir' option by itself adds any files found in the directory\n       to the classpath, this is useful for including all jars in a\n       directory.\n\n       When a 'regex' is specified in addition to a 'dir', only the\n       files in that directory which completely match the regex\n       (anchored on both ends) will be included.\n\n       If a 'dir' option (with or without a regex) is used and nothing\n       is found that matches, a warning will be logged.\n\n       The examples below can be used to load some solr-contribs along\n       with their external dependencies.\n    -->\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-dataimporthandler-.*\\.jar\" />\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/extraction/lib\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-cell-\\d.*\\.jar\" />\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/clustering/lib/\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-clustering-\\d.*\\.jar\" />\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/langid/lib/\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-langid-\\d.*\\.jar\" />\n\n  <lib dir=\"${solr.install.dir:../../../..}/contrib/velocity/lib\" regex=\".*\\.jar\" />\n  <lib dir=\"${solr.install.dir:../../../..}/dist/\" regex=\"solr-velocity-\\d.*\\.jar\" />\n\n  <!-- an exact 'path' can be used instead of a 'dir' to specify a\n       specific jar file.  This will cause a serious error to be logged\n       if it can't be loaded.\n    -->\n  <!--\n     <lib path=\"../a-jar-that-does-not-exist.jar\" />\n  -->\n\n  <!-- Data Directory\n\n       Used to specify an alternate directory to hold all index data\n       other than the default ./data under the Solr home.  If\n       replication is in use, this should match the replication\n       configuration.\n    -->\n  <dataDir>${solr.data.dir:}</dataDir>\n\n\n  <!-- The DirectoryFactory to use for indexes.\n\n       solr.StandardDirectoryFactory is filesystem\n       based and tries to pick the best implementation for the current\n       JVM and platform.  solr.NRTCachingDirectoryFactory, the default,\n       wraps solr.StandardDirectoryFactory and caches small files in memory\n       for better NRT performance.\n\n       One can force a particular implementation via solr.MMapDirectoryFactory,\n       solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.\n\n       solr.RAMDirectoryFactory is memory based, not\n       persistent, and doesn't work with replication.\n    -->\n  <directoryFactory name=\"DirectoryFactory\"\n                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\">\n\n\n    <!-- These will be used if you are using the solr.HdfsDirectoryFactory,\n         otherwise they will be ignored. If you don't plan on using hdfs,\n         you can safely remove this section. -->\n    <!-- The root directory that collection data should be written to. -->\n    <str name=\"solr.hdfs.home\">${solr.hdfs.home:}</str>\n    <!-- The hadoop configuration files to use for the hdfs client. -->\n    <str name=\"solr.hdfs.confdir\">${solr.hdfs.confdir:}</str>\n    <!-- Enable/Disable the hdfs cache. -->\n    <str name=\"solr.hdfs.blockcache.enabled\">${solr.hdfs.blockcache.enabled:true}</str>\n    <!-- Enable/Disable using one global cache for all SolrCores.\n         The settings used will be from the first HdfsDirectoryFactory created. -->\n    <str name=\"solr.hdfs.blockcache.global\">${solr.hdfs.blockcache.global:true}</str>\n\n  </directoryFactory>\n\n  <!-- The CodecFactory for defining the format of the inverted index.\n       The default implementation is SchemaCodecFactory, which is the official Lucene\n       index format, but hooks into the schema to provide per-field customization of\n       the postings lists and per-document values in the fieldType element\n       (postingsFormat/docValuesFormat). Note that most of the alternative implementations\n       are experimental, so if you choose to customize the index format, it's a good\n       idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)\n       before upgrading to a newer version to avoid unnecessary reindexing.\n  -->\n  <codecFactory class=\"solr.SchemaCodecFactory\"/>\n\n  <!-- To enable dynamic schema REST APIs, use the following for <schemaFactory>: -->\n\n       <schemaFactory class=\"ManagedIndexSchemaFactory\">\n         <bool name=\"mutable\">true</bool>\n         <str name=\"managedSchemaResourceName\">managed-schema</str>\n       </schemaFactory>\n<!--\n       When ManagedIndexSchemaFactory is specified, Solr will load the schema from\n       the resource named in 'managedSchemaResourceName', rather than from schema.xml.\n       Note that the managed schema resource CANNOT be named schema.xml.  If the managed\n       schema does not exist, Solr will create it after reading schema.xml, then rename\n       'schema.xml' to 'schema.xml.bak'.\n\n       Do NOT hand edit the managed schema - external modifications will be ignored and\n       overwritten as a result of schema modification REST API calls.\n\n       When ManagedIndexSchemaFactory is specified with mutable = true, schema\n       modification REST API calls will be allowed; otherwise, error responses will be\n       sent back for these requests.\n\n  <schemaFactory class=\"ClassicIndexSchemaFactory\"/>\n  -->\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Index Config - These settings control low-level behavior of indexing\n       Most example settings here show the default value, but are commented\n       out, to more easily see where customizations have been made.\n\n       Note: This replaces <indexDefaults> and <mainIndex> from older versions\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <indexConfig>\n    <!-- maxFieldLength was removed in 4.0. To get similar behavior, include a\n         LimitTokenCountFilterFactory in your fieldType definition. E.g.\n     <filter class=\"solr.LimitTokenCountFilterFactory\" maxTokenCount=\"10000\"/>\n    -->\n    <!-- Maximum time to wait for a write lock (ms) for an IndexWriter. Default: 1000 -->\n    <!-- <writeLockTimeout>1000</writeLockTimeout>  -->\n\n    <!-- The maximum number of simultaneous threads that may be\n         indexing documents at once in IndexWriter; if more than this\n         many threads arrive they will wait for others to finish.\n         Default in Solr/Lucene is 8. -->\n    <!-- <maxIndexingThreads>8</maxIndexingThreads>  -->\n\n    <!-- Expert: Enabling compound file will use less files for the index,\n         using fewer file descriptors on the expense of performance decrease.\n         Default in Lucene is \"true\". Default in Solr is \"false\" (since 3.6) -->\n    <!-- <useCompoundFile>false</useCompoundFile> -->\n\n    <!-- ramBufferSizeMB sets the amount of RAM that may be used by Lucene\n         indexing for buffering added documents and deletions before they are\n         flushed to the Directory.\n         maxBufferedDocs sets a limit on the number of documents buffered\n         before flushing.\n         If both ramBufferSizeMB and maxBufferedDocs is set, then\n         Lucene will flush based on whichever limit is hit first.\n         The default is 100 MB.  -->\n    <!-- <ramBufferSizeMB>100</ramBufferSizeMB> -->\n    <!-- <maxBufferedDocs>1000</maxBufferedDocs> -->\n\n    <!-- Expert: Merge Policy\n         The Merge Policy in Lucene controls how merging of segments is done.\n         The default since Solr/Lucene 3.3 is TieredMergePolicy.\n         The default since Lucene 2.3 was the LogByteSizeMergePolicy,\n         Even older versions of Lucene used LogDocMergePolicy.\n      -->\n    <!--\n        <mergePolicy class=\"org.apache.lucene.index.TieredMergePolicy\">\n          <int name=\"maxMergeAtOnce\">10</int>\n          <int name=\"segmentsPerTier\">10</int>\n        </mergePolicy>\n      -->\n\n    <!-- Merge Factor\n         The merge factor controls how many segments will get merged at a time.\n         For TieredMergePolicy, mergeFactor is a convenience parameter which\n         will set both MaxMergeAtOnce and SegmentsPerTier at once.\n         For LogByteSizeMergePolicy, mergeFactor decides how many new segments\n         will be allowed before they are merged into one.\n         Default is 10 for both merge policies.\n      -->\n    <!--\n    <mergeFactor>10</mergeFactor>\n      -->\n\n    <!-- Ranger customization. Set to 5 to trigger purging of deleted documents more often -->\n    <mergeFactor>{{ranger_audit_logs_merge_factor}}</mergeFactor>\n\n    <!-- Expert: Merge Scheduler\n         The Merge Scheduler in Lucene controls how merges are\n         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)\n         can perform merges in the background using separate threads.\n         The SerialMergeScheduler (Lucene 2.2 default) does not.\n     -->\n    <!--\n       <mergeScheduler class=\"org.apache.lucene.index.ConcurrentMergeScheduler\"/>\n       -->\n\n    <!-- LockFactory\n\n         This option specifies which Lucene LockFactory implementation\n         to use.\n\n         single = SingleInstanceLockFactory - suggested for a\n                  read-only index or when there is no possibility of\n                  another process trying to modify the index.\n         native = NativeFSLockFactory - uses OS native file locking.\n                  Do not use when multiple solr webapps in the same\n                  JVM are attempting to share a single index.\n         simple = SimpleFSLockFactory  - uses a plain file for locking\n\n         Defaults: 'native' is default for Solr3.6 and later, otherwise\n                   'simple' is the default\n\n         More details on the nuances of each LockFactory...\n         http://wiki.apache.org/lucene-java/AvailableLockFactories\n    -->\n    <lockType>${solr.lock.type:native}</lockType>\n\n    <!-- Unlock On Startup\n\n         If true, unlock any held write or commit locks on startup.\n         This defeats the locking mechanism that allows multiple\n         processes to safely access a lucene index, and should be used\n         with care. Default is \"false\".\n\n         This is not needed if lock type is 'single'\n     -->\n    <!--\n    <unlockOnStartup>false</unlockOnStartup>\n      -->\n\n    <!-- Commit Deletion Policy\n         Custom deletion policies can be specified here. The class must\n         implement org.apache.lucene.index.IndexDeletionPolicy.\n\n         The default Solr IndexDeletionPolicy implementation supports\n         deleting index commit points on number of commits, age of\n         commit point and optimized status.\n\n         The latest commit point should always be preserved regardless\n         of the criteria.\n    -->\n    <!--\n    <deletionPolicy class=\"solr.SolrDeletionPolicy\">\n    -->\n      <!-- The number of commit points to be kept -->\n      <!-- <str name=\"maxCommitsToKeep\">1</str> -->\n      <!-- The number of optimized commit points to be kept -->\n      <!-- <str name=\"maxOptimizedCommitsToKeep\">0</str> -->\n      <!--\n          Delete all commit points once they have reached the given age.\n          Supports DateMathParser syntax e.g.\n        -->\n      <!--\n         <str name=\"maxCommitAge\">30MINUTES</str>\n         <str name=\"maxCommitAge\">1DAY</str>\n      -->\n    <!--\n    </deletionPolicy>\n    -->\n\n    <!-- Lucene Infostream\n\n         To aid in advanced debugging, Lucene provides an \"InfoStream\"\n         of detailed information when indexing.\n\n         Setting the value to true will instruct the underlying Lucene\n         IndexWriter to write its info stream to solr's log. By default,\n         this is enabled here, and controlled through log4j.properties.\n      -->\n     <infoStream>true</infoStream>\n  </indexConfig>\n\n\n  <!-- JMX\n\n       This example enables JMX if and only if an existing MBeanServer\n       is found, use this if you want to configure JMX through JVM\n       parameters. Remove this to disable exposing Solr configuration\n       and statistics to JMX.\n\n       For more details see http://wiki.apache.org/solr/SolrJmx\n    -->\n  <jmx />\n  <!-- If you want to connect to a particular server, specify the\n       agentId\n    -->\n  <!-- <jmx agentId=\"myAgent\" /> -->\n  <!-- If you want to start a new MBeanServer, specify the serviceUrl -->\n  <!-- <jmx serviceUrl=\"service:jmx:rmi:///jndi/rmi://localhost:9999/solr\"/>\n    -->\n\n  <!-- The default high-performance update handler -->\n  <updateHandler class=\"solr.DirectUpdateHandler2\">\n\n    <!-- Enables a transaction log, used for real-time get, durability, and\n         and solr cloud replica recovery.  The log can grow as big as\n         uncommitted changes to the index, so use of a hard autoCommit\n         is recommended (see below).\n         \"dir\" - the target directory for transaction logs, defaults to the\n                solr data directory.  -->\n    <updateLog>\n      <str name=\"dir\">${solr.ulog.dir:}</str>\n    </updateLog>\n\n    <!-- AutoCommit\n\n         Perform a hard commit automatically under certain conditions.\n         Instead of enabling autoCommit, consider using \"commitWithin\"\n         when adding documents.\n\n         http://wiki.apache.org/solr/UpdateXmlMessages\n\n         maxDocs - Maximum number of documents to add since the last\n                   commit before automatically triggering a new commit.\n\n         maxTime - Maximum amount of time in ms that is allowed to pass\n                   since a document was added before automatically\n                   triggering a new commit.\n         openSearcher - if false, the commit causes recent index changes\n           to be flushed to stable storage, but does not cause a new\n           searcher to be opened to make those changes visible.\n\n         If the updateLog is enabled, then it's highly recommended to\n         have some sort of hard autoCommit to limit the log size.\n      -->\n     <autoCommit>\n       <maxTime>${solr.autoCommit.maxTime:15000}</maxTime>\n       <openSearcher>false</openSearcher>\n     </autoCommit>\n\n    <!-- softAutoCommit is like autoCommit except it causes a\n         'soft' commit which only ensures that changes are visible\n         but does not ensure that data is synced to disk.  This is\n         faster and more near-realtime friendly than a hard commit.\n      -->\n\n     <autoSoftCommit>\n       <maxTime>${solr.autoSoftCommit.maxTime:5000}</maxTime>\n     </autoSoftCommit>\n\n    <!-- Update Related Event Listeners\n\n         Various IndexWriter related events can trigger Listeners to\n         take actions.\n\n         postCommit - fired after every commit or optimize command\n         postOptimize - fired after every optimize command\n      -->\n    <!-- The RunExecutableListener executes an external command from a\n         hook such as postCommit or postOptimize.\n\n         exe - the name of the executable to run\n         dir - dir to use as the current working directory. (default=\".\")\n         wait - the calling thread waits until the executable returns.\n                (default=\"true\")\n         args - the arguments to pass to the program.  (default is none)\n         env - environment variables to set.  (default is none)\n      -->\n    <!-- This example shows how RunExecutableListener could be used\n         with the script based replication...\n         http://wiki.apache.org/solr/CollectionDistribution\n      -->\n    <!--\n       <listener event=\"postCommit\" class=\"solr.RunExecutableListener\">\n         <str name=\"exe\">solr/bin/snapshooter</str>\n         <str name=\"dir\">.</str>\n         <bool name=\"wait\">true</bool>\n         <arr name=\"args\"> <str>arg1</str> <str>arg2</str> </arr>\n         <arr name=\"env\"> <str>MYVAR=val1</str> </arr>\n       </listener>\n      -->\n\n  </updateHandler>\n\n  <!-- IndexReaderFactory\n\n       Use the following format to specify a custom IndexReaderFactory,\n       which allows for alternate IndexReader implementations.\n\n       ** Experimental Feature **\n\n       Please note - Using a custom IndexReaderFactory may prevent\n       certain other features from working. The API to\n       IndexReaderFactory may change without warning or may even be\n       removed from future releases if the problems cannot be\n       resolved.\n\n\n       ** Features that may not work with custom IndexReaderFactory **\n\n       The ReplicationHandler assumes a disk-resident index. Using a\n       custom IndexReader implementation may cause incompatibility\n       with ReplicationHandler and may cause replication to not work\n       correctly. See SOLR-1366 for details.\n\n    -->\n  <!--\n  <indexReaderFactory name=\"IndexReaderFactory\" class=\"package.class\">\n    <str name=\"someArg\">Some Value</str>\n  </indexReaderFactory >\n  -->\n\n  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       Query section - these settings control query time things like caches\n       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->\n  <query>\n    <!-- Max Boolean Clauses\n\n         Maximum number of clauses in each BooleanQuery,  an exception\n         is thrown if exceeded.\n\n         ** WARNING **\n\n         This option actually modifies a global Lucene property that\n         will affect all SolrCores.  If multiple solrconfig.xml files\n         disagree on this property, the value at any given moment will\n         be based on the last SolrCore to be initialized.\n\n      -->\n    <maxBooleanClauses>1024</maxBooleanClauses>\n\n\n    <!-- Solr Internal Query Caches\n\n         There are two implementations of cache available for Solr,\n         LRUCache, based on a synchronized LinkedHashMap, and\n         FastLRUCache, based on a ConcurrentHashMap.\n\n         FastLRUCache has faster gets and slower puts in single\n         threaded operation and thus is generally faster than LRUCache\n         when the hit ratio of the cache is high (> 75%), and may be\n         faster under other scenarios on multi-cpu systems.\n    -->\n\n    <!-- Filter Cache\n\n         Cache used by SolrIndexSearcher for filters (DocSets),\n         unordered sets of *all* documents that match a query.  When a\n         new searcher is opened, its caches may be prepopulated or\n         \"autowarmed\" using data from caches in the old searcher.\n         autowarmCount is the number of items to prepopulate.  For\n         LRUCache, the autowarmed items will be the most recently\n         accessed items.\n\n         Parameters:\n           class - the SolrCache implementation LRUCache or\n               (LRUCache or FastLRUCache)\n           size - the maximum number of entries in the cache\n           initialSize - the initial capacity (number of entries) of\n               the cache.  (see java.util.HashMap)\n           autowarmCount - the number of entries to prepopulate from\n               and old cache.\n      -->\n    <filterCache class=\"solr.FastLRUCache\"\n                 size=\"512\"\n                 initialSize=\"512\"\n                 autowarmCount=\"0\"/>\n\n    <!-- Query Result Cache\n\n         Caches results of searches - ordered lists of document ids\n         (DocList) based on a query, a sort, and the range of documents requested.\n      -->\n    <queryResultCache class=\"solr.LRUCache\"\n                     size=\"512\"\n                     initialSize=\"512\"\n                     autowarmCount=\"0\"/>\n\n    <!-- Document Cache\n\n         Caches Lucene Document objects (the stored fields for each\n         document).  Since Lucene internal document ids are transient,\n         this cache will not be autowarmed.\n      -->\n    <documentCache class=\"solr.LRUCache\"\n                   size=\"512\"\n                   initialSize=\"512\"\n                   autowarmCount=\"0\"/>\n\n    <!-- custom cache currently used by block join -->\n    <cache name=\"perSegFilter\"\n      class=\"solr.search.LRUCache\"\n      size=\"10\"\n      initialSize=\"0\"\n      autowarmCount=\"10\"\n      regenerator=\"solr.NoOpRegenerator\" />\n\n    <!-- Field Value Cache\n\n         Cache used to hold field values that are quickly accessible\n         by document id.  The fieldValueCache is created by default\n         even if not configured here.\n      -->\n    <!--\n       <fieldValueCache class=\"solr.FastLRUCache\"\n                        size=\"512\"\n                        autowarmCount=\"128\"\n                        showItems=\"32\" />\n      -->\n\n    <!-- Custom Cache\n\n         Example of a generic cache.  These caches may be accessed by\n         name through SolrIndexSearcher.getCache(),cacheLookup(), and\n         cacheInsert().  The purpose is to enable easy caching of\n         user/application level data.  The regenerator argument should\n         be specified as an implementation of solr.CacheRegenerator\n         if autowarming is desired.\n      -->\n    <!--\n       <cache name=\"myUserCache\"\n              class=\"solr.LRUCache\"\n              size=\"4096\"\n              initialSize=\"1024\"\n              autowarmCount=\"1024\"\n              regenerator=\"com.mycompany.MyRegenerator\"\n              />\n      -->\n\n\n    <!-- Lazy Field Loading\n\n         If true, stored fields that are not requested will be loaded\n         lazily.  This can result in a significant speed improvement\n         if the usual case is to not load all stored fields,\n         especially if the skipped fields are large compressed text\n         fields.\n    -->\n    <enableLazyFieldLoading>true</enableLazyFieldLoading>\n\n   <!-- Use Filter For Sorted Query\n\n        A possible optimization that attempts to use a filter to\n        satisfy a search.  If the requested sort does not include\n        score, then the filterCache will be checked for a filter\n        matching the query. If found, the filter will be used as the\n        source of document ids, and then the sort will be applied to\n        that.\n\n        For most situations, this will not be useful unless you\n        frequently get the same search repeatedly with different sort\n        options, and none of them ever use \"score\"\n     -->\n   <!--\n      <useFilterForSortedQuery>true</useFilterForSortedQuery>\n     -->\n\n   <!-- Result Window Size\n\n        An optimization for use with the queryResultCache.  When a search\n        is requested, a superset of the requested number of document ids\n        are collected.  For example, if a search for a particular query\n        requests matching documents 10 through 19, and queryWindowSize is 50,\n        then documents 0 through 49 will be collected and cached.  Any further\n        requests in that range can be satisfied via the cache.\n     -->\n   <queryResultWindowSize>20</queryResultWindowSize>\n\n   <!-- Maximum number of documents to cache for any entry in the\n        queryResultCache.\n     -->\n   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>\n\n   <!-- Query Related Event Listeners\n\n        Various IndexSearcher related events can trigger Listeners to\n        take actions.\n\n        newSearcher - fired whenever a new searcher is being prepared\n        and there is a current searcher handling requests (aka\n        registered).  It can be used to prime certain caches to\n        prevent long request times for certain requests.\n\n        firstSearcher - fired whenever a new searcher is being\n        prepared but there is no current registered searcher to handle\n        requests or to gain autowarming data from.\n\n\n     -->\n    <!-- QuerySenderListener takes an array of NamedList and executes a\n         local query request for each NamedList in sequence.\n      -->\n    <listener event=\"newSearcher\" class=\"solr.QuerySenderListener\">\n      <arr name=\"queries\">\n        <!--\n           <lst><str name=\"q\">solr</str><str name=\"sort\">price asc</str></lst>\n           <lst><str name=\"q\">rocks</str><str name=\"sort\">weight asc</str></lst>\n          -->\n      </arr>\n    </listener>\n    <listener event=\"firstSearcher\" class=\"solr.QuerySenderListener\">\n      <arr name=\"queries\">\n        <lst>\n          <str name=\"q\">static firstSearcher warming in solrconfig.xml</str>\n        </lst>\n      </arr>\n    </listener>\n\n    <!-- Use Cold Searcher\n\n         If a search request comes in and there is no current\n         registered searcher, then immediately register the still\n         warming searcher and use it.  If \"false\" then all requests\n         will block until the first searcher is done warming.\n      -->\n    <useColdSearcher>true</useColdSearcher>\n\n    <!-- Max Warming Searchers\n\n         Maximum number of searchers that may be warming in the\n         background concurrently.  An error is returned if this limit\n         is exceeded.\n\n         Recommend values of 1-2 for read-only slaves, higher for\n         masters w/o cache warming.\n      -->\n    <maxWarmingSearchers>2</maxWarmingSearchers>\n\n  </query>\n\n\n  <!-- Request Dispatcher\n\n       This section contains instructions for how the SolrDispatchFilter\n       should behave when processing requests for this SolrCore.\n\n       handleSelect is a legacy option that affects the behavior of requests\n       such as /select?qt=XXX\n\n       handleSelect=\"true\" will cause the SolrDispatchFilter to process\n       the request and dispatch the query to a handler specified by the\n       \"qt\" param, assuming \"/select\" isn't already registered.\n\n       handleSelect=\"false\" will cause the SolrDispatchFilter to\n       ignore \"/select\" requests, resulting in a 404 unless a handler\n       is explicitly registered with the name \"/select\"\n\n       handleSelect=\"true\" is not recommended for new users, but is the default\n       for backwards compatibility\n    -->\n  <requestDispatcher handleSelect=\"false\" >\n    <!-- Request Parsing\n\n         These settings indicate how Solr Requests may be parsed, and\n         what restrictions may be placed on the ContentStreams from\n         those requests\n\n         enableRemoteStreaming - enables use of the stream.file\n         and stream.url parameters for specifying remote streams.\n\n         multipartUploadLimitInKB - specifies the max size (in KiB) of\n         Multipart File Uploads that Solr will allow in a Request.\n\n         formdataUploadLimitInKB - specifies the max size (in KiB) of\n         form data (application/x-www-form-urlencoded) sent via\n         POST. You can use POST to pass request parameters not\n         fitting into the URL.\n\n         addHttpRequestToContext - if set to true, it will instruct\n         the requestParsers to include the original HttpServletRequest\n         object in the context map of the SolrQueryRequest under the\n         key \"httpRequest\". It will not be used by any of the existing\n         Solr components, but may be useful when developing custom\n         plugins.\n\n         *** WARNING ***\n         The settings below authorize Solr to fetch remote files, You\n         should make sure your system has some authentication before\n         using enableRemoteStreaming=\"true\"\n\n      -->\n    <requestParsers enableRemoteStreaming=\"true\"\n                    multipartUploadLimitInKB=\"2048000\"\n                    formdataUploadLimitInKB=\"2048\"\n                    addHttpRequestToContext=\"false\"/>\n\n    <!-- HTTP Caching\n\n         Set HTTP caching related parameters (for proxy caches and clients).\n\n         The options below instruct Solr not to output any HTTP Caching\n         related headers\n      -->\n    <httpCaching never304=\"true\" />\n    <!-- If you include a <cacheControl> directive, it will be used to\n         generate a Cache-Control header (as well as an Expires header\n         if the value contains \"max-age=\")\n\n         By default, no Cache-Control header is generated.\n\n         You can use the <cacheControl> option even if you have set\n         never304=\"true\"\n      -->\n    <!--\n       <httpCaching never304=\"true\" >\n         <cacheControl>max-age=30, public</cacheControl>\n       </httpCaching>\n      -->\n    <!-- To enable Solr to respond with automatically generated HTTP\n         Caching headers, and to response to Cache Validation requests\n         correctly, set the value of never304=\"false\"\n\n         This will cause Solr to generate Last-Modified and ETag\n         headers based on the properties of the Index.\n\n         The following options can also be specified to affect the\n         values of these headers...\n\n         lastModFrom - the default value is \"openTime\" which means the\n         Last-Modified value (and validation against If-Modified-Since\n         requests) will all be relative to when the current Searcher\n         was opened.  You can change it to lastModFrom=\"dirLastMod\" if\n         you want the value to exactly correspond to when the physical\n         index was last modified.\n\n         etagSeed=\"...\" is an option you can change to force the ETag\n         header (and validation against If-None-Match requests) to be\n         different even if the index has not changed (ie: when making\n         significant changes to your config file)\n\n         (lastModifiedFrom and etagSeed are both ignored if you use\n         the never304=\"true\" option)\n      -->\n    <!--\n       <httpCaching lastModifiedFrom=\"openTime\"\n                    etagSeed=\"Solr\">\n         <cacheControl>max-age=30, public</cacheControl>\n       </httpCaching>\n      -->\n  </requestDispatcher>\n\n  <!-- Request Handlers\n\n       http://wiki.apache.org/solr/SolrRequestHandler\n\n       Incoming queries will be dispatched to a specific handler by name\n       based on the path specified in the request.\n\n       Legacy behavior: If the request path uses \"/select\" but no Request\n       Handler has that name, and if handleSelect=\"true\" has been specified in\n       the requestDispatcher, then the Request Handler is dispatched based on\n       the qt parameter.  Handlers without a leading '/' are accessed this way\n       like so: http://host/app/[core/]select?qt=name  If no qt is\n       given, then the requestHandler that declares default=\"true\" will be\n       used or the one named \"standard\".\n\n       If a Request Handler is declared with startup=\"lazy\", then it will\n       not be initialized until the first request that uses it.\n\n    -->\n\n  <requestHandler name=\"/dataimport\" class=\"solr.DataImportHandler\">\n    <lst name=\"defaults\">\n      <str name=\"config\">solr-data-config.xml</str>\n    </lst>\n  </requestHandler>\n\n  <!-- SearchHandler\n\n       http://wiki.apache.org/solr/SearchHandler\n\n       For processing Search Queries, the primary Request Handler\n       provided with Solr is \"SearchHandler\" It delegates to a sequent\n       of SearchComponents (see below) and supports distributed\n       queries across multiple shards\n    -->\n  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">\n    <!-- default values for query parameters can be specified, these\n         will be overridden by parameters in the request\n      -->\n     <lst name=\"defaults\">\n       <str name=\"echoParams\">explicit</str>\n       <int name=\"rows\">10</int>\n       <str name=\"df\">text</str>\n     </lst>\n    <!-- In addition to defaults, \"appends\" params can be specified\n         to identify values which should be appended to the list of\n         multi-val params from the query (or the existing \"defaults\").\n      -->\n    <!-- In this example, the param \"fq=instock:true\" would be appended to\n         any query time fq params the user may specify, as a mechanism for\n         partitioning the index, independent of any user selected filtering\n         that may also be desired (perhaps as a result of faceted searching).\n\n         NOTE: there is *absolutely* nothing a client can do to prevent these\n         \"appends\" values from being used, so don't use this mechanism\n         unless you are sure you always want it.\n      -->\n    <!--\n       <lst name=\"appends\">\n         <str name=\"fq\">inStock:true</str>\n       </lst>\n      -->\n    <!-- \"invariants\" are a way of letting the Solr maintainer lock down\n         the options available to Solr clients.  Any params values\n         specified here are used regardless of what values may be specified\n         in either the query, the \"defaults\", or the \"appends\" params.\n\n         In this example, the facet.field and facet.query params would\n         be fixed, limiting the facets clients can use.  Faceting is\n         not turned on by default - but if the client does specify\n         facet=true in the request, these are the only facets they\n         will be able to see counts for; regardless of what other\n         facet.field or facet.query params they may specify.\n\n         NOTE: there is *absolutely* nothing a client can do to prevent these\n         \"invariants\" values from being used, so don't use this mechanism\n         unless you are sure you always want it.\n      -->\n    <!--\n       <lst name=\"invariants\">\n         <str name=\"facet.field\">cat</str>\n         <str name=\"facet.field\">manu_exact</str>\n         <str name=\"facet.query\">price:[* TO 500]</str>\n         <str name=\"facet.query\">price:[500 TO *]</str>\n       </lst>\n      -->\n    <!-- If the default list of SearchComponents is not desired, that\n         list can either be overridden completely, or components can be\n         prepended or appended to the default list.  (see below)\n      -->\n    <!--\n       <arr name=\"components\">\n         <str>nameOfCustomComponent1</str>\n         <str>nameOfCustomComponent2</str>\n       </arr>\n      -->\n    </requestHandler>\n\n  <!-- A request handler that returns indented JSON by default -->\n  <requestHandler name=\"/query\" class=\"solr.SearchHandler\">\n     <lst name=\"defaults\">\n       <str name=\"echoParams\">explicit</str>\n       <str name=\"wt\">json</str>\n       <str name=\"indent\">true</str>\n       <str name=\"df\">text</str>\n     </lst>\n  </requestHandler>\n\n\n  <!-- realtime get handler, guaranteed to return the latest stored fields of\n       any document, without the need to commit or open a new searcher.  The\n       current implementation relies on the updateLog feature being enabled.\n\n       ** WARNING **\n       Do NOT disable the realtime get handler at /get if you are using\n       SolrCloud otherwise any leader election will cause a full sync in ALL\n       replicas for the shard in question. Similarly, a replica recovery will\n       also always fetch the complete index from the leader because a partial\n       sync will not be possible in the absence of this handler.\n  -->\n  <requestHandler name=\"/get\" class=\"solr.RealTimeGetHandler\">\n     <lst name=\"defaults\">\n       <str name=\"omitHeader\">true</str>\n       <str name=\"wt\">json</str>\n       <str name=\"indent\">true</str>\n     </lst>\n  </requestHandler>\n\n\n  <!-- A Robust Example\n\n       This example SearchHandler declaration shows off usage of the\n       SearchHandler with many defaults declared\n\n       Note that multiple instances of the same Request Handler\n       (SearchHandler) can be registered multiple times with different\n       names (and different init parameters)\n    -->\n  <requestHandler name=\"/browse\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n\n      <!-- VelocityResponseWriter settings -->\n      <str name=\"wt\">velocity</str>\n      <str name=\"v.template\">browse</str>\n      <str name=\"v.layout\">layout</str>\n\n      <!-- Query settings -->\n      <str name=\"defType\">edismax</str>\n      <str name=\"q.alt\">*:*</str>\n      <str name=\"rows\">10</str>\n      <str name=\"fl\">*,score</str>\n\n      <!-- Faceting defaults -->\n      <str name=\"facet\">on</str>\n      <str name=\"facet.mincount\">1</str>\n    </lst>\n  </requestHandler>\n\n\n  <initParams path=\"/update/**,/query,/select,/tvrh,/elevate,/spell,/browse\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <str name=\"update.chain\">add-unknown-fields-to-the-schema</str>\n    </lst>\n  </initParams>\n\n  <!-- Update Request Handler.\n\n       http://wiki.apache.org/solr/UpdateXmlMessages\n\n       The canonical Request Handler for Modifying the Index through\n       commands specified using XML, JSON, CSV, or JAVABIN\n\n       Note: Since solr1.1 requestHandlers requires a valid content\n       type header if posted in the body. For example, curl now\n       requires: -H 'Content-type:text/xml; charset=utf-8'\n\n       To override the request content type and force a specific\n       Content-type, use the request parameter:\n         ?update.contentType=text/csv\n\n       This handler will pick a response format to match the input\n       if the 'wt' parameter is not explicit\n    -->\n  <requestHandler name=\"/update\" class=\"solr.UpdateRequestHandler\">\n    <!-- See below for information on defining\n         updateRequestProcessorChains that can be used by name\n         on each Update Request\n      -->\n    <!--\n       <lst name=\"defaults\">\n         <str name=\"update.chain\">dedupe</str>\n       </lst>\n       -->\n  </requestHandler>\n\n  <!-- Solr Cell Update Request Handler\n\n       http://wiki.apache.org/solr/ExtractingRequestHandler\n\n    -->\n  <requestHandler name=\"/update/extract\"\n                  startup=\"lazy\"\n                  class=\"solr.extraction.ExtractingRequestHandler\" >\n    <lst name=\"defaults\">\n      <str name=\"lowernames\">true</str>\n      <str name=\"uprefix\">ignored_</str>\n\n      <!-- capture link hrefs but ignore div attributes -->\n      <str name=\"captureAttr\">true</str>\n      <str name=\"fmap.a\">links</str>\n      <str name=\"fmap.div\">ignored_</str>\n    </lst>\n  </requestHandler>\n\n\n  <!-- Field Analysis Request Handler\n\n       RequestHandler that provides much the same functionality as\n       analysis.jsp. Provides the ability to specify multiple field\n       types and field names in the same request and outputs\n       index-time and query-time analysis for each of them.\n\n       Request parameters are:\n       analysis.fieldname - field name whose analyzers are to be used\n\n       analysis.fieldtype - field type whose analyzers are to be used\n       analysis.fieldvalue - text for index-time analysis\n       q (or analysis.q) - text for query time analysis\n       analysis.showmatch (true|false) - When set to true and when\n           query analysis is performed, the produced tokens of the\n           field value analysis will be marked as \"matched\" for every\n           token that is produces by the query analysis\n   -->\n  <requestHandler name=\"/analysis/field\"\n                  startup=\"lazy\"\n                  class=\"solr.FieldAnalysisRequestHandler\" />\n\n\n  <!-- Document Analysis Handler\n\n       http://wiki.apache.org/solr/AnalysisRequestHandler\n\n       An analysis handler that provides a breakdown of the analysis\n       process of provided documents. This handler expects a (single)\n       content stream with the following format:\n\n       <docs>\n         <doc>\n           <field name=\"id\">1</field>\n           <field name=\"name\">The Name</field>\n           <field name=\"text\">The Text Value</field>\n         </doc>\n         <doc>...</doc>\n         <doc>...</doc>\n         ...\n       </docs>\n\n    Note: Each document must contain a field which serves as the\n    unique key. This key is used in the returned response to associate\n    an analysis breakdown to the analyzed document.\n\n    Like the FieldAnalysisRequestHandler, this handler also supports\n    query analysis by sending either an \"analysis.query\" or \"q\"\n    request parameter that holds the query text to be analyzed. It\n    also supports the \"analysis.showmatch\" parameter which when set to\n    true, all field tokens that match the query tokens will be marked\n    as a \"match\".\n  -->\n  <requestHandler name=\"/analysis/document\"\n                  class=\"solr.DocumentAnalysisRequestHandler\"\n                  startup=\"lazy\" />\n\n  <!-- This single handler is equivalent to the following... -->\n  <!--\n     <requestHandler name=\"/admin/luke\"       class=\"solr.admin.LukeRequestHandler\" />\n     <requestHandler name=\"/admin/system\"     class=\"solr.admin.SystemInfoHandler\" />\n     <requestHandler name=\"/admin/plugins\"    class=\"solr.admin.PluginInfoHandler\" />\n     <requestHandler name=\"/admin/threads\"    class=\"solr.admin.ThreadDumpHandler\" />\n     <requestHandler name=\"/admin/properties\" class=\"solr.admin.PropertiesRequestHandler\" />\n     <requestHandler name=\"/admin/file\"       class=\"solr.admin.ShowFileRequestHandler\" >\n    -->\n  <!-- If you wish to hide files under ${solr.home}/conf, explicitly\n       register the ShowFileRequestHandler using the definition below.\n       NOTE: The glob pattern ('*') is the only pattern supported at present, *.xml will\n             not exclude all files ending in '.xml'. Use it to exclude _all_ updates\n    -->\n  <!--\n     <requestHandler name=\"/admin/file\"\n                     class=\"solr.admin.ShowFileRequestHandler\" >\n       <lst name=\"invariants\">\n         <str name=\"hidden\">synonyms.txt</str>\n         <str name=\"hidden\">anotherfile.txt</str>\n         <str name=\"hidden\">*</str>\n       </lst>\n     </requestHandler>\n    -->\n\n  <!--\n    Enabling this request handler (which is NOT a default part of the admin handler) will allow the Solr UI to edit\n    all the config files. This is intended for secure/development use ONLY! Leaving available and publically\n    accessible is a security vulnerability and should be done with extreme caution!\n  -->\n  <!--\n  <requestHandler name=\"/admin/fileedit\" class=\"solr.admin.EditFileRequestHandler\" >\n    <lst name=\"invariants\">\n         <str name=\"hidden\">synonyms.txt</str>\n         <str name=\"hidden\">anotherfile.txt</str>\n    </lst>\n  </requestHandler>\n  -->\n  <!-- ping/healthcheck -->\n  <requestHandler name=\"/admin/ping\" class=\"solr.PingRequestHandler\">\n    <lst name=\"invariants\">\n      <str name=\"q\">solrpingquery</str>\n    </lst>\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">all</str>\n    </lst>\n    <!-- An optional feature of the PingRequestHandler is to configure the\n         handler with a \"healthcheckFile\" which can be used to enable/disable\n         the PingRequestHandler.\n         relative paths are resolved against the data dir\n      -->\n    <!-- <str name=\"healthcheckFile\">server-enabled.txt</str> -->\n  </requestHandler>\n\n  <!-- Echo the request contents back to the client -->\n  <requestHandler name=\"/debug/dump\" class=\"solr.DumpRequestHandler\" >\n    <lst name=\"defaults\">\n     <str name=\"echoParams\">explicit</str>\n     <str name=\"echoHandler\">true</str>\n    </lst>\n  </requestHandler>\n\n  <!-- Solr Replication\n\n       The SolrReplicationHandler supports replicating indexes from a\n       \"master\" used for indexing and \"slaves\" used for queries.\n\n       http://wiki.apache.org/solr/SolrReplication\n\n       It is also necessary for SolrCloud to function (in Cloud mode, the\n       replication handler is used to bulk transfer segments when nodes\n       are added or need to recover).\n\n       https://wiki.apache.org/solr/SolrCloud/\n    -->\n  <requestHandler name=\"/replication\" class=\"solr.ReplicationHandler\" >\n    <!--\n       To enable simple master/slave replication, uncomment one of the\n       sections below, depending on whether this solr instance should be\n       the \"master\" or a \"slave\".  If this instance is a \"slave\" you will\n       also need to fill in the masterUrl to point to a real machine.\n    -->\n    <!--\n       <lst name=\"master\">\n         <str name=\"replicateAfter\">commit</str>\n         <str name=\"replicateAfter\">startup</str>\n         <str name=\"confFiles\">schema.xml,stopwords.txt</str>\n       </lst>\n    -->\n    <!--\n       <lst name=\"slave\">\n         <str name=\"masterUrl\">http://your-master-hostname:8983/solr</str>\n         <str name=\"pollInterval\">00:00:60</str>\n       </lst>\n    -->\n  </requestHandler>\n\n  <!-- Search Components\n\n       Search components are registered to SolrCore and used by\n       instances of SearchHandler (which can access them by name)\n\n       By default, the following components are available:\n\n       <searchComponent name=\"query\"     class=\"solr.QueryComponent\" />\n       <searchComponent name=\"facet\"     class=\"solr.FacetComponent\" />\n       <searchComponent name=\"mlt\"       class=\"solr.MoreLikeThisComponent\" />\n       <searchComponent name=\"highlight\" class=\"solr.HighlightComponent\" />\n       <searchComponent name=\"stats\"     class=\"solr.StatsComponent\" />\n       <searchComponent name=\"debug\"     class=\"solr.DebugComponent\" />\n\n       Default configuration in a requestHandler would look like:\n\n       <arr name=\"components\">\n         <str>query</str>\n         <str>facet</str>\n         <str>mlt</str>\n         <str>highlight</str>\n         <str>stats</str>\n         <str>debug</str>\n       </arr>\n\n       If you register a searchComponent to one of the standard names,\n       that will be used instead of the default.\n\n       To insert components before or after the 'standard' components, use:\n\n       <arr name=\"first-components\">\n         <str>myFirstComponentName</str>\n       </arr>\n\n       <arr name=\"last-components\">\n         <str>myLastComponentName</str>\n       </arr>\n\n       NOTE: The component registered with the name \"debug\" will\n       always be executed after the \"last-components\"\n\n     -->\n\n   <!-- Spell Check\n\n        The spell check component can return a list of alternative spelling\n        suggestions.\n\n        http://wiki.apache.org/solr/SpellCheckComponent\n     -->\n  <searchComponent name=\"spellcheck\" class=\"solr.SpellCheckComponent\">\n\n    <str name=\"queryAnalyzerFieldType\">text_general</str>\n\n    <!-- Multiple \"Spell Checkers\" can be declared and used by this\n         component\n      -->\n\n    <!-- a spellchecker built from a field of the main index -->\n    <lst name=\"spellchecker\">\n      <str name=\"name\">default</str>\n      <str name=\"field\">text</str>\n      <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n      <!-- the spellcheck distance measure used, the default is the internal levenshtein -->\n      <str name=\"distanceMeasure\">internal</str>\n      <!-- minimum accuracy needed to be considered a valid spellcheck suggestion -->\n      <float name=\"accuracy\">0.5</float>\n      <!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 -->\n      <int name=\"maxEdits\">2</int>\n      <!-- the minimum shared prefix when enumerating terms -->\n      <int name=\"minPrefix\">1</int>\n      <!-- maximum number of inspections per result. -->\n      <int name=\"maxInspections\">5</int>\n      <!-- minimum length of a query term to be considered for correction -->\n      <int name=\"minQueryLength\">4</int>\n      <!-- maximum threshold of documents a query term can appear to be considered for correction -->\n      <float name=\"maxQueryFrequency\">0.01</float>\n      <!-- uncomment this to require suggestions to occur in 1% of the documents\n      \t<float name=\"thresholdTokenFrequency\">.01</float>\n      -->\n    </lst>\n\n    <!-- a spellchecker that can break or combine words.  See \"/spell\" handler below for usage -->\n    <lst name=\"spellchecker\">\n      <str name=\"name\">wordbreak</str>\n      <str name=\"classname\">solr.WordBreakSolrSpellChecker</str>\n      <str name=\"field\">name</str>\n      <str name=\"combineWords\">true</str>\n      <str name=\"breakWords\">true</str>\n      <int name=\"maxChanges\">10</int>\n    </lst>\n\n    <!-- a spellchecker that uses a different distance measure -->\n    <!--\n       <lst name=\"spellchecker\">\n         <str name=\"name\">jarowinkler</str>\n         <str name=\"field\">spell</str>\n         <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n         <str name=\"distanceMeasure\">\n           org.apache.lucene.search.spell.JaroWinklerDistance\n         </str>\n       </lst>\n     -->\n\n    <!-- a spellchecker that use an alternate comparator\n\n         comparatorClass be one of:\n          1. score (default)\n          2. freq (Frequency first, then score)\n          3. A fully qualified class name\n      -->\n    <!--\n       <lst name=\"spellchecker\">\n         <str name=\"name\">freq</str>\n         <str name=\"field\">lowerfilt</str>\n         <str name=\"classname\">solr.DirectSolrSpellChecker</str>\n         <str name=\"comparatorClass\">freq</str>\n      -->\n\n    <!-- A spellchecker that reads the list of words from a file -->\n    <!--\n       <lst name=\"spellchecker\">\n         <str name=\"classname\">solr.FileBasedSpellChecker</str>\n         <str name=\"name\">file</str>\n         <str name=\"sourceLocation\">spellings.txt</str>\n         <str name=\"characterEncoding\">UTF-8</str>\n         <str name=\"spellcheckIndexDir\">spellcheckerFile</str>\n       </lst>\n      -->\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the spellcheck component.\n\n       NOTE: This is purely as an example.  The whole purpose of the\n       SpellCheckComponent is to hook it into the request handler that\n       handles your normal user queries so that a separate request is\n       not needed to get suggestions.\n\n       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS\n       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!\n\n       See http://wiki.apache.org/solr/SpellCheckComponent for details\n       on the request parameters.\n    -->\n  <requestHandler name=\"/spell\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <!-- Solr will use suggestions from both the 'default' spellchecker\n           and from the 'wordbreak' spellchecker and combine them.\n           collations (re-written queries) can include a combination of\n           corrections from both spellcheckers -->\n      <str name=\"spellcheck.dictionary\">default</str>\n      <str name=\"spellcheck.dictionary\">wordbreak</str>\n      <str name=\"spellcheck\">on</str>\n      <str name=\"spellcheck.extendedResults\">true</str>\n      <str name=\"spellcheck.count\">10</str>\n      <str name=\"spellcheck.alternativeTermCount\">5</str>\n      <str name=\"spellcheck.maxResultsForSuggest\">5</str>\n      <str name=\"spellcheck.collate\">true</str>\n      <str name=\"spellcheck.collateExtendedResults\">true</str>\n      <str name=\"spellcheck.maxCollationTries\">10</str>\n      <str name=\"spellcheck.maxCollations\">5</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>spellcheck</str>\n    </arr>\n  </requestHandler>\n\n  <searchComponent name=\"suggest\" class=\"solr.SuggestComponent\">\n  \t<lst name=\"suggester\">\n      <str name=\"name\">mySuggester</str>\n      <str name=\"lookupImpl\">FuzzyLookupFactory</str>      <!-- org.apache.solr.spelling.suggest.fst -->\n      <str name=\"dictionaryImpl\">DocumentDictionaryFactory</str>     <!-- org.apache.solr.spelling.suggest.HighFrequencyDictionaryFactory -->\n      <str name=\"field\">cat</str>\n      <str name=\"weightField\">price</str>\n      <str name=\"suggestAnalyzerFieldType\">string</str>\n    </lst>\n  </searchComponent>\n\n  <requestHandler name=\"/suggest\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"suggest\">true</str>\n      <str name=\"suggest.count\">10</str>\n    </lst>\n    <arr name=\"components\">\n      <str>suggest</str>\n    </arr>\n  </requestHandler>\n  <!-- Term Vector Component\n\n       http://wiki.apache.org/solr/TermVectorComponent\n    -->\n  <searchComponent name=\"tvComponent\" class=\"solr.TermVectorComponent\"/>\n\n  <!-- A request handler for demonstrating the term vector component\n\n       This is purely as an example.\n\n       In reality you will likely want to add the component to your\n       already specified request handlers.\n    -->\n  <requestHandler name=\"/tvrh\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"df\">text</str>\n      <bool name=\"tv\">true</bool>\n    </lst>\n    <arr name=\"last-components\">\n      <str>tvComponent</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Clustering Component\n\n       You'll need to set the solr.clustering.enabled system property\n       when running solr to run with clustering enabled:\n\n            java -Dsolr.clustering.enabled=true -jar start.jar\n\n       http://wiki.apache.org/solr/ClusteringComponent\n       http://carrot2.github.io/solr-integration-strategies/\n    -->\n  <searchComponent name=\"clustering\"\n                   enable=\"${solr.clustering.enabled:false}\"\n                   class=\"solr.clustering.ClusteringComponent\" >\n    <lst name=\"engine\">\n      <str name=\"name\">lingo</str>\n\n      <!-- Class name of a clustering algorithm compatible with the Carrot2 framework.\n\n           Currently available open source algorithms are:\n           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm\n           * org.carrot2.clustering.stc.STCClusteringAlgorithm\n           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm\n\n           See http://project.carrot2.org/algorithms.html for more information.\n\n           A commercial algorithm Lingo3G (needs to be installed separately) is defined as:\n           * com.carrotsearch.lingo3g.Lingo3GClusteringAlgorithm\n        -->\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.lingo.LingoClusteringAlgorithm</str>\n\n      <!-- Override location of the clustering algorithm's resources\n           (attribute definitions and lexical resources).\n\n           A directory from which to load algorithm-specific stop words,\n           stop labels and attribute definition XMLs.\n\n           For an overview of Carrot2 lexical resources, see:\n           http://download.carrot2.org/head/manual/#chapter.lexical-resources\n\n           For an overview of Lingo3G lexical resources, see:\n           http://download.carrotsearch.com/lingo3g/manual/#chapter.lexical-resources\n       -->\n      <str name=\"carrot.resourcesDir\">clustering/carrot2</str>\n    </lst>\n\n    <!-- An example definition for the STC clustering algorithm. -->\n    <lst name=\"engine\">\n      <str name=\"name\">stc</str>\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.stc.STCClusteringAlgorithm</str>\n    </lst>\n\n    <!-- An example definition for the bisecting kmeans clustering algorithm. -->\n    <lst name=\"engine\">\n      <str name=\"name\">kmeans</str>\n      <str name=\"carrot.algorithm\">org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm</str>\n    </lst>\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the clustering component\n\n       This is purely as an example.\n\n       In reality you will likely want to add the component to your\n       already specified request handlers.\n    -->\n  <requestHandler name=\"/clustering\"\n                  startup=\"lazy\"\n                  enable=\"${solr.clustering.enabled:false}\"\n                  class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <bool name=\"clustering\">true</bool>\n      <bool name=\"clustering.results\">true</bool>\n      <!-- Field name with the logical \"title\" of a each document (optional) -->\n      <str name=\"carrot.title\">name</str>\n      <!-- Field name with the logical \"URL\" of a each document (optional) -->\n      <str name=\"carrot.url\">id</str>\n      <!-- Field name with the logical \"content\" of a each document (optional) -->\n      <str name=\"carrot.snippet\">features</str>\n      <!-- Apply highlighter to the title/ content and use this for clustering. -->\n      <bool name=\"carrot.produceSummary\">true</bool>\n      <!-- the maximum number of labels per cluster -->\n      <!--<int name=\"carrot.numDescriptions\">5</int>-->\n      <!-- produce sub clusters -->\n      <bool name=\"carrot.outputSubClusters\">false</bool>\n\n      <!-- Configure the remaining request handler parameters. -->\n      <str name=\"defType\">edismax</str>\n      <str name=\"qf\">\n        text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4\n      </str>\n      <str name=\"q.alt\">*:*</str>\n      <str name=\"rows\">10</str>\n      <str name=\"fl\">*,score</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>clustering</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Terms Component\n\n       http://wiki.apache.org/solr/TermsComponent\n\n       A component to return terms and document frequency of those\n       terms\n    -->\n  <searchComponent name=\"terms\" class=\"solr.TermsComponent\"/>\n\n  <!-- A request handler for demonstrating the terms component -->\n  <requestHandler name=\"/terms\" class=\"solr.SearchHandler\" startup=\"lazy\">\n     <lst name=\"defaults\">\n      <bool name=\"terms\">true</bool>\n      <bool name=\"distrib\">false</bool>\n    </lst>\n    <arr name=\"components\">\n      <str>terms</str>\n    </arr>\n  </requestHandler>\n\n\n  <!-- Query Elevation Component\n\n       http://wiki.apache.org/solr/QueryElevationComponent\n\n       a search component that enables you to configure the top\n       results for a given query regardless of the normal lucene\n       scoring.\n    -->\n  <searchComponent name=\"elevator\" class=\"solr.QueryElevationComponent\" >\n    <!-- pick a fieldType to analyze queries -->\n    <str name=\"queryFieldType\">string</str>\n    <str name=\"config-file\">elevate.xml</str>\n  </searchComponent>\n\n  <!-- A request handler for demonstrating the elevator component -->\n  <requestHandler name=\"/elevate\" class=\"solr.SearchHandler\" startup=\"lazy\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">explicit</str>\n      <str name=\"df\">text</str>\n    </lst>\n    <arr name=\"last-components\">\n      <str>elevator</str>\n    </arr>\n  </requestHandler>\n\n  <!-- Highlighting Component\n\n       http://wiki.apache.org/solr/HighlightingParameters\n    -->\n  <searchComponent class=\"solr.HighlightComponent\" name=\"highlight\">\n    <highlighting>\n      <!-- Configure the standard fragmenter -->\n      <!-- This could most likely be commented out in the \"default\" case -->\n      <fragmenter name=\"gap\"\n                  default=\"true\"\n                  class=\"solr.highlight.GapFragmenter\">\n        <lst name=\"defaults\">\n          <int name=\"hl.fragsize\">100</int>\n        </lst>\n      </fragmenter>\n\n      <!-- A regular-expression-based fragmenter\n           (for sentence extraction)\n        -->\n      <fragmenter name=\"regex\"\n                  class=\"solr.highlight.RegexFragmenter\">\n        <lst name=\"defaults\">\n          <!-- slightly smaller fragsizes work better because of slop -->\n          <int name=\"hl.fragsize\">70</int>\n          <!-- allow 50% slop on fragment sizes -->\n          <float name=\"hl.regex.slop\">0.5</float>\n          <!-- a basic sentence pattern -->\n          <str name=\"hl.regex.pattern\">[-\\w ,/\\n\\&quot;&apos;]{20,200}</str>\n        </lst>\n      </fragmenter>\n\n      <!-- Configure the standard formatter -->\n      <formatter name=\"html\"\n                 default=\"true\"\n                 class=\"solr.highlight.HtmlFormatter\">\n        <lst name=\"defaults\">\n          <str name=\"hl.simple.pre\"><![CDATA[<em>]]></str>\n          <str name=\"hl.simple.post\"><![CDATA[</em>]]></str>\n        </lst>\n      </formatter>\n\n      <!-- Configure the standard encoder -->\n      <encoder name=\"html\"\n               class=\"solr.highlight.HtmlEncoder\" />\n\n      <!-- Configure the standard fragListBuilder -->\n      <fragListBuilder name=\"simple\"\n                       class=\"solr.highlight.SimpleFragListBuilder\"/>\n\n      <!-- Configure the single fragListBuilder -->\n      <fragListBuilder name=\"single\"\n                       class=\"solr.highlight.SingleFragListBuilder\"/>\n\n      <!-- Configure the weighted fragListBuilder -->\n      <fragListBuilder name=\"weighted\"\n                       default=\"true\"\n                       class=\"solr.highlight.WeightedFragListBuilder\"/>\n\n      <!-- default tag FragmentsBuilder -->\n      <fragmentsBuilder name=\"default\"\n                        default=\"true\"\n                        class=\"solr.highlight.ScoreOrderFragmentsBuilder\">\n        <!--\n        <lst name=\"defaults\">\n          <str name=\"hl.multiValuedSeparatorChar\">/</str>\n        </lst>\n        -->\n      </fragmentsBuilder>\n\n      <!-- multi-colored tag FragmentsBuilder -->\n      <fragmentsBuilder name=\"colored\"\n                        class=\"solr.highlight.ScoreOrderFragmentsBuilder\">\n        <lst name=\"defaults\">\n          <str name=\"hl.tag.pre\"><![CDATA[\n               <b style=\"background:yellow\">,<b style=\"background:lawgreen\">,\n               <b style=\"background:aquamarine\">,<b style=\"background:magenta\">,\n               <b style=\"background:palegreen\">,<b style=\"background:coral\">,\n               <b style=\"background:wheat\">,<b style=\"background:khaki\">,\n               <b style=\"background:lime\">,<b style=\"background:deepskyblue\">]]></str>\n          <str name=\"hl.tag.post\"><![CDATA[</b>]]></str>\n        </lst>\n      </fragmentsBuilder>\n\n      <boundaryScanner name=\"default\"\n                       default=\"true\"\n                       class=\"solr.highlight.SimpleBoundaryScanner\">\n        <lst name=\"defaults\">\n          <str name=\"hl.bs.maxScan\">10</str>\n          <str name=\"hl.bs.chars\">.,!? &#9;&#10;&#13;</str>\n        </lst>\n      </boundaryScanner>\n\n      <boundaryScanner name=\"breakIterator\"\n                       class=\"solr.highlight.BreakIteratorBoundaryScanner\">\n        <lst name=\"defaults\">\n          <!-- type should be one of CHARACTER, WORD(default), LINE and SENTENCE -->\n          <str name=\"hl.bs.type\">WORD</str>\n          <!-- language and country are used when constructing Locale object.  -->\n          <!-- And the Locale object will be used when getting instance of BreakIterator -->\n          <str name=\"hl.bs.language\">en</str>\n          <str name=\"hl.bs.country\">US</str>\n        </lst>\n      </boundaryScanner>\n    </highlighting>\n  </searchComponent>\n\n  <!-- Update Processors\n\n       Chains of Update Processor Factories for dealing with Update\n       Requests can be declared, and then used by name in Update\n       Request Processors\n\n       http://wiki.apache.org/solr/UpdateRequestProcessor\n\n    -->\n\n  <!-- Add unknown fields to the schema\n\n       An example field type guessing update processor that will\n       attempt to parse string-typed field values as Booleans, Longs,\n       Doubles, or Dates, and then add schema fields with the guessed\n       field types.\n\n       This requires that the schema is both managed and mutable, by\n       declaring schemaFactory as ManagedIndexSchemaFactory, with\n       mutable specified as true.\n\n       See http://wiki.apache.org/solr/GuessingFieldTypes\n    -->\n  <updateRequestProcessorChain name=\"add-unknown-fields-to-the-schema\">\n    <processor class=\"solr.DefaultValueUpdateProcessorFactory\">\n        <str name=\"fieldName\">_ttl_</str>\n        <str name=\"value\">+{{ranger_audit_max_retention_days}}DAYS</str>\n    </processor>\n    <processor class=\"solr.processor.DocExpirationUpdateProcessorFactory\">\n        <int name=\"autoDeletePeriodSeconds\">86400</int>\n        <str name=\"ttlFieldName\">_ttl_</str>\n        <str name=\"expirationFieldName\">_expire_at_</str>\n    </processor>\n    <processor class=\"solr.FirstFieldValueUpdateProcessorFactory\">\n      <str name=\"fieldName\">_expire_at_</str>\n    </processor>\n\n    <processor class=\"solr.RemoveBlankFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseBooleanFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseLongFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseDoubleFieldUpdateProcessorFactory\"/>\n    <processor class=\"solr.ParseDateFieldUpdateProcessorFactory\">\n      <arr name=\"format\">\n        <str>yyyy-MM-dd'T'HH:mm:ss.SSSZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss,SSSZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss.SSS</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss,SSS</str>\n        <str>yyyy-MM-dd'T'HH:mm:ssZ</str>\n        <str>yyyy-MM-dd'T'HH:mm:ss</str>\n        <str>yyyy-MM-dd'T'HH:mmZ</str>\n        <str>yyyy-MM-dd'T'HH:mm</str>\n        <str>yyyy-MM-dd HH:mm:ss.SSSZ</str>\n        <str>yyyy-MM-dd HH:mm:ss,SSSZ</str>\n        <str>yyyy-MM-dd HH:mm:ss.SSS</str>\n        <str>yyyy-MM-dd HH:mm:ss,SSS</str>\n        <str>yyyy-MM-dd HH:mm:ssZ</str>\n        <str>yyyy-MM-dd HH:mm:ss</str>\n        <str>yyyy-MM-dd HH:mmZ</str>\n        <str>yyyy-MM-dd HH:mm</str>\n        <str>yyyy-MM-dd</str>\n      </arr>\n    </processor>\n    <processor class=\"solr.AddSchemaFieldsUpdateProcessorFactory\">\n      <str name=\"defaultFieldType\">key_lower_case</str>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Boolean</str>\n        <str name=\"fieldType\">boolean</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.util.Date</str>\n        <str name=\"fieldType\">tdate</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Long</str>\n        <str name=\"valueClass\">java.lang.Integer</str>\n        <str name=\"fieldType\">tlong</str>\n      </lst>\n      <lst name=\"typeMapping\">\n        <str name=\"valueClass\">java.lang.Number</str>\n        <str name=\"fieldType\">tdouble</str>\n      </lst>\n    </processor>\n    <processor class=\"solr.LogUpdateProcessorFactory\"/>\n    <processor class=\"solr.RunUpdateProcessorFactory\"/>\n  </updateRequestProcessorChain>\n\n\n  <!-- Deduplication\n\n       An example dedup update processor that creates the \"id\" field\n       on the fly based on the hash code of some other fields.  This\n       example has overwriteDupes set to false since we are using the\n       id field as the signatureField and Solr will maintain\n       uniqueness based on that anyway.\n\n    -->\n  <!--\n     <updateRequestProcessorChain name=\"dedupe\">\n       <processor class=\"solr.processor.SignatureUpdateProcessorFactory\">\n         <bool name=\"enabled\">true</bool>\n         <str name=\"signatureField\">id</str>\n         <bool name=\"overwriteDupes\">false</bool>\n         <str name=\"fields\">name,features,cat</str>\n         <str name=\"signatureClass\">solr.processor.Lookup3Signature</str>\n       </processor>\n       <processor class=\"solr.LogUpdateProcessorFactory\" />\n       <processor class=\"solr.RunUpdateProcessorFactory\" />\n     </updateRequestProcessorChain>\n    -->\n\n  <!-- Language identification\n\n       This example update chain identifies the language of the incoming\n       documents using the langid contrib. The detected language is\n       written to field language_s. No field name mapping is done.\n       The fields used for detection are text, title, subject and description,\n       making this example suitable for detecting languages form full-text\n       rich documents injected via ExtractingRequestHandler.\n       See more about langId at http://wiki.apache.org/solr/LanguageDetection\n    -->\n    <!--\n     <updateRequestProcessorChain name=\"langid\">\n       <processor class=\"org.apache.solr.update.processor.TikaLanguageIdentifierUpdateProcessorFactory\">\n         <str name=\"langid.fl\">text,title,subject,description</str>\n         <str name=\"langid.langField\">language_s</str>\n         <str name=\"langid.fallback\">en</str>\n       </processor>\n       <processor class=\"solr.LogUpdateProcessorFactory\" />\n       <processor class=\"solr.RunUpdateProcessorFactory\" />\n     </updateRequestProcessorChain>\n    -->\n\n  <!-- Script update processor\n\n    This example hooks in an update processor implemented using JavaScript.\n\n    See more about the script update processor at http://wiki.apache.org/solr/ScriptUpdateProcessor\n  -->\n  <!--\n    <updateRequestProcessorChain name=\"script\">\n      <processor class=\"solr.StatelessScriptUpdateProcessorFactory\">\n        <str name=\"script\">update-script.js</str>\n        <lst name=\"params\">\n          <str name=\"config_param\">example config parameter</str>\n        </lst>\n      </processor>\n      <processor class=\"solr.RunUpdateProcessorFactory\" />\n    </updateRequestProcessorChain>\n  -->\n\n  <!-- Response Writers\n\n       http://wiki.apache.org/solr/QueryResponseWriter\n\n       Request responses will be written using the writer specified by\n       the 'wt' request parameter matching the name of a registered\n       writer.\n\n       The \"default\" writer is the default and will be used if 'wt' is\n       not specified in the request.\n    -->\n  <!-- The following response writers are implicitly configured unless\n       overridden...\n    -->\n  <!--\n     <queryResponseWriter name=\"xml\"\n                          default=\"true\"\n                          class=\"solr.XMLResponseWriter\" />\n     <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\"/>\n     <queryResponseWriter name=\"python\" class=\"solr.PythonResponseWriter\"/>\n     <queryResponseWriter name=\"ruby\" class=\"solr.RubyResponseWriter\"/>\n     <queryResponseWriter name=\"php\" class=\"solr.PHPResponseWriter\"/>\n     <queryResponseWriter name=\"phps\" class=\"solr.PHPSerializedResponseWriter\"/>\n     <queryResponseWriter name=\"csv\" class=\"solr.CSVResponseWriter\"/>\n     <queryResponseWriter name=\"schema.xml\" class=\"solr.SchemaXmlResponseWriter\"/>\n    -->\n\n  <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\">\n     <!-- For the purposes of the tutorial, JSON responses are written as\n      plain text so that they are easy to read in *any* browser.\n      If you expect a MIME type of \"application/json\" just remove this override.\n     -->\n    <str name=\"content-type\">text/plain; charset=UTF-8</str>\n  </queryResponseWriter>\n\n  <!--\n     Custom response writers can be declared as needed...\n    -->\n  <queryResponseWriter name=\"velocity\" class=\"solr.VelocityResponseWriter\" startup=\"lazy\">\n    <str name=\"template.base.dir\">${velocity.template.base.dir:}</str>\n  </queryResponseWriter>\n\n  <!-- XSLT response writer transforms the XML output by any xslt file found\n       in Solr's conf/xslt directory.  Changes to xslt files are checked for\n       every xsltCacheLifetimeSeconds.\n    -->\n  <queryResponseWriter name=\"xslt\" class=\"solr.XSLTResponseWriter\">\n    <int name=\"xsltCacheLifetimeSeconds\">5</int>\n  </queryResponseWriter>\n\n  <!-- Query Parsers\n\n       http://wiki.apache.org/solr/SolrQuerySyntax\n\n       Multiple QParserPlugins can be registered by name, and then\n       used in either the \"defType\" param for the QueryComponent (used\n       by SearchHandler) or in LocalParams\n    -->\n  <!-- example of registering a query parser -->\n  <!--\n     <queryParser name=\"myparser\" class=\"com.mycompany.MyQParserPlugin\"/>\n    -->\n  <queryParser name=\"xmlparser\" class=\"solr.ExtendedDismaxQParserPlugin\" />\n\n  <!-- Function Parsers\n\n       http://wiki.apache.org/solr/FunctionQuery\n\n       Multiple ValueSourceParsers can be registered by name, and then\n       used as function names when using the \"func\" QParser.\n    -->\n  <!-- example of registering a custom function parser  -->\n  <!--\n     <valueSourceParser name=\"myfunc\"\n                        class=\"com.mycompany.MyValueSourceParser\" />\n    -->\n\n\n  <!-- Document Transformers\n       http://wiki.apache.org/solr/DocTransformers\n    -->\n  <!--\n     Could be something like:\n     <transformer name=\"db\" class=\"com.mycompany.LoadFromDatabaseTransformer\" >\n       <int name=\"connection\">jdbc://....</int>\n     </transformer>\n\n     To add a constant value to all docs, use:\n     <transformer name=\"mytrans2\" class=\"org.apache.solr.response.transform.ValueAugmenterFactory\" >\n       <int name=\"value\">5</int>\n     </transformer>\n\n     If you want the user to still be able to change it with _value:something_ use this:\n     <transformer name=\"mytrans3\" class=\"org.apache.solr.response.transform.ValueAugmenterFactory\" >\n       <double name=\"defaultValue\">5</double>\n     </transformer>\n\n      If you are using the QueryElevationComponent, you may wish to mark documents that get boosted.  The\n      EditorialMarkerFactory will do exactly that:\n     <transformer name=\"qecBooster\" class=\"org.apache.solr.response.transform.EditorialMarkerFactory\" />\n    -->\n\n\n  <!-- Legacy config for the admin interface -->\n  <admin>\n    <defaultQuery>*:*</defaultQuery>\n  </admin>\n\n</config>"
        }
      }
    },
    {
      "hadoop-env" : {
        "properties_attributes" : { },
        "properties" : {
          "hadoop_heapsize" : "1024",
          "proxyuser_group" : "users",
          "hdfs_user_keytab" : "/etc/security/keytabs/hdfs.headless.keytab",
          "hadoop_root_logger" : "INFO,RFA",
          "dtnode_heapsize" : "1024m",
          "namenode_backup_dir" : "/tmp/upgrades",
          "hdfs_user" : "hdfs",
          "hadoop_pid_dir_prefix" : "/var/run/hadoop",
          "content" : "\n      # Set Hadoop-specific environment variables here.\n\n      # The only required environment variable is JAVA_HOME.  All others are\n      # optional.  When running a distributed configuration it is best to\n      # set JAVA_HOME in this file, so that it is correctly defined on\n      # remote nodes.\n\n      # The java implementation to use.  Required.\n      export JAVA_HOME={{java_home}}\n      export HADOOP_HOME_WARN_SUPPRESS=1\n\n      # Hadoop home directory\n      export HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n      # Hadoop Configuration Directory\n\n      {# this is different for HDP1 #}\n      # Path to jsvc required by secure HDP 2.0 datanode\n      export JSVC_HOME={{jsvc_path}}\n\n\n      # The maximum amount of heap to use, in MB. Default is 1000.\n      export HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\n      export HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n      # Extra Java runtime options.  Empty by default.\n      export HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n      # Command specific options appended to HADOOP_OPTS when specified\n      HADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\n      HADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\n\n      {% if java_version < 8 %}\n      SHARED_HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\n      export HADOOP_NAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\n      export HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\n\n      export HADOOP_SECONDARYNAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n      # The following applies to multiple commands (fs, dfs, fsck, distcp etc)\n      export HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n      {% else %}\n      SHARED_HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT\"\n      export HADOOP_NAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-namenode/bin/kill-name-node\\\" -Dorg.mortbay.jetty.Request.maxFormContentSize=-1 ${HADOOP_NAMENODE_OPTS}\"\n      export HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS} -XX:CMSInitiatingOccupancyFraction=70 -XX:+UseCMSInitiatingOccupancyOnly\"\n\n      export HADOOP_SECONDARYNAMENODE_OPTS=\"${SHARED_HADOOP_NAMENODE_OPTS} -XX:OnOutOfMemoryError=\\\"/usr/hdp/current/hadoop-hdfs-secondarynamenode/bin/kill-secondary-name-node\\\" ${HADOOP_SECONDARYNAMENODE_OPTS}\"\n\n      # The following applies to multiple commands (fs, dfs, fsck, distcp etc)\n      export HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n      {% endif %}\n\n      HADOOP_NFS3_OPTS=\"-Xmx{{nfsgateway_heapsize}}m -Dhadoop.security.logger=ERROR,DRFAS ${HADOOP_NFS3_OPTS}\"\n      HADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\n\n      # On secure datanodes, user to run the datanode as after dropping privileges\n      export HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n      # Extra ssh options.  Empty by default.\n      export HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n      # Where log files are stored.  $HADOOP_HOME/logs by default.\n      export HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n      # History server logs\n      export HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n      # Where log files are stored in the secure data environment.\n      export HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n      # File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n      # export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n      # host:path where hadoop code should be rsync'd from.  Unset by default.\n      # export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n      # Seconds to sleep between slave commands.  Unset by default.  This\n      # can be useful in large clusters, where, e.g., slave rsyncs can\n      # otherwise arrive faster than the master can service them.\n      # export HADOOP_SLAVE_SLEEP=0.1\n\n      # The directory where pid files are stored. /tmp by default.\n      export HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\n      export HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n      # History server pid\n      export HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\n      YARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n      # A string representing this instance of hadoop. $USER by default.\n      export HADOOP_IDENT_STRING=$USER\n\n      # The scheduling priority for daemon processes.  See 'man nice'.\n\n      # export HADOOP_NICENESS=10\n\n      # Add database libraries\n      JAVA_JDBC_LIBS=\"\"\n      if [ -d \"/usr/share/java\" ]; then\n      for jarFile in `ls /usr/share/java | grep -E \"(mysql|ojdbc|postgresql|sqljdbc)\" 2>/dev/null`\n      do\n      JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\n      done\n      fi\n\n      # Add libraries to the hadoop classpath - some may not need a colon as they already include it\n      export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}\n\n      # Setting path to hdfs command line\n      export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n      # Mostly required for hadoop 2.0\n      export JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:{{hadoop_lib_home}}/native/Linux-{{architecture}}-64\n\n      export HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\n\n\n      # Fix temporary bug, when ulimit from conf files is not picked up, without full relogin.\n      # Makes sense to fix only when runing DN as root\n      if [ \"$command\" == \"datanode\" ] && [ \"$EUID\" -eq 0 ] && [ -n \"$HADOOP_SECURE_DN_USER\" ]; then\n      {% if is_datanode_max_locked_memory_set %}\n      ulimit -l {{datanode_max_locked_memory}}\n      {% endif %}\n      ulimit -n {{hdfs_user_nofile_limit}}\n      fi\n\n      {% if hadoop_custom_extensions_enabled %}\n      #Enable custom extensions\n      export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:{{stack_root}}/current/ext/hadoop/*\n      {% endif %}\n\n      # Enable ACLs on zookeper znodes if required\n      {% if hadoop_zkfc_opts is defined %}\n      export HADOOP_ZKFC_OPTS=\"{{hadoop_zkfc_opts}} $HADOOP_ZKFC_OPTS\"\n      {% endif %}",
          "hdfs_log_dir_prefix" : "/var/log/hadoop",
          "namenode_opt_newsize" : "200m",
          "namenode_heapsize" : "1024m",
          "hdfs_tmp_dir" : "/tmp",
          "namenode_opt_maxpermsize" : "256m",
          "nfsgateway_heapsize" : "1024",
          "hdfs_user_nofile_limit" : "128000",
          "keyserver_host" : " ",
          "keyserver_port" : "",
          "hdfs_user_nproc_limit" : "65536",
          "namenode_opt_maxnewsize" : "200m",
          "namenode_opt_permsize" : "128m"
        }
      }
    },
    {
      "zookeeper-env" : {
        "properties_attributes" : { },
        "properties" : {
          "zk_log_dir" : "/var/log/zookeeper",
          "zk_user" : "zookeeper",
          "zookeeper_keytab_path" : "/etc/security/keytabs/zk.service.keytab",
          "zk_pid_dir" : "/var/run/zookeeper",
          "content" : "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}"
        }
      }
    },
    {
      "livy2-env" : {
        "properties_attributes" : { },
        "properties" : {
          "livy2_log_dir" : "/var/log/livy2",
          "livy2_user" : "livy",
          "spark_home" : "/usr/hdp/current/spark2-client",
          "livy2_pid_dir" : "/var/run/livy2",
          "livy2_group" : "livy",
          "content" : "\n            #!/usr/bin/env bash\n\n            # - SPARK_HOME      Spark which you would like to use in livy\n            # - SPARK_CONF_DIR  Directory containing the Spark configuration to use.\n            # - HADOOP_CONF_DIR Directory containing the Hadoop / YARN configuration to use.\n            # - LIVY_LOG_DIR    Where log files are stored.  (Default: ${LIVY_HOME}/logs)\n            # - LIVY_PID_DIR    Where the pid file is stored. (Default: /tmp)\n            # - LIVY_SERVER_JAVA_OPTS  Java Opts for running livy server (You can set jvm related setting here, like jvm memory/gc algorithm and etc.)\n            export SPARK_HOME=/usr/hdp/current/spark2-client\n            export SPARK_CONF_DIR=/etc/spark2/conf\n            export JAVA_HOME={{java_home}}\n            export HADOOP_CONF_DIR=/etc/hadoop/conf\n            export LIVY_LOG_DIR={{livy2_log_dir}}\n            export LIVY_PID_DIR={{livy2_pid_dir}}\n            export LIVY_SERVER_JAVA_OPTS=\"-Xmx2g\""
        }
      }
    },
    {
      "hive-interactive-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.vectorized.groupby.maxentries" : "1000000",
          "hive.llap.client.consistent.splits" : "true",
          "hive.llap.daemon.yarn.container.mb" : "0",
          "hive.llap.io.memory.size" : "0",
          "hive.llap.daemon.am.liveness.heartbeat.interval.ms" : "10000ms",
          "hive.llap.task.scheduler.locality.delay" : "-1",
          "hive.vectorized.execution.reduce.enabled" : "true",
          "hive.druid.http.read.timeout" : "PT10M",
          "hive.llap.daemon.rpc.port" : "0",
          "hive.druid.indexer.segments.granularity" : "DAY",
          "hive.execution.mode" : "llap",
          "dfs.client.mmap.enabled" : "false",
          "hive.druid.broker.address.default" : "localhost:8082",
          "hive.druid.metadata.db.type" : "mysql",
          "hive.exec.orc.split.strategy" : "HYBRID",
          "hive.llap.io.enabled" : "true",
          "hive.vectorized.execution.mapjoin.native.fast.hashtable.enabled" : "true",
          "hive.optimize.dynamic.partition.hashjoin" : "true",
          "hive.mapjoin.hybridgrace.hashtable" : "false",
          "hive.execution.engine" : "tez",
          "hive.llap.object.cache.enabled" : "true",
          "hive.druid.basePersistDirectory" : "",
          "hive.llap.daemon.queue.name" : "default",
          "hive.tez.container.size" : "682",
          "hive.druid.working.directory" : "/tmp/druid-indexing",
          "hive.metastore.uris" : "",
          "hive.druid.metadata.username" : "druid",
          "hive.server2.tez.sessions.restricted.configs" : "hive.execution.mode,hive.execution.engine",
          "hive.llap.zk.sm.keytab.file" : "/etc/security/keytabs/hive.service.keytab",
          "hive.tez.cartesian-product.enabled" : "true",
          "hive.llap.zk.sm.principal" : "hive/_HOST@LBG.DEV",
          "hive.druid.select.distribute" : "true",
          "hive.llap.auto.allow.uber" : "false",
          "hive.druid.storage.storageDirectory" : "{{druid_storage_dir}}",
          "hive.server2.webui.port" : "10502",
          "hive.druid.maxTries" : "5",
          "hive.llap.daemon.num.executors" : "1",
          "hive.llap.daemon.task.scheduler.enable.preemption" : "true",
          "hive.druid.indexer.partition.size.max" : "1000000",
          "hive.llap.task.keytab.file" : "/etc/security/keytabs/hive.service.keytab",
          "hive.druid.metadata.uri" : "jdbc:mysql://localhost:3355/druid",
          "hive.llap.io.use.lrfu" : "true",
          "hive.druid.coordinator.address.default" : "localhost:8082",
          "hive.vectorized.execution.mapjoin.native.enabled" : "true",
          "hive.metastore.event.listeners" : "",
          "hive.server2.tez.default.queues" : "default",
          "hive.druid.bitmap.type" : "roaring",
          "hive.llap.zk.sm.connectionString" : "%HOSTGROUP::host_group_3%:2181,%HOSTGROUP::host_group_2%:2181",
          "hive.server2.tez.sessions.custom.queue.allowed" : "ignore",
          "hive.server2.tez.sessions.per.default.queue" : "1",
          "hive.server2.webui.use.ssl" : "false",
          "hive.llap.management.rpc.port" : "15004",
          "hive.server2.thrift.http.port" : "10501",
          "hive.llap.daemon.service.principal" : "hive/_HOST@LBG.DEV",
          "hive.map.aggr.hash.min.reduction" : "0.99",
          "hive.merge.nway.joins" : "false",
          "hive.llap.daemon.logger" : "query-routing",
          "hive.prewarm.enabled" : "false",
          "hive.auto.convert.join.noconditionaltask.size" : "1000000000",
          "llap.shuffle.connection-keep-alive.timeout" : "60",
          "hive.llap.execution.mode" : "only",
          "hive.llap.daemon.yarn.shuffle.port" : "15551",
          "hive.llap.enable.grace.join.in.llap" : "false",
          "hive.llap.task.principal" : "hive/_HOST@LBG.DEV",
          "hive.druid.passiveWaitTimeMs" : "30000",
          "hive.llap.daemon.vcpus.per.instance" : "${hive.llap.daemon.num.executors}",
          "hive.llap.io.memory.mode" : "",
          "hive.server2.thrift.port" : "10500",
          "hive.driver.parallel.compilation" : "true",
          "hive.tez.exec.print.summary" : "true",
          "hive.tez.input.generate.consistent.splits" : "true",
          "dfs.short.circuit.shared.memory.watcher.interrupt.check.ms" : "0",
          "hive.llap.daemon.keytab.file" : "/etc/security/keytabs/hive.service.keytab",
          "hive.vectorized.execution.mapjoin.minmax.enabled" : "true",
          "hive.server2.enable.doAs" : "false",
          "hive.server2.zookeeper.namespace" : "hiveserver2-hive2",
          "hive.druid.indexer.memory.rownum.max" : "75000",
          "hive.tez.bucket.pruning" : "true",
          "hive.llap.io.threadpool.size" : "2",
          "llap.shuffle.connection-keep-alive.enable" : "true",
          "hive.llap.daemon.service.hosts" : "@llap0",
          "hive.server2.tez.initialize.default.sessions" : "true"
        }
      }
    },
    {
      "livy2-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "livy.repl.enableHiveContext" : "true",
          "livy.spark.master" : "yarn-cluster",
          "livy.server.recovery.state-store.url" : "/livy2-recovery",
          "livy.server.session.timeout" : "3600000",
          "livy.environment" : "production",
          "livy.server.csrf_protection.enabled" : "true",
          "livy.server.recovery.mode" : "recovery",
          "livy.impersonation.enabled" : "true",
          "livy.server.auth.type" : "kerberos",
          "livy.server.port" : "8999",
          "livy.server.recovery.state-store" : "filesystem"
        }
      }
    },
    {
      "ranger-hive-audit" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hive/audit/hdfs/spool",
          "xasecure.audit.is.enabled" : "true",
          "xasecure.audit.jaas.Client.option.keyTab" : "/etc/security/keytabs/hive.service.keytab",
          "xasecure.audit.destination.hdfs" : "true",
          "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
          "xasecure.audit.jaas.Client.option.serviceName" : "solr",
          "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
          "xasecure.audit.jaas.Client.option.useKeyTab" : "true",
          "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hive/audit/solr/spool",
          "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_4%:8020/ranger/audit",
          "xasecure.audit.jaas.Client.option.principal" : "hive/_HOST@LBG.DEV",
          "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
          "ranger.plugin.hive.ambari.cluster.name" : "{{cluster_name}}",
          "xasecure.audit.destination.solr" : "false",
          "xasecure.audit.destination.solr.zookeepers" : "NONE",
          "xasecure.audit.provider.summary.enabled" : "false",
          "xasecure.audit.jaas.Client.option.storeKey" : "false",
          "xasecure.audit.destination.solr.urls" : ""
        }
      }
    },
    {
      "slider-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nlog4j.rootLogger=INFO,stdout\nlog4j.threshhold=ALL\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n\n# log layout skips stack-trace creation operations by avoiding line numbers and method\nlog4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} - %m%n\n\n# debug edition is much more expensive\n#log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} [%t] %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\nlog4j.appender.subprocess=org.apache.log4j.ConsoleAppender\nlog4j.appender.subprocess.layout=org.apache.log4j.PatternLayout\nlog4j.appender.subprocess.layout.ConversionPattern=[%c{1}]: %m%n\n#log4j.logger.org.apache.slider.yarn.appmaster.SliderAppMasterer.master=INFO,subprocess\n\n# for debugging Slider\n#log4j.logger.org.apache.slider=DEBUG\n#log4j.logger.org.apache.slider=DEBUG\n\n# uncomment to debug service lifecycle issues\n#log4j.logger.org.apache.hadoop.yarn.service.launcher=DEBUG\n#log4j.logger.org.apache.hadoop.yarn.service=DEBUG\n\n# uncomment for YARN operations\n#log4j.logger.org.apache.hadoop.yarn.client=DEBUG\n\n# uncomment this to debug security problems\n#log4j.logger.org.apache.hadoop.security=DEBUG\n\n#crank back on some noise\nlog4j.logger.org.apache.hadoop.util.NativeCodeLoader=ERROR\nlog4j.logger.org.apache.hadoop.hdfs=WARN\n\n\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor=WARN\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl=WARN\nlog4j.logger.org.apache.zookeeper=WARN"
        }
      }
    },
    {
      "ranger-site" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "kafka_jaas_conf" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n/**\n* Example of SASL/PLAIN Configuration\n*\n* KafkaServer {\n*   org.apache.kafka.common.security.plain.PlainLoginModule required\n*   username=\"admin\"\n*   password=\"admin-secret\"\n*   user_admin=\"admin-secret\"\n*   user_alice=\"alice-secret\";\n*   };\n*\n* Example of SASL/SCRAM\n*\n* KafkaServer {\n*   org.apache.kafka.common.security.scram.ScramLoginModule required\n*   username=\"admin\"\n*   password=\"admin-secret\"\n*   };\n*\n* Example of Enabling multiple SASL mechanisms in a broker:\n*\n*   KafkaServer {\n*\n*    com.sun.security.auth.module.Krb5LoginModule required\n*    useKeyTab=true\n*    storeKey=true\n*    keyTab=\"/etc/security/keytabs/kafka_server.keytab\"\n*    principal=\"kafka/kafka1.hostname.com@EXAMPLE.COM\";\n*\n*    org.apache.kafka.common.security.plain.PlainLoginModule required\n*    username=\"admin\"\n*    password=\"admin-secret\"\n*    user_admin=\"admin-secret\"\n*    user_alice=\"alice-secret\";\n*\n*    org.apache.kafka.common.security.scram.ScramLoginModule required\n*    username=\"scram-admin\"\n*    password=\"scram-admin-secret\";\n*    };\n*\n**/\n\n{% if kerberos_security_enabled %}\n\n    KafkaServer {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useKeyTab=true\n    keyTab=\"{{kafka_keytab_path}}\"\n    storeKey=true\n    useTicketCache=false\n    serviceName=\"{{kafka_bare_jaas_principal}}\"\n    principal=\"{{kafka_jaas_principal}}\";\n    };\n    KafkaClient {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useTicketCache=true\n    renewTicket=true\n    serviceName=\"{{kafka_bare_jaas_principal}}\";\n    };\n    Client {\n    com.sun.security.auth.module.Krb5LoginModule required\n    useKeyTab=true\n    keyTab=\"{{kafka_keytab_path}}\"\n    storeKey=true\n    useTicketCache=false\n    serviceName=\"zookeeper\"\n    principal=\"{{kafka_jaas_principal}}\";\n    };\n    com.sun.security.jgss.krb5.initiate {\n    com.sun.security.auth.module.Krb5LoginModule required\n    renewTGT=false\n    doNotPrompt=true\n    useKeyTab=true\n    keyTab=\"{{kafka_keytab_path}}\"\n    storeKey=true\n    useTicketCache=false\n    serviceName=\"{{kafka_bare_jaas_principal}}\"\n    principal=\"{{kafka_jaas_principal}}\";\n    };\n\n{% endif %}"
        }
      }
    },
    {
      "pig-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\nJAVA_HOME={{java64_home}}\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\nif [ -d \"/usr/lib/tez\" ]; then\n  PIG_OPTS=\"$PIG_OPTS -Dmapreduce.framework.name=yarn\"\nfi"
        }
      }
    },
    {
      "ranger-hdfs-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-truststore.jks",
          "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-plugin-keystore.jks",
          "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
          "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}"
        }
      }
    },
    {
      "ranger-yarn-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-truststore.jks",
          "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hadoop-client/conf/ranger-yarn-plugin-keystore.jks",
          "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
          "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}"
        }
      }
    },
    {
      "ranger-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "RANGER_SERVER:ranger_admin,ranger_dbpatch;RANGER_USERSYNC:ranger_usersync;",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"ranger_admin\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/ranger-env/ranger_admin_log_dir', '/var/log/ranger/admin')}}/xa_portal.log\"\n    },\n    {\n      \"type\":\"ranger_dbpatch\",\n      \"is_enabled\":\"true\",\n      \"path\":\"{{default('/configurations/ranger-env/ranger_admin_log_dir', '/var/log/ranger/admin')}}/ranger_db_patch.log\"\n    },\n    {\n      \"type\":\"ranger_usersync\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/ranger-env/ranger_usersync_log_dir', '/var/log/ranger/usersync')}}/usersync.log\"\n    }\n   ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ranger_admin\",\n            \"ranger_dbpatch\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d [%t] %-5p %C{6} (%F:%L) - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{INT:line_number}\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"ranger_usersync\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %m%n\",\n      \"multiline_pattern\":\"^(%{USER_SYNC_DATE:logtime})\",\n      \"message_pattern\":\"(?m)^%{USER_SYNC_DATE:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"dd MMM yyyy HH:mm:ss\"\n          }\n         }\n       }\n     }\n   ]\n }",
          "service_name" : "Ranger"
        }
      }
    },
    {
      "ranger-tagsync-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.policymgr.clientssl.truststore" : "/etc/security/serverKeys/ranger-tagsync-mytruststore.jks",
          "xasecure.policymgr.clientssl.keystore" : "/etc/security/serverKeys/ranger-tagsync-keystore.jks",
          "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{ranger_tagsync_credential_file}}",
          "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{ranger_tagsync_credential_file}}"
        }
      }
    },
    {
      "ranger-hive-policymgr-ssl" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.policymgr.clientssl.truststore" : "/usr/hdp/current/hive-server2/conf/ranger-plugin-truststore.jks",
          "xasecure.policymgr.clientssl.keystore" : "/usr/hdp/current/hive-server2/conf/ranger-plugin-keystore.jks",
          "xasecure.policymgr.clientssl.keystore.credential.file" : "jceks://file{{credential_file}}",
          "xasecure.policymgr.clientssl.truststore.credential.file" : "jceks://file{{credential_file}}"
        }
      }
    },
    {
      "zookeeper-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "ZOOKEEPER_SERVER:zookeeper",
          "content" : "\n{\n  \"input\":[\n    {\n     \"type\":\"zookeeper\",\n     \"rowtype\":\"service\",\n     \"path\":\"{{default('/configurations/zookeeper-env/zk_log_dir', '/var/log/zookeeper')}}/zookeeper*.log\"\n    }\n  ],\n  \"filter\":[\n   {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\"type\":[\"zookeeper\"]}\n      },\n     \"log4j_format\":\"%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\",\n     \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n     \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}-%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\@%{INT:line_number}\\\\]%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n     \"post_map_values\": {\n       \"logtime\": {\n         \"map_date\":{\n           \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n         }\n       }\n     }\n    }\n   ]\n}",
          "service_name" : "Zookeeper"
        }
      }
    },
    {
      "hcat-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n      # Licensed to the Apache Software Foundation (ASF) under one\n      # or more contributor license agreements. See the NOTICE file\n      # distributed with this work for additional information\n      # regarding copyright ownership. The ASF licenses this file\n      # to you under the Apache License, Version 2.0 (the\n      # \"License\"); you may not use this file except in compliance\n      # with the License. You may obtain a copy of the License at\n      #\n      # http://www.apache.org/licenses/LICENSE-2.0\n      #\n      # Unless required by applicable law or agreed to in writing, software\n      # distributed under the License is distributed on an \"AS IS\" BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      # See the License for the specific language governing permissions and\n      # limitations under the License.\n\n      JAVA_HOME={{java64_home}}\n      HCAT_PID_DIR={{hcat_pid_dir}}/\n      HCAT_LOG_DIR={{hcat_log_dir}}/\n      HCAT_CONF_DIR={{hcat_conf_dir}}\n      HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n      #DBROOT is the path where the connector jars are downloaded\n      DBROOT={{hcat_dbroot}}\n      USER={{hcat_user}}\n      METASTORE_PORT={{hive_metastore_port}}"
        }
      }
    },
    {
      "pig-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Pig default configuration file. All values can be overwritten by pig.properties and command line arguments.\n# see bin/pig -help\n\n# brief logging (no timestamps)\nbrief=false\n\n# debug level, INFO is default\ndebug=INFO\n\n# verbose print all log messages to screen (default to print only INFO and above to screen)\nverbose=false\n\n# exectype local|mapreduce|tez, mapreduce is default\nexectype=tez\n\n# Enable insertion of information about script into hadoop job conf \npig.script.info.enabled=true\n\n# Do not spill temp files smaller than this size (bytes)\npig.spill.size.threshold=5000000\n\n# EXPERIMENT: Activate garbage collection when spilling a file bigger than this size (bytes)\n# This should help reduce the number of files being spilled.\npig.spill.gc.activation.size=40000000\n\n# the following two parameters are to help estimate the reducer number\npig.exec.reducers.bytes.per.reducer=1000000000\npig.exec.reducers.max=999\n\n# Temporary location to store the intermediate data.\npig.temp.dir=/tmp/\n\n# Threshold for merging FRJoin fragment files\npig.files.concatenation.threshold=100\npig.optimistic.files.concatenation=false;\n\npig.disable.counter=false\n\nhcat.bin=/usr/bin/hcat"
        }
      }
    },
    {
      "ranger-hive-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "external_ranger_admin_username" : "",
          "REPOSITORY_CONFIG_USERNAME" : "hive",
          "external_admin_username" : "",
          "jdbc.driverClassName" : "org.apache.hive.jdbc.HiveDriver",
          "common.name.for.certificate" : "",
          "policy_user" : "ambari-qa"
        }
      }
    },
    {
      "ranger-yarn-security" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger.plugin.yarn.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl-yarn.xml",
          "ranger.plugin.yarn.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
          "ranger.plugin.yarn.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
          "ranger.plugin.yarn.policy.pollIntervalMs" : "30000",
          "ranger.plugin.yarn.policy.rest.url" : "http://ambari-server.lbg.dev:6080",
          "ranger.plugin.yarn.service.name" : "{{repo_name}}"
        }
      }
    },
    {
      "ranger-yarn-audit" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/hdfs/spool",
          "xasecure.audit.is.enabled" : "true",
          "xasecure.audit.jaas.Client.option.keyTab" : "/etc/security/keytabs/rm.service.keytab",
          "xasecure.audit.destination.hdfs" : "true",
          "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
          "xasecure.audit.jaas.Client.option.serviceName" : "solr",
          "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
          "xasecure.audit.jaas.Client.option.useKeyTab" : "true",
          "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/yarn/audit/solr/spool",
          "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_4%:8020/ranger/audit",
          "xasecure.audit.jaas.Client.option.principal" : "rm/_HOST@LBG.DEV",
          "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
          "xasecure.audit.destination.solr" : "false",
          "ranger.plugin.yarn.ambari.cluster.name" : "{{cluster_name}}",
          "xasecure.audit.destination.solr.zookeepers" : "NONE",
          "xasecure.audit.provider.summary.enabled" : "false",
          "xasecure.audit.jaas.Client.option.storeKey" : "false",
          "xasecure.audit.destination.solr.urls" : ""
        }
      }
    },
    {
      "livy2-log4j-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n            # Set everything to be logged to the console\n            log4j.rootCategory=INFO, console\n            log4j.appender.console=org.apache.log4j.ConsoleAppender\n            log4j.appender.console.target=System.err\n            log4j.appender.console.layout=org.apache.log4j.PatternLayout\n            log4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n            log4j.logger.org.eclipse.jetty=WARN"
        }
      }
    },
    {
      "tez-interactive-site" : {
        "properties_attributes" : {
          "final" : {
            "tez.runtime.shuffle.ssl.enable" : "true"
          }
        },
        "properties" : {
          "tez.runtime.pipelined.sorter.lazy-allocate.memory" : "true",
          "tez.runtime.report.partition.stats" : "true",
          "tez.am.client.heartbeat.timeout.secs" : "90",
          "tez.runtime.shuffle.connect.timeout" : "30000",
          "tez.runtime.enable.final-merge.in.output" : "false",
          "tez.am.client.heartbeat.poll.interval.millis" : "6000",
          "tez.container.max.java.heap.fraction" : "-1",
          "tez.runtime.shuffle.memory.limit.percent" : "0.25",
          "tez.session.am.dag.submit.timeout.secs" : "1209600",
          "tez.runtime.shuffle.read.timeout" : "30000",
          "tez.am.am-rm.heartbeat.interval-ms.max" : "10000",
          "tez.lib.uris" : "/hdp/apps/${hdp.version}/tez_hive2/tez.tar.gz",
          "tez.am.task.listener.thread-count" : "1",
          "tez.runtime.shuffle.fetch.buffer.percent" : "0.6",
          "tez.task.timeout-ms" : "90000",
          "tez.am.node-blacklisting.enabled" : "false",
          "tez.history.logging.taskattempt-filters" : "SERVICE_BUSY,EXTERNAL_PREEMPTION",
          "tez.am.task.reschedule.higher.priority" : "false",
          "tez.runtime.unordered.output.buffer.size-mb" : "100",
          "tez.runtime.pipelined-shuffle.enabled" : "false",
          "tez.runtime.shuffle.fetch.verify-disk-checksum" : "false",
          "tez.runtime.shuffle.parallel.copies" : "8",
          "tez.runtime.shuffle.ssl.enable" : "false",
          "tez.dag.recovery.enabled" : "false",
          "tez.history.logging.log.level" : "TASK_ATTEMPT",
          "tez.task.heartbeat.timeout.check-ms" : "15000",
          "tez.am.resource.memory.mb" : "1536",
          "tez.history.logging.timeline.num-dags-per-group" : "5",
          "tez.grouping.node.local.only" : "true",
          "tez.runtime.io.sort.mb" : "512",
          "tez.runtime.shuffle.keep-alive.enabled" : "true"
        }
      }
    },
    {
      "hive-exec-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\n\nhive.log.threshold=ALL\nhive.root.logger={{hive_log_level}},FA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.query.id=hadoop\nhive.log.file=${hive.query.id}.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=${hive.log.threshold}\n\n#\n# File Appender\n#\n\nlog4j.appender.FA=org.apache.log4j.FileAppender\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,FA\nlog4j.category.Datastore=ERROR,FA\nlog4j.category.Datastore.Schema=ERROR,FA\nlog4j.category.JPOX.Datastore=ERROR,FA\nlog4j.category.JPOX.Plugin=ERROR,FA\nlog4j.category.JPOX.MetaData=ERROR,FA\nlog4j.category.JPOX.Query=ERROR,FA\nlog4j.category.JPOX.General=ERROR,FA\nlog4j.category.JPOX.Enhancer=ERROR,FA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA"
        }
      }
    },
    {
      "spark2-defaults" : {
        "properties_attributes" : { },
        "properties" : {
          "spark.history.kerberos.keytab" : "/etc/security/keytabs/spark.headless.keytab",
          "spark.history.ui.port" : "18081",
          "spark.driver.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
          "spark.eventLog.dir" : "hdfs:///spark2-history/",
          "spark.eventLog.enabled" : "true",
          "spark.executor.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
          "spark.history.provider" : "org.apache.spark.deploy.history.FsHistoryProvider",
          "spark.yarn.historyServer.address" : "{{spark_history_server_host}}:{{spark_history_ui_port}}",
          "spark.history.kerberos.enabled" : "true",
          "spark.history.fs.logDirectory" : "hdfs:///spark2-history/",
          "spark.yarn.queue" : "default"
        }
      }
    },
    {
      "webhcat-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# The file containing the running pid\nPID_FILE={{webhcat_pid_file}}\n\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\n\n\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\n\n# The console error log\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\n\n# The console log\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\n\n#TEMPLETON_JAR=templeton_jar_name\n\n#HADOOP_PREFIX=hadoop_prefix\n\n#HCAT_PREFIX=hive_prefix\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}"
        }
      }
    },
    {
      "hdfs-site" : {
        "properties_attributes" : {
          "final" : {
            "dfs.webhdfs.enabled" : "true",
            "dfs.namenode.http-address" : "true",
            "dfs.support.append" : "true",
            "dfs.namenode.name.dir" : "true",
            "dfs.datanode.failed.volumes.tolerated" : "true",
            "dfs.datanode.data.dir" : "true"
          }
        },
        "properties" : {
          "dfs.replication" : "3",
          "dfs.namenode.keytab.file" : "/etc/security/keytabs/nn.service.keytab",
          "dfs.namenode.audit.log.async" : "true",
          "dfs.namenode.checkpoint.dir" : "/hadoop/hdfs/namesecondary",
          "dfs.namenode.avoid.read.stale.datanode" : "true",
          "manage.include.files" : "false",
          "dfs.journalnode.http-address" : "0.0.0.0:8480",
          "nfs.file.dump.dir" : "/tmp/.hdfs-nfs",
          "dfs.namenode.rpc-address" : "%HOSTGROUP::host_group_4%:8020",
          "dfs.namenode.https-address" : "%HOSTGROUP::host_group_4%:50470",
          "dfs.web.authentication.kerberos.principal" : "HTTP/_HOST@LBG.DEV",
          "dfs.secondary.namenode.kerberos.principal" : "nn/_HOST@LBG.DEV",
          "dfs.encrypt.data.transfer.cipher.suites" : "AES/CTR/NoPadding",
          "dfs.client.read.shortcircuit.streams.cache.size" : "4096",
          "dfs.hosts.exclude" : "/etc/hadoop/conf/dfs.exclude",
          "dfs.namenode.kerberos.internal.spnego.principal" : "HTTP/_HOST@LBG.DEV",
          "dfs.secondary.namenode.keytab.file" : "/etc/security/keytabs/nn.service.keytab",
          "dfs.datanode.keytab.file" : "/etc/security/keytabs/dn.service.keytab",
          "dfs.namenode.accesstime.precision" : "0",
          "dfs.namenode.fslock.fair" : "false",
          "dfs.web.authentication.kerberos.keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "dfs.permissions.enabled" : "true",
          "dfs.datanode.balance.bandwidthPerSec" : "6250000",
          "dfs.namenode.stale.datanode.interval" : "30000",
          "dfs.secondary.namenode.kerberos.internal.spnego.principal" : "HTTP/_HOST@LBG.DEV",
          "dfs.content-summary.limit" : "5000",
          "dfs.http.policy" : "HTTP_ONLY",
          "dfs.journalnode.https-address" : "0.0.0.0:8481",
          "dfs.datanode.du.reserved" : "1073741824",
          "dfs.datanode.kerberos.principal" : "dn/_HOST@LBG.DEV",
          "dfs.domain.socket.path" : "/var/lib/hadoop-hdfs/dn_socket",
          "dfs.datanode.ipc.address" : "0.0.0.0:8010",
          "dfs.cluster.administrators" : " hdfs",
          "dfs.datanode.max.transfer.threads" : "4096",
          "dfs.namenode.handler.count" : "75",
          "dfs.https.port" : "50470",
          "dfs.replication.max" : "50",
          "dfs.client.read.shortcircuit" : "true",
          "dfs.webhdfs.enabled" : "true",
          "dfs.namenode.http-address" : "%HOSTGROUP::host_group_4%:50070",
          "dfs.namenode.name.dir" : "/hadoop/hdfs/namenode",
          "dfs.namenode.avoid.write.stale.datanode" : "true",
          "dfs.namenode.kerberos.principal" : "nn/_HOST@LBG.DEV",
          "dfs.datanode.https.address" : "0.0.0.0:50475",
          "dfs.datanode.failed.volumes.tolerated" : "0",
          "dfs.client.retry.policy.enabled" : "false",
          "dfs.namenode.inode.attributes.provider.class" : "org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer",
          "hadoop.caller.context.enabled" : "true",
          "dfs.namenode.startup.delay.block.deletion.sec" : "3600",
          "dfs.block.access.token.enable" : "true",
          "dfs.datanode.data.dir" : "/hadoop/hdfs/data",
          "dfs.permissions.superusergroup" : "hdfs",
          "dfs.blocksize" : "134217728",
          "dfs.namenode.checkpoint.edits.dir" : "${dfs.namenode.checkpoint.dir}",
          "nfs.exports.allowed.hosts" : "* rw",
          "dfs.datanode.address" : "0.0.0.0:1019",
          "dfs.blockreport.initialDelay" : "120",
          "dfs.datanode.data.dir.perm" : "750",
          "dfs.namenode.write.stale.datanode.ratio" : "1.0f",
          "dfs.namenode.name.dir.restore" : "true",
          "dfs.heartbeat.interval" : "3",
          "dfs.namenode.secondary.http-address" : "%HOSTGROUP::host_group_4%:50090",
          "dfs.namenode.checkpoint.txns" : "1000000",
          "dfs.journalnode.edits.dir" : "/hadoop/hdfs/journalnode",
          "dfs.support.append" : "true",
          "fs.permissions.umask-mode" : "022",
          "dfs.namenode.safemode.threshold-pct" : "1",
          "dfs.namenode.checkpoint.period" : "21600",
          "dfs.datanode.http.address" : "0.0.0.0:1022"
        }
      }
    },
    {
      "tagsync-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger_tagsync_log_number_of_backup_files" : "20",
          "ranger_tagsync_log_maxfilesize" : "256",
          "content" : "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nlog4j.rootLogger = info,logFile\n\n# logFile\nlog4j.appender.logFile=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.logFile.file=${logdir}/tagsync.log\nlog4j.appender.logFile.datePattern='.'yyyy-MM-dd\nlog4j.appender.logFile.layout=org.apache.log4j.PatternLayout\nlog4j.appender.logFile.MaxFileSize={{ranger_tagsync_log_maxfilesize}}MB\nlog4j.appender.logFile.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %L %m%n\n\n# console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.Target=System.out\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss} %5p %c{1} [%t] - %L %m%n"
        }
      }
    },
    {
      "yarn-site" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn.log-aggregation.file-formats" : "IndexedFormat,TFile",
          "yarn.resourcemanager.zk-address" : "%HOSTGROUP::host_group_3%:2181,%HOSTGROUP::host_group_2%:2181",
          "yarn.nodemanager.container-monitor.interval-ms" : "3000",
          "yarn.resourcemanager.webapp.spnego-principal" : "HTTP/_HOST@LBG.DEV",
          "yarn.timeline-service.entity-group-fs-store.active-dir" : "/ats/active/",
          "yarn.timeline-service.http-authentication.signer.secret.provider.object" : "",
          "yarn.log.server.web-service.url" : "http://%HOSTGROUP::host_group_4%:8188/ws/v1/applicationhistory",
          "yarn.nodemanager.linux-container-executor.group" : "hadoop",
          "yarn.client.failover-proxy-provider" : "org.apache.hadoop.yarn.client.RequestHedgingRMFailoverProxyProvider",
          "yarn.application.classpath" : "{{hadoop_home}}/conf,{{hadoop_home}}/*,{{hadoop_home}}/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*,/usr/hdp/current/ext/hadoop/*",
          "yarn.nodemanager.kill-escape.launch-command-line" : "slider-agent,LLAP",
          "yarn.resourcemanager.proxyuser.*.hosts" : "",
          "yarn.timeline-service.http-authentication.token.validity" : "",
          "yarn.admin.acl" : "yarn,dr.who",
          "yarn.timeline-service.http-authentication.proxyuser.ambari-server-dev.groups" : "*",
          "yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds" : "3600",
          "yarn.nodemanager.remote-app-log-dir-suffix" : "logs",
          "yarn.nodemanager.address" : "0.0.0.0:45454",
          "yarn.resourcemanager.webapp.address" : "%HOSTGROUP::host_group_4%:8088",
          "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms" : "300000",
          "yarn.scheduler.maximum-allocation-vcores" : "8",
          "yarn.timeline-service.http-authentication.kerberos.keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "yarn.timeline-service.address" : "%HOSTGROUP::host_group_4%:10200",
          "yarn.timeline-service.enabled" : "true",
          "yarn.nodemanager.aux-services" : "mapreduce_shuffle,spark_shuffle,spark2_shuffle",
          "yarn.nodemanager.resource.cpu-vcores" : "8",
          "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled" : "false",
          "yarn.nodemanager.aux-services.spark_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
          "yarn.nodemanager.log-aggregation.debug-enabled" : "false",
          "yarn.resourcemanager.zk-acl" : "sasl:rm:rwcda",
          "yarn.timeline-service.http-authentication.proxyuser.*.users" : "",
          "yarn.resourcemanager.webapp.spnego-keytab-file" : "/etc/security/keytabs/spnego.service.keytab",
          "yarn.timeline-service.http-authentication.kerberos.principal" : "HTTP/_HOST@LBG.DEV",
          "yarn.client.nodemanager-connect.max-wait-ms" : "60000",
          "yarn.http.policy" : "HTTP_ONLY",
          "yarn.timeline-service.http-authentication.simple.anonymous.allowed" : "true",
          "yarn.resourcemanager.proxyuser.*.groups" : "",
          "yarn.resourcemanager.zk-state-store.parent-path" : "/rmstore",
          "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size" : "10000",
          "hadoop.registry.secure" : "true",
          "yarn.nodemanager.keytab" : "/etc/security/keytabs/nm.service.keytab",
          "yarn.resourcemanager.admin.address" : "%HOSTGROUP::host_group_4%:8141",
          "yarn.timeline-service.http-authentication.proxyuser.ambari-server-dev.hosts" : "ambari-server.lbg.dev",
          "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage" : "false",
          "yarn.resourcemanager.resource-tracker.address" : "%HOSTGROUP::host_group_4%:8025",
          "yarn.nodemanager.delete.debug-delay-sec" : "0",
          "yarn.resourcemanager.fs.state-store.retry-policy-spec" : "2000, 500",
          "yarn.timeline-service.http-authentication.type" : "kerberos",
          "yarn.timeline-service.ttl-enable" : "true",
          "yarn.timeline-service.entity-group-fs-store.retain-seconds" : "604800",
          "yarn.log-aggregation.retain-seconds" : "2592000",
          "yarn.nodemanager.resource.memory-mb" : "9216",
          "yarn.nodemanager.disk-health-checker.min-healthy-disks" : "0.25",
          "yarn.node-labels.enabled" : "false",
          "yarn.nodemanager.kill-escape.user" : "hive",
          "yarn.resourcemanager.connect.max-wait.ms" : "-1",
          "yarn.resourcemanager.zk-num-retries" : "1000",
          "yarn.scheduler.minimum-allocation-vcores" : "1",
          "yarn.nodemanager.aux-services.spark2_shuffle.classpath" : "{{stack_root}}/${hdp.version}/spark2/aux/*",
          "yarn.resourcemanager.scheduler.class" : "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
          "yarn.resourcemanager.system-metrics-publisher.enabled" : "true",
          "yarn.timeline-service.client.max-retries" : "30",
          "yarn.timeline-service.client.retry-interval-ms" : "1000",
          "yarn.nodemanager.webapp.spnego-keytab-file" : "/etc/security/keytabs/spnego.service.keytab",
          "yarn.nodemanager.webapp.spnego-principal" : "HTTP/_HOST@LBG.DEV",
          "yarn.timeline-service.http-authentication.kerberos.name.rules" : "",
          "yarn.timeline-service.store-class" : "org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore",
          "yarn.timeline-service.bind-host" : "0.0.0.0",
          "yarn.nodemanager.container-metrics.unregister-delay-ms" : "60000",
          "yarn.timeline-service.generic-application-history.store-class" : "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
          "yarn.resourcemanager.fs.state-store.uri" : " ",
          "yarn.resourcemanager.recovery.enabled" : "true",
          "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classpath" : "",
          "yarn.resourcemanager.scheduler.address" : "%HOSTGROUP::host_group_4%:8030",
          "yarn.timeline-service.client.fd-flush-interval-secs" : "5",
          "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size" : "10000",
          "yarn.timeline-service.ttl-ms" : "2678400000",
          "yarn.nodemanager.health-checker.script.timeout-ms" : "60000",
          "yarn.nodemanager.aux-services.spark2_shuffle.class" : "org.apache.spark.network.yarn.YarnShuffleService",
          "yarn.log.server.url" : "http://%HOSTGROUP::host_group_4%:19888/jobhistory/logs",
          "yarn.timeline-service.entity-group-fs-store.group-id-plugin-classes" : "org.apache.tez.dag.history.logging.ats.TimelineCachePluginImpl",
          "yarn.resourcemanager.address" : "%HOSTGROUP::host_group_4%:8050",
          "yarn.timeline-service.recovery.enabled" : "true",
          "yarn.timeline-service.http-authentication.proxyuser.*.groups" : "",
          "yarn.nodemanager.recovery.dir" : "{{yarn_log_dir_prefix}}/nodemanager/recovery-state",
          "yarn.resourcemanager.scheduler.monitor.enable" : "false",
          "hadoop.registry.rm.enabled" : "true",
          "yarn.resourcemanager.bind-host" : "0.0.0.0",
          "yarn.resourcemanager.keytab" : "/etc/security/keytabs/rm.service.keytab",
          "yarn.nodemanager.log-aggregation.num-log-files-per-app" : "336",
          "yarn.timeline-service.http-authentication.cookie.path" : "",
          "yarn.nodemanager.admin-env" : "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
          "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size" : "10",
          "yarn.nodemanager.principal" : "nm/_HOST@LBG.DEV",
          "yarn.resourcemanager.proxy-user-privileges.enabled" : "true",
          "yarn.acl.enable" : "true",
          "manage.include.files" : "false",
          "yarn.resourcemanager.ha.enabled" : "false",
          "hadoop.registry.client.auth" : "kerberos",
          "yarn.timeline-service.entity-group-fs-store.app-cache-size" : "10",
          "yarn.client.nodemanager-connect.retry-interval-ms" : "10000",
          "yarn.timeline-service.version" : "1.5",
          "yarn.resourcemanager.proxyuser.*.users" : "",
          "yarn.timeline-service.leveldb-timeline-store.read-cache-size" : "104857600",
          "yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor" : "1",
          "yarn.nodemanager.local-dirs" : "/hadoop/yarn/local",
          "yarn.timeline-service.leveldb-timeline-store.path" : "/hadoop/yarn/timeline",
          "yarn.nodemanager.recovery.enabled" : "true",
          "yarn.log-aggregation.file-controller.IndexedFormat.class" : "org.apache.hadoop.yarn.logaggregation.filecontroller.ifile.LogAggregationIndexedFileController",
          "yarn.resourcemanager.zk-timeout-ms" : "10000",
          "yarn.resourcemanager.am.max-attempts" : "2",
          "hadoop.registry.system.accounts" : "sasl:yarn,sasl:jhs,sasl:hdfs-dev,sasl:rm,sasl:hive",
          "yarn.resourcemanager.state-store.max-completed-applications" : "${yarn.resourcemanager.max-completed-applications}",
          "yarn.node-labels.fs-store.root-dir" : "/system/yarn/node-labels",
          "yarn.node-labels.fs-store.retry-policy-spec" : "2000, 500",
          "yarn.nodemanager.aux-services.mapreduce_shuffle.class" : "org.apache.hadoop.mapred.ShuffleHandler",
          "yarn.log-aggregation-enable" : "true",
          "yarn.resourcemanager.work-preserving-recovery.enabled" : "true",
          "yarn.timeline-service.principal" : "yarn/_HOST@LBG.DEV",
          "yarn.nodemanager.aux-services.spark_shuffle.classpath" : "{{stack_root}}/${hdp.version}/spark/aux/*",
          "yarn.resourcemanager.store.class" : "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
          "yarn.timeline-service.http-authentication.signature.secret.file" : "",
          "yarn.timeline-service.http-authentication.proxyuser.*.hosts" : "",
          "yarn.timeline-service.leveldb-state-store.path" : "/hadoop/yarn/timeline",
          "yarn.nodemanager.log.retain-seconds" : "604800",
          "yarn.timeline-service.entity-group-fs-store.done-dir" : "/ats/done/",
          "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage" : "90",
          "hadoop.registry.zk.quorum" : "%HOSTGROUP::host_group_3%:2181,%HOSTGROUP::host_group_2%:2181",
          "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds" : "3600",
          "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor",
          "yarn.resourcemanager.nodes.exclude-path" : "/etc/hadoop/conf/yarn.exclude",
          "yarn.timeline-service.state-store-class" : "org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore",
          "yarn.log-aggregation.file-controller.TFile.class" : "org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController",
          "yarn.nodemanager.bind-host" : "0.0.0.0",
          "hadoop.registry.jaas.context" : "Client",
          "yarn.resourcemanager.hostname" : "%HOSTGROUP::host_group_4%",
          "yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round" : "0.2",
          "yarn.resourcemanager.connect.retry-interval.ms" : "15000",
          "yarn.timeline-service.webapp.address" : "%HOSTGROUP::host_group_4%:8188",
          "yarn.resourcemanager.principal" : "rm/_HOST@LBG.DEV",
          "yarn.scheduler.minimum-allocation-mb" : "512",
          "yarn.timeline-service.entity-group-fs-store.summary-store" : "org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore",
          "yarn.nodemanager.health-checker.interval-ms" : "135000",
          "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb" : "1000",
          "yarn.resourcemanager.zk-retry-interval-ms" : "1000",
          "yarn.timeline-service.keytab" : "/etc/security/keytabs/yarn.service.keytab",
          "yarn.scheduler.capacity.ordering-policy.priority-utilization.underutilized-preemption.enabled" : "false",
          "yarn.nodemanager.remote-app-log-dir" : "/app-logs",
          "yarn.scheduler.maximum-allocation-mb" : "5120",
          "yarn.nodemanager.vmem-check-enabled" : "false",
          "yarn.timeline-service.entity-group-fs-store.scan-interval-seconds" : "15",
          "yarn.resourcemanager.webapp.https.address" : "%HOSTGROUP::host_group_4%:8090",
          "yarn.timeline-service.webapp.https.address" : "%HOSTGROUP::host_group_4%:8190",
          "yarn.nodemanager.resource.percentage-physical-cpu-limit" : "80",
          "yarn.timeline-service.http-authentication.signer.secret.provider" : "",
          "yarn.nodemanager.vmem-pmem-ratio" : "2.1",
          "yarn.authorization-provider" : "org.apache.ranger.authorization.yarn.authorizer.RangerYarnAuthorizer",
          "yarn.nodemanager.log-aggregation.compression-type" : "gz",
          "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms" : "10000",
          "yarn.nodemanager.log-dirs" : "/hadoop/yarn/log",
          "yarn.timeline-service.http-authentication.cookie.domain" : ""
        }
      }
    },
    {
      "hiveserver2-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.service.metrics.hadoop2.component" : "hiveserver2",
          "hive.security.authenticator.manager" : "org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator",
          "hive.security.authorization.enabled" : "true",
          "hive.conf.restricted.list" : "hive.security.authenticator.manager,hive.security.authorization.manager,hive.security.metastore.authorization.manager,hive.security.metastore.authenticator.manager,hive.users.in.admin.role,hive.server2.xsrf.filter.enabled,hive.security.authorization.enabled",
          "hive.security.authorization.manager" : "org.apache.ranger.authorization.hive.authorizer.RangerHiveAuthorizerFactory",
          "hive.metastore.metrics.enabled" : "true",
          "hive.service.metrics.reporter" : "HADOOP2"
        }
      }
    },
    {
      "yarn-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "RESOURCEMANAGER:yarn_resourcemanager,yarn_historyserver,yarn_jobsummary;NODEMANAGER:yarn_nodemanager;APP_TIMELINE_SERVER:yarn_timelineserver",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"yarn_nodemanager\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/yarn-{{default('configurations/yarn-env/yarn_user', 'yarn')}}-nodemanager-*.log\"\n    },\n    {\n      \"type\":\"yarn_resourcemanager\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/yarn-{{default('configurations/yarn-env/yarn_user', 'yarn')}}-resourcemanager-*.log\"\n    },\n    {\n      \"type\":\"yarn_timelineserver\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/yarn-{{default('configurations/yarn-env/yarn_user', 'yarn')}}-timelineserver-*.log\"\n    },\n    {\n      \"type\":\"yarn_historyserver\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/yarn-{{default('configurations/yarn-env/yarn_user', 'yarn')}}-historyserver-*.log\"\n    },\n    {\n      \"type\":\"yarn_jobsummary\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/yarn-env/yarn_log_dir_prefix', '/var/log/hadoop')}}/{{default('configurations/yarn-env/yarn_user', 'yarn')}}/hadoop-mapreduce.jobsummary.log\"\n    }\n   ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"yarn_historyserver\",\n            \"yarn_jobsummary\",\n            \"yarn_nodemanager\",\n            \"yarn_resourcemanager\",\n            \"yarn_timelineserver\"\n          ]\n         }\n       },\n      \"log4j_format\":\"%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\",\n      \"multiline_pattern\":\"^(%{TIMESTAMP_ISO8601:logtime})\",\n      \"message_pattern\":\"(?m)^%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:level}%{SPACE}%{JAVACLASS:logger_name}%{SPACE}\\\\(%{JAVAFILE:file}:%{JAVAMETHOD:method}\\\\(%{INT:line_number}\\\\)\\\\)%{SPACE}-%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     }\n   ]\n}",
          "service_name" : "YARN"
        }
      }
    },
    {
      "ranger-yarn-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger-yarn-plugin-enabled" : "Yes",
          "hadoop.rpc.protection" : "",
          "external_ranger_admin_username" : "",
          "REPOSITORY_CONFIG_USERNAME" : "yarn",
          "external_admin_username" : "",
          "common.name.for.certificate" : "",
          "policy_user" : "ambari-qa"
        }
      }
    },
    {
      "yarn-env" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn_cgroups_enabled" : "false",
          "yarn_user_nproc_limit" : "65536",
          "yarn_log_dir_prefix" : "/var/log/hadoop-yarn",
          "apptimelineserver_heapsize" : "1024",
          "yarn_user_nofile_limit" : "32768",
          "content" : "\n      export HADOOP_YARN_HOME={{hadoop_yarn_home}}\n      export YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\n      export YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\n      export HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n      export JAVA_HOME={{java64_home}}\n      export JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\"\n\n      # We need to add the EWMA appender for the yarn daemons only;\n      # however, YARN_ROOT_LOGGER is shared by the yarn client and the\n      # daemons. This is restrict the EWMA appender to daemons only.\n      INVOKER=\"${0##*/}\"\n      if [ \"$INVOKER\" == \"yarn-daemon.sh\" ]; then\n        export YARN_ROOT_LOGGER=${YARN_ROOT_LOGGER:-INFO,EWMA,RFA}\n      fi\n\n      # User for YARN daemons\n      export HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n      # resolve links - $0 may be a softlink\n      export YARN_CONF_DIR=\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\"\n\n      # some Java parameters\n      # export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n      if [ \"$JAVA_HOME\" != \"\" ]; then\n      #echo \"run java in $JAVA_HOME\"\n      JAVA_HOME=$JAVA_HOME\n      fi\n\n      if [ \"$JAVA_HOME\" = \"\" ]; then\n      echo \"Error: JAVA_HOME is not set.\"\n      exit 1\n      fi\n\n      JAVA=$JAVA_HOME/bin/java\n      JAVA_HEAP_MAX=-Xmx1000m\n\n      # For setting YARN specific HEAP sizes please use this\n      # Parameter and set appropriately\n      YARN_HEAPSIZE={{yarn_heapsize}}\n\n      # check envvars which might override default args\n      if [ \"$YARN_HEAPSIZE\" != \"\" ]; then\n      JAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\n      fi\n\n      # Resource Manager specific parameters\n\n      # Specify the max Heapsize for the ResourceManager using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1000.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_RESOURCEMANAGER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n      # Specify the JVM options to be used when starting the ResourceManager.\n      # These options will be appended to the options specified as YARN_OPTS\n      # and therefore may override any similar flags set in YARN_OPTS\n      #export YARN_RESOURCEMANAGER_OPTS=\n\n      # Node Manager specific parameters\n\n      # Specify the max Heapsize for the NodeManager using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1000.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_NODEMANAGER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n      # Specify the max Heapsize for the timeline server using a numerical value\n      # in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n      # the value to 1024.\n      # This value will be overridden by an Xmx setting specified in either YARN_OPTS\n      # and/or YARN_TIMELINESERVER_OPTS.\n      # If not specified, the default value will be picked from either YARN_HEAPMAX\n      # or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\n      export YARN_TIMELINESERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n      # Specify the JVM options to be used when starting the NodeManager.\n      # These options will be appended to the options specified as YARN_OPTS\n      # and therefore may override any similar flags set in YARN_OPTS\n      #export YARN_NODEMANAGER_OPTS=\n\n      # so that filenames w/ spaces are handled correctly in loops below\n      IFS=\n\n\n      # default log directory and file\n      if [ \"$YARN_LOG_DIR\" = \"\" ]; then\n      YARN_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\n      fi\n      if [ \"$YARN_LOGFILE\" = \"\" ]; then\n      YARN_LOGFILE='yarn.log'\n      fi\n\n      # default policy file for service-level authorization\n      if [ \"$YARN_POLICYFILE\" = \"\" ]; then\n      YARN_POLICYFILE=\"hadoop-policy.xml\"\n      fi\n\n      # restore ordinary behaviour\n      unset IFS\n\n\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\"\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\n      YARN_OPTS=\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\n      export YARN_NODEMANAGER_OPTS=\"$YARN_NODEMANAGER_OPTS -Dnm.audit.logger=INFO,NMAUDIT\"\n      export YARN_RESOURCEMANAGER_OPTS=\"$YARN_RESOURCEMANAGER_OPTS -Drm.audit.logger=INFO,RMAUDIT\"\n      if [ \"x$JAVA_LIBRARY_PATH\" != \"x\" ]; then\n      YARN_OPTS=\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\"\n      fi\n      YARN_OPTS=\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"\n      YARN_OPTS=\"$YARN_OPTS -Djava.io.tmpdir={{hadoop_java_io_tmpdir}}\"\n      {% if rm_security_opts is defined %}\n      YARN_OPTS=\"{{rm_security_opts}} $YARN_OPTS\"\n      {% endif %}",
          "is_supported_yarn_ranger" : "true",
          "service_check.queue.name" : "default",
          "resourcemanager_heapsize" : "1024",
          "yarn_pid_dir_prefix" : "/var/run/hadoop-yarn",
          "yarn_user" : "yarn",
          "min_user_id" : "500",
          "yarn_heapsize" : "1024",
          "nodemanager_heapsize" : "1024"
        }
      }
    },
    {
      "ranger-hdfs-audit" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/hdfs/spool",
          "xasecure.audit.is.enabled" : "true",
          "xasecure.audit.jaas.Client.option.keyTab" : "/etc/security/keytabs/nn.service.keytab",
          "xasecure.audit.destination.hdfs" : "true",
          "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
          "xasecure.audit.jaas.Client.option.serviceName" : "solr",
          "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
          "xasecure.audit.jaas.Client.option.useKeyTab" : "true",
          "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/hadoop/hdfs/audit/solr/spool",
          "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_4%:8020/ranger/audit",
          "xasecure.audit.jaas.Client.option.principal" : "nn/_HOST@LBG.DEV",
          "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
          "ranger.plugin.hdfs.ambari.cluster.name" : "{{cluster_name}}",
          "xasecure.audit.destination.solr" : "false",
          "xasecure.audit.destination.solr.zookeepers" : "NONE",
          "xasecure.audit.provider.summary.enabled" : "false",
          "xasecure.audit.jaas.Client.option.storeKey" : "false",
          "xasecure.audit.destination.solr.urls" : ""
        }
      }
    },
    {
      "ranger-hdfs-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger-hdfs-plugin-enabled" : "Yes",
          "hadoop.rpc.protection" : "authentication",
          "external_ranger_admin_username" : "",
          "REPOSITORY_CONFIG_USERNAME" : "hdfs",
          "external_admin_username" : "",
          "common.name.for.certificate" : "",
          "policy_user" : "ambari-qa"
        }
      }
    },
    {
      "spark2-thrift-fairscheduler" : {
        "properties_attributes" : { },
        "properties" : {
          "fairscheduler_content" : "<?xml version=\"1.0\"?>\n            <allocations>\n            <pool name=\"default\">\n            <schedulingMode>FAIR</schedulingMode>\n            <weight>1</weight>\n            <minShare>2</minShare>\n            </pool>\n            </allocations>"
        }
      }
    },
    {
      "usersync-properties" : {
        "properties_attributes" : { },
        "properties" : { }
      }
    },
    {
      "llap-cli-log4j2" : {
        "properties_attributes" : { },
        "properties" : {
          "llap_cli_log_maxfilesize" : "256",
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nstatus = WARN\nname = LlapCliLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.hive.log.level = WARN\nproperty.hive.root.logger = console\nproperty.hive.log.dir = ${sys:java.io.tmpdir}/${sys:user.name}\nproperty.hive.log.file = llap-cli.log\nproperty.hive.llapstatus.consolelogger.level = INFO\n\n# list of all appenders\nappenders = console, DRFA, llapstatusconsole\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %p %c{2}: %m%n\n\n# llapstatusconsole appender\nappender.llapstatusconsole.type = Console\nappender.llapstatusconsole.name = llapstatusconsole\nappender.llapstatusconsole.target = SYSTEM_ERR\nappender.llapstatusconsole.layout.type = PatternLayout\nappender.llapstatusconsole.layout.pattern = %m%n\n\n# daily rolling file appender\nappender.DRFA.type = RollingRandomAccessFile\nappender.DRFA.name = DRFA\nappender.DRFA.fileName = ${sys:hive.log.dir}/${sys:hive.log.file}\n# Use %pidn in the filePattern to append process-id@host-name to the filename if you want separate log files for different CLI session\nappender.DRFA.filePattern = ${sys:hive.log.dir}/${sys:hive.log.file}.%d{yyyy-MM-dd}\nappender.DRFA.layout.type = PatternLayout\nappender.DRFA.layout.pattern = %d{ISO8601} %5p [%t] %c{2}: %m%n\nappender.DRFA.policies.type = Policies\nappender.DRFA.policies.time.type = TimeBasedTriggeringPolicy\nappender.DRFA.policies.time.interval = 1\nappender.DRFA.policies.time.modulate = true\nappender.DRFA.strategy.type = DefaultRolloverStrategy\nappender.DRFA.strategy.max = {{llap_cli_log_maxbackupindex}}\nappender.DRFA.policies.fsize.type = SizeBasedTriggeringPolicy\nappender.DRFA.policies.fsize.size = {{llap_cli_log_maxfilesize}}MB\n\n# list of all loggers\nloggers = ZooKeeper, DataNucleus, Datastore, JPOX, HadoopConf, LlapStatusServiceDriverConsole\n\nlogger.ZooKeeper.name = org.apache.zookeeper\nlogger.ZooKeeper.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\nlogger.HadoopConf.name = org.apache.hadoop.conf.Configuration\nlogger.HadoopConf.level = ERROR\n\nlogger.LlapStatusServiceDriverConsole.name = LlapStatusServiceDriverConsole\nlogger.LlapStatusServiceDriverConsole.additivity = false\nlogger.LlapStatusServiceDriverConsole.level = ${sys:hive.llapstatus.consolelogger.level}\n\n\n# root logger\nrootLogger.level = ${sys:hive.log.level}\nrootLogger.appenderRefs = root, DRFA\nrootLogger.appenderRef.root.ref = ${sys:hive.root.logger}\nrootLogger.appenderRef.DRFA.ref = DRFA\nlogger.LlapStatusServiceDriverConsole.appenderRefs = llapstatusconsole, DRFA\nlogger.LlapStatusServiceDriverConsole.appenderRef.llapstatusconsole.ref = llapstatusconsole\nlogger.LlapStatusServiceDriverConsole.appenderRef.DRFA.ref = DRFA",
          "llap_cli_log_maxbackupindex" : "30"
        }
      }
    },
    {
      "llap-daemon-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "hive_llap_log_maxfilesize" : "256",
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# This is the log4j2 properties file used by llap-daemons. There's several loggers defined, which\n# can be selected while configuring LLAP.\n# Based on the one selected - UI links etc need to be manipulated in the system.\n# Note: Some names and logic is common to this file and llap LogHelpers. Make sure to change that\n# as well, if changing this file.\n\nstatus = INFO\nname = LlapDaemonLog4j2\npackages = org.apache.hadoop.hive.ql.log\n\n# list of properties\nproperty.llap.daemon.log.level = {{llap_log_level}}\nproperty.llap.daemon.root.logger = console\nproperty.llap.daemon.log.dir = .\nproperty.llap.daemon.log.file = llapdaemon.log\nproperty.llap.daemon.historylog.file = llapdaemon_history.log\nproperty.llap.daemon.log.maxfilesize = {{hive_llap_log_maxfilesize}}MB\nproperty.llap.daemon.log.maxbackupindex = {{hive_llap_log_maxbackupindex}}\n\n# list of all appenders\nappenders = console, RFA, HISTORYAPPENDER, query-routing\n\n# console appender\nappender.console.type = Console\nappender.console.name = console\nappender.console.target = SYSTEM_ERR\nappender.console.layout.type = PatternLayout\nappender.console.layout.pattern = %d{ISO8601} %5p [%t (%X{fragmentId})] %c{2}: %m%n\n\n# rolling file appender\nappender.RFA.type = RollingRandomAccessFile\nappender.RFA.name = RFA\nappender.RFA.fileName = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.log.file}\nappender.RFA.filePattern = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.log.file}_%d{yyyy-MM-dd-HH}_%i.done\nappender.RFA.layout.type = PatternLayout\nappender.RFA.layout.pattern = %d{ISO8601} %-5p [%t (%X{fragmentId})] %c: %m%n\nappender.RFA.policies.type = Policies\nappender.RFA.policies.time.type = TimeBasedTriggeringPolicy\nappender.RFA.policies.time.interval = 1\nappender.RFA.policies.time.modulate = true\nappender.RFA.policies.size.type = SizeBasedTriggeringPolicy\nappender.RFA.policies.size.size = ${sys:llap.daemon.log.maxfilesize}\nappender.RFA.strategy.type = DefaultRolloverStrategy\nappender.RFA.strategy.max = ${sys:llap.daemon.log.maxbackupindex}\n\n# history file appender\nappender.HISTORYAPPENDER.type = RollingRandomAccessFile\nappender.HISTORYAPPENDER.name = HISTORYAPPENDER\nappender.HISTORYAPPENDER.fileName = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.historylog.file}\nappender.HISTORYAPPENDER.filePattern = ${sys:llap.daemon.log.dir}/${sys:llap.daemon.historylog.file}_%d{yyyy-MM-dd-HH}_%i.done\nappender.HISTORYAPPENDER.layout.type = PatternLayout\nappender.HISTORYAPPENDER.layout.pattern = %m%n\nappender.HISTORYAPPENDER.policies.type = Policies\nappender.HISTORYAPPENDER.policies.size.type = SizeBasedTriggeringPolicy\nappender.HISTORYAPPENDER.policies.size.size = ${sys:llap.daemon.log.maxfilesize}\nappender.HISTORYAPPENDER.policies.time.type = TimeBasedTriggeringPolicy\nappender.HISTORYAPPENDER.policies.time.interval = 1\nappender.HISTORYAPPENDER.policies.time.modulate = true\nappender.HISTORYAPPENDER.strategy.type = DefaultRolloverStrategy\nappender.HISTORYAPPENDER.strategy.max = ${sys:llap.daemon.log.maxbackupindex}\n\n# queryId based routing file appender\nappender.query-routing.type = Routing\nappender.query-routing.name = query-routing\nappender.query-routing.routes.type = Routes\nappender.query-routing.routes.pattern = $${ctx:queryId}\n#Purge polciy for query-based Routing Appender\nappender.query-routing.purgePolicy.type = LlapRoutingAppenderPurgePolicy\n# Note: Do not change this name without changing the corresponding entry in LlapConstants\nappender.query-routing.purgePolicy.name = llapLogPurgerQueryRouting\n# default route\nappender.query-routing.routes.route-default.type = Route\nappender.query-routing.routes.route-default.key = $${ctx:queryId}\nappender.query-routing.routes.route-default.ref = RFA\n# queryId based route\nappender.query-routing.routes.route-mdc.type = Route\nappender.query-routing.routes.route-mdc.file-mdc.type = LlapWrappedAppender\nappender.query-routing.routes.route-mdc.file-mdc.name = IrrelevantName-query-routing\nappender.query-routing.routes.route-mdc.file-mdc.app.type = RandomAccessFile\nappender.query-routing.routes.route-mdc.file-mdc.app.name = file-mdc\nappender.query-routing.routes.route-mdc.file-mdc.app.fileName = ${sys:llap.daemon.log.dir}/${ctx:queryId}-${ctx:dagId}.log\nappender.query-routing.routes.route-mdc.file-mdc.app.layout.type = PatternLayout\nappender.query-routing.routes.route-mdc.file-mdc.app.layout.pattern = %d{ISO8601} %5p [%t (%X{fragmentId})] %c{2}: %m%n\n\n# list of all loggers\nloggers = PerfLogger, EncodedReader, NIOServerCnxn, ClientCnxnSocketNIO, DataNucleus, Datastore, JPOX, HistoryLogger, LlapIoImpl, LlapIoOrc, LlapIoCache, LlapIoLocking, TezSM, TezSS, TezHC, LlapDaemon\n\nlogger.LlapDaemon.name = org.apache.hadoop.hive.llap.daemon.impl.LlapDaemon\nlogger.LlapDaemon.level = INFO\n\n# shut up the Tez logs that log debug-level stuff on INFO\n\nlogger.TezSM.name = org.apache.tez.runtime.library.common.shuffle.impl.ShuffleManager.fetch\nlogger.TezSM.level = WARN\nlogger.TezSS.name = org.apache.tez.runtime.library.common.shuffle.orderedgrouped.ShuffleScheduler.fetch\nlogger.TezSS.level = WARN\nlogger.TezHC.name = org.apache.tez.http.HttpConnection.url\nlogger.TezHC.level = WARN\n\nlogger.PerfLogger.name = org.apache.hadoop.hive.ql.log.PerfLogger\nlogger.PerfLogger.level = DEBUG\n\nlogger.EncodedReader.name = org.apache.hadoop.hive.ql.io.orc.encoded.EncodedReaderImpl\nlogger.EncodedReader.level = INFO\n\nlogger.LlapIoImpl.name = LlapIoImpl\nlogger.LlapIoImpl.level = INFO\n\nlogger.LlapIoOrc.name = LlapIoOrc\nlogger.LlapIoOrc.level = WARN\n\nlogger.LlapIoCache.name = LlapIoCache\nlogger.LlapIoCache.level = WARN\n\nlogger.LlapIoLocking.name = LlapIoLocking\nlogger.LlapIoLocking.level = WARN\n\nlogger.NIOServerCnxn.name = org.apache.zookeeper.server.NIOServerCnxn\nlogger.NIOServerCnxn.level = WARN\n\nlogger.ClientCnxnSocketNIO.name = org.apache.zookeeper.ClientCnxnSocketNIO\nlogger.ClientCnxnSocketNIO.level = WARN\n\nlogger.DataNucleus.name = DataNucleus\nlogger.DataNucleus.level = ERROR\n\nlogger.Datastore.name = Datastore\nlogger.Datastore.level = ERROR\n\nlogger.JPOX.name = JPOX\nlogger.JPOX.level = ERROR\n\nlogger.HistoryLogger.name = org.apache.hadoop.hive.llap.daemon.HistoryLogger\nlogger.HistoryLogger.level = INFO\nlogger.HistoryLogger.additivity = false\nlogger.HistoryLogger.appenderRefs = HistoryAppender\nlogger.HistoryLogger.appenderRef.HistoryAppender.ref = HISTORYAPPENDER\n\n# root logger\nrootLogger.level = ${sys:llap.daemon.log.level}\nrootLogger.appenderRefs = root\nrootLogger.appenderRef.root.ref = ${sys:llap.daemon.root.logger}",
          "hive_llap_log_maxbackupindex" : "240"
        }
      }
    },
    {
      "ranger-kafka-audit" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.audit.destination.hdfs.batch.filespool.dir" : "/var/log/kafka/audit/hdfs/spool",
          "xasecure.audit.is.enabled" : "true",
          "xasecure.audit.jaas.Client.option.keyTab" : "/etc/security/keytabs/kafka.service.keytab",
          "xasecure.audit.destination.hdfs" : "true",
          "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
          "xasecure.audit.jaas.Client.option.serviceName" : "solr",
          "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
          "xasecure.audit.jaas.Client.option.useKeyTab" : "true",
          "xasecure.audit.destination.solr.batch.filespool.dir" : "/var/log/kafka/audit/solr/spool",
          "xasecure.audit.destination.hdfs.dir" : "hdfs://%HOSTGROUP::host_group_4%:8020/ranger/audit",
          "xasecure.audit.jaas.Client.option.principal" : "kafka/_HOST@LBG.DEV",
          "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
          "xasecure.audit.destination.solr" : "false",
          "xasecure.audit.destination.solr.zookeepers" : "NONE",
          "xasecure.audit.provider.summary.enabled" : "true",
          "xasecure.audit.jaas.Client.option.storeKey" : "false",
          "ranger.plugin.kafka.ambari.cluster.name" : "{{cluster_name}}",
          "xasecure.audit.destination.solr.urls" : ""
        }
      }
    },
    {
      "hive-interactive-env" : {
        "properties_attributes" : { },
        "properties" : {
          "enable_hive_interactive" : "false",
          "llap_heap_size" : "0",
          "llap_app_name" : "llap0",
          "num_retries_for_checking_llap_status" : "20",
          "hive_heapsize" : "512",
          "content" : "\nif [ \"$SERVICE\" = \"cli\" ]; then\n  if [ -z \"$DEBUG\" ]; then\n    export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\"\n  else\n    export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n  fi\nfi\n\n# The heap size of the jvm stared by hive shell script can be controlled via:\n\nif [ \"$SERVICE\" = \"metastore\" ]; then\n  export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore\nelse\n  export HADOOP_HEAPSIZE={{hive_interactive_heapsize}} # Setting for HiveServer2 and Client\nfi\n\nexport HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\nexport HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS{{heap_dump_opts}}\"\n\n# Larger heap size may be required when running queries over large number of files or partitions.\n# By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n# appropriate for hive server (hwi etc).\n\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hive Configuration Directory can be controlled by:\nexport HIVE_CONF_DIR={{hive_server_interactive_conf_dir}}\n\n# Add additional hcatalog jars\nif [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n  export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\nelse\n  export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-server2-hive2/lib/hive-hcatalog-core.jar\nfi\n\nexport METASTORE_PORT={{hive_metastore_port}}\n\n# Spark assembly contains a conflicting copy of HiveConf from hive-1.2\nexport HIVE_SKIP_SPARK_ASSEMBLY=true",
          "llap_log_level" : "INFO",
          "num_llap_nodes_for_llap_daemons" : "1",
          "num_llap_nodes" : "1",
          "llap_headroom_space" : "12288",
          "llap_extra_slider_opts" : "",
          "slider_am_container_mb" : "341",
          "hive_aux_jars" : "",
          "llap_java_opts" : "-XX:+AlwaysPreTouch {% if java_version > 7 %}-Xss512k -XX:+UseG1GC -XX:TLABSize=8m -XX:+ResizeTLAB -XX:+UseNUMA -XX:+AggressiveOpts -XX:InitiatingHeapOccupancyPercent=40 -XX:G1ReservePercent=20 -XX:MaxGCPauseMillis=200{% else %}-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseParallelGC{% endif %}{{heap_dump_opts}}"
        }
      }
    },
    {
      "ranger-ugsync-site" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger.usersync.ldap.user.groupnameattribute" : "gidNumber",
          "ranger.usersync.group.nameattribute" : "cn",
          "ranger.usersync.policymanager.baseURL" : "{{ranger_external_url}}",
          "ranger.usersync.ldap.bindalias" : "testldapalias",
          "ranger.usersync.kerberos.keytab" : "/etc/security/keytabs/rangerusersync.service.keytab",
          "ranger.usersync.sink.impl.class" : "org.apache.ranger.unixusersync.process.PolicyMgrUserGroupBuilder",
          "ranger.usersync.ldap.referral" : "ignore",
          "ranger.usersync.group.searchenabled" : "true",
          "ranger.usersync.pagedresultssize" : "500",
          "ranger.usersync.port" : "5151",
          "ranger.usersync.sleeptimeinmillisbetweensynccycle" : "60000",
          "ranger.usersync.ldap.bindkeystore" : "",
          "ranger.usersync.policymgr.alias" : "ranger.usersync.policymgr.password",
          "ranger.usersync.keystore.file" : "/usr/hdp/current/ranger-usersync/conf/unixauthservice.jks",
          "ranger.usersync.ldap.deltasync" : "true",
          "ranger.usersync.group.searchbase" : "cn=groups,cn=accounts,dc=lbg,dc=dev",
          "ranger.usersync.logdir" : "{{usersync_log_dir}}",
          "ranger.usersync.unix.group.file" : "/etc/group",
          "ranger.usersync.policymgr.keystore" : "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
          "ranger.usersync.ssl" : "true",
          "ranger.usersync.credstore.filename" : "/usr/hdp/current/ranger-usersync/conf/ugsync.jceks",
          "ranger.usersync.group.objectclass" : "groupOfNames",
          "ranger.usersync.group.search.first.enabled" : "false",
          "ranger.usersync.passwordvalidator.path" : "./native/credValidator.uexe",
          "ranger.usersync.ldap.url" : "ldap://ipa.lbg.dev:389",
          "ranger.usersync.unix.password.file" : "/etc/passwd",
          "ranger.usersync.group.usermapsyncenabled" : "true",
          "ranger.usersync.pagedresultsenabled" : "true",
          "ranger.usersync.unix.minUserId" : "500",
          "ranger.usersync.ldap.grouphierarchylevels" : "0",
          "ranger.usersync.filesource.file" : "/tmp/usergroup.txt",
          "ranger.usersync.ldap.username.caseconversion" : "none",
          "ranger.usersync.source.impl.class" : "org.apache.ranger.ldapusersync.process.LdapUserGroupBuilder",
          "ranger.usersync.group.searchfilter" : "",
          "ranger.usersync.ldap.user.nameattribute" : "uid",
          "ranger.usersync.ldap.groupname.caseconversion" : "none",
          "ranger.usersync.ldap.user.searchbase" : "cn=users,cn=accounts,dc=lbg,dc=dev",
          "ranger.usersync.group.searchscope" : "",
          "ranger.usersync.group.memberattributename" : "member",
          "ranger.usersync.ldap.searchBase" : "dc=hadoop,dc=apache,dc=org",
          "ranger.usersync.enabled" : "true",
          "ranger.usersync.user.searchenabled" : "false",
          "ranger.usersync.policymgr.username" : "rangerusersync",
          "ranger.usersync.ldap.binddn" : "uid=admin,cn=users,cn=compat,dc=lbg,dc=dev",
          "ranger.usersync.policymanager.maxrecordsperapicall" : "1000",
          "ranger.usersync.truststore.file" : "/usr/hdp/current/ranger-usersync/conf/mytruststore.jks",
          "ranger.usersync.ldap.user.searchscope" : "sub",
          "ranger.usersync.filesource.text.delimiter" : ",",
          "ranger.usersync.ldap.user.searchfilter" : "",
          "ranger.usersync.ldap.user.objectclass" : "person",
          "ranger.usersync.policymanager.mockrun" : "false"
        }
      }
    },
    {
      "spark2-log4j-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Set everything to be logged to the console\nlog4j.rootCategory=INFO, console\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n\n\n# Set the default spark-shell log level to WARN. When running the spark-shell, the\n# log level for this class is used to overwrite the root logger's log level, so that\n# the user can have different defaults for the shell and regular Spark apps.\nlog4j.logger.org.apache.spark.repl.Main=WARN\n\n# Settings to quiet third party logs that are too verbose\nlog4j.logger.org.spark_project.jetty=WARN\nlog4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR\nlog4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO\nlog4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO\nlog4j.logger.org.apache.parquet=ERROR\nlog4j.logger.parquet=ERROR\n\n# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent UDFs in SparkSQL with Hive support\nlog4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL\nlog4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR"
        }
      }
    },
    {
      "mapred-site" : {
        "properties_attributes" : { },
        "properties" : {
          "mapreduce.map.speculative" : "false",
          "mapreduce.jobhistory.keytab" : "/etc/security/keytabs/jhs.service.keytab",
          "mapreduce.jobhistory.recovery.store.class" : "org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService",
          "mapreduce.job.counters.max" : "130",
          "mapreduce.reduce.log.level" : "INFO",
          "mapreduce.shuffle.port" : "13562",
          "yarn.app.mapreduce.am.admin-command-opts" : "-Dhdp.version=${hdp.version}",
          "mapreduce.jobhistory.principal" : "jhs/_HOST@LBG.DEV",
          "mapreduce.job.emit-timeline-data" : "false",
          "mapreduce.jobhistory.recovery.enable" : "true",
          "mapreduce.map.log.level" : "INFO",
          "yarn.app.mapreduce.am.staging-dir" : "/user",
          "mapreduce.reduce.shuffle.merge.percent" : "0.66",
          "mapreduce.output.fileoutputformat.compress" : "false",
          "mapreduce.admin.map.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "mapreduce.job.reduce.slowstart.completedmaps" : "0.05",
          "mapreduce.jobhistory.http.policy" : "HTTP_ONLY",
          "mapreduce.job.queuename" : "default",
          "mapreduce.application.framework.path" : "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
          "mapreduce.application.classpath" : "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure:/usr/hdp/current/ext/hadoop/*",
          "mapreduce.jobhistory.webapp.spnego-keytab-file" : "/etc/security/keytabs/spnego.service.keytab",
          "mapreduce.reduce.java.opts" : "-Xmx756m",
          "mapreduce.map.output.compress" : "false",
          "mapreduce.reduce.input.buffer.percent" : "0.0",
          "mapreduce.jobhistory.intermediate-done-dir" : "/mr-history/tmp",
          "yarn.app.mapreduce.am.log.level" : "INFO",
          "mapreduce.reduce.shuffle.fetch.retry.interval-ms" : "1000",
          "mapreduce.reduce.shuffle.input.buffer.percent" : "0.7",
          "mapreduce.reduce.speculative" : "false",
          "mapreduce.output.fileoutputformat.compress.type" : "BLOCK",
          "mapreduce.task.io.sort.mb" : "358",
          "mapreduce.cluster.administrators" : " hadoop",
          "mapreduce.reduce.shuffle.fetch.retry.timeout-ms" : "30000",
          "mapreduce.jobhistory.webapp.spnego-principal" : "HTTP/_HOST@LBG.DEV",
          "mapreduce.jobhistory.address" : "%HOSTGROUP::host_group_4%:10020",
          "mapreduce.map.sort.spill.percent" : "0.7",
          "mapreduce.map.memory.mb" : "512",
          "mapreduce.admin.reduce.child.java.opts" : "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "mapreduce.jobhistory.bind-host" : "0.0.0.0",
          "mapreduce.task.timeout" : "300000",
          "mapreduce.admin.user.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64:./mr-framework/hadoop/lib/native:./mr-framework/hadoop/lib/native/Linux-{{architecture}}-64",
          "mapreduce.am.max-attempts" : "2",
          "mapreduce.reduce.memory.mb" : "1024",
          "mapreduce.framework.name" : "yarn",
          "mapreduce.reduce.shuffle.parallelcopies" : "30",
          "mapreduce.jobhistory.done-dir" : "/mr-history/done",
          "mapreduce.jobhistory.webapp.address" : "%HOSTGROUP::host_group_4%:19888",
          "mapreduce.reduce.shuffle.fetch.retry.enabled" : "1",
          "mapreduce.task.io.sort.factor" : "100",
          "mapreduce.jobhistory.recovery.store.leveldb.path" : "/hadoop/mapreduce/jhs",
          "yarn.app.mapreduce.client.job.max-retries" : "60",
          "yarn.app.mapreduce.am.command-opts" : "-Xmx410m",
          "mapreduce.map.java.opts" : "-Xmx410m",
          "yarn.app.mapreduce.am.resource.mb" : "512"
        }
      }
    },
    {
      "spark2-metrics-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# syntax: [instance].sink|source.[name].[options]=[value]\n\n# This file configures Spark's internal metrics system. The metrics system is\n# divided into instances which correspond to internal components.\n# Each instance can be configured to report its metrics to one or more sinks.\n# Accepted values for [instance] are \"master\", \"worker\", \"executor\", \"driver\",\n# and \"applications\". A wild card \"*\" can be used as an instance name, in\n# which case all instances will inherit the supplied property.\n#\n# Within an instance, a \"source\" specifies a particular set of grouped metrics.\n# there are two kinds of sources:\n# 1. Spark internal sources, like MasterSource, WorkerSource, etc, which will\n# collect a Spark component's internal state. Each instance is paired with a\n# Spark source that is added automatically.\n# 2. Common sources, like JvmSource, which will collect low level state.\n# These can be added through configuration options and are then loaded\n# using reflection.\n#\n# A \"sink\" specifies where metrics are delivered to. Each instance can be\n# assigned one or more sinks.\n#\n# The sink|source field specifies whether the property relates to a sink or\n# source.\n#\n# The [name] field specifies the name of source or sink.\n#\n# The [options] field is the specific property of this source or sink. The\n# source or sink is responsible for parsing this property.\n#\n# Notes:\n# 1. To add a new sink, set the \"class\" option to a fully qualified class\n# name (see examples below).\n# 2. Some sinks involve a polling period. The minimum allowed polling period\n# is 1 second.\n# 3. Wild card properties can be overridden by more specific properties.\n# For example, master.sink.console.period takes precedence over\n# *.sink.console.period.\n# 4. A metrics specific configuration\n# \"spark.metrics.conf=${SPARK_HOME}/conf/metrics.properties\" should be\n# added to Java properties using -Dspark.metrics.conf=xxx if you want to\n# customize metrics system. You can also put the file in ${SPARK_HOME}/conf\n# and it will be loaded automatically.\n# 5. MetricsServlet is added by default as a sink in master, worker and client\n# driver, you can send http request \"/metrics/json\" to get a snapshot of all the\n# registered metrics in json format. For master, requests \"/metrics/master/json\" and\n# \"/metrics/applications/json\" can be sent seperately to get metrics snapshot of\n# instance master and applications. MetricsServlet may not be configured by self.\n#\n\n## List of available sinks and their properties.\n\n# org.apache.spark.metrics.sink.ConsoleSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n\n# org.apache.spark.metrics.sink.CSVSink\n# Name: Default: Description:\n# period 10 Poll period\n# unit seconds Units of poll period\n# directory /tmp Where to store CSV files\n\n# org.apache.spark.metrics.sink.GangliaSink\n# Name: Default: Description:\n# host NONE Hostname or multicast group of Ganglia server\n# port NONE Port of Ganglia server(s)\n# period 10 Poll period\n# unit seconds Units of poll period\n# ttl 1 TTL of messages sent by Ganglia\n# mode multicast Ganglia network mode ('unicast' or 'multicast')\n\n# org.apache.spark.metrics.sink.JmxSink\n\n# org.apache.spark.metrics.sink.MetricsServlet\n# Name: Default: Description:\n# path VARIES* Path prefix from the web server root\n# sample false Whether to show entire set of samples for histograms ('false' or 'true')\n#\n# * Default path is /metrics/json for all instances except the master. The master has two paths:\n# /metrics/aplications/json # App information\n# /metrics/master/json # Master information\n\n# org.apache.spark.metrics.sink.GraphiteSink\n# Name: Default: Description:\n# host NONE Hostname of Graphite server\n# port NONE Port of Graphite server\n# period 10 Poll period\n# unit seconds Units of poll period\n# prefix EMPTY STRING Prefix to prepend to metric name\n\n## Examples\n# Enable JmxSink for all instances by class name\n#*.sink.jmx.class=org.apache.spark.metrics.sink.JmxSink\n\n# Enable ConsoleSink for all instances by class name\n#*.sink.console.class=org.apache.spark.metrics.sink.ConsoleSink\n\n# Polling period for ConsoleSink\n#*.sink.console.period=10\n\n#*.sink.console.unit=seconds\n\n# Master instance overlap polling period\n#master.sink.console.period=15\n\n#master.sink.console.unit=seconds\n\n# Enable CsvSink for all instances\n#*.sink.csv.class=org.apache.spark.metrics.sink.CsvSink\n\n# Polling period for CsvSink\n#*.sink.csv.period=1\n\n#*.sink.csv.unit=minutes\n\n# Polling directory for CsvSink\n#*.sink.csv.directory=/tmp/\n\n# Worker instance overlap polling period\n#worker.sink.csv.period=10\n\n#worker.sink.csv.unit=minutes\n\n# Enable jvm source for instance master, worker, driver and executor\n#master.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#worker.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#driver.source.jvm.class=org.apache.spark.metrics.source.JvmSource\n\n#executor.source.jvm.class=org.apache.spark.metrics.source.JvmSource"
        }
      }
    },
    {
      "spark2-thrift-sparkconf" : {
        "properties_attributes" : {
          "final" : {
            "spark.eventLog.enabled" : "true",
            "spark.eventLog.dir" : "true",
            "spark.history.fs.logDirectory" : "true"
          }
        },
        "properties" : {
          "spark.master" : "{{spark_thrift_master}}",
          "spark.scheduler.allocation.file" : "{{spark_conf}}/spark-thrift-fairscheduler.xml",
          "spark.driver.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
          "spark.yarn.maxAppAttempts" : "1",
          "spark.executor.extraLibraryPath" : "{{spark_hadoop_lib_native}}",
          "spark.hadoop.cacheConf" : "false",
          "spark.history.provider" : "org.apache.spark.deploy.history.FsHistoryProvider",
          "spark.dynamicAllocation.maxExecutors" : "10",
          "spark.yarn.principal" : "{{hive_kerberos_principal}}",
          "spark.yarn.keytab" : "{{hive_kerberos_keytab}}",
          "spark.scheduler.mode" : "FAIR",
          "spark.eventLog.dir" : "{{spark_history_dir}}",
          "spark.eventLog.enabled" : "true",
          "spark.dynamicAllocation.minExecutors" : "0",
          "spark.shuffle.service.enabled" : "true",
          "spark.dynamicAllocation.initialExecutors" : "0",
          "spark.history.fs.logDirectory" : "{{spark_history_dir}}",
          "spark.yarn.queue" : "default",
          "spark.dynamicAllocation.enabled" : "true",
          "spark.yarn.executor.failuresValidityInterval" : "2h"
        }
      }
    },
    {
      "parquet-logging" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Properties file which configures the operation of the JDK\n# logging facility.\n\n# The system will look for this config file, first using\n# a System property specified at startup:\n#\n# >java -Djava.util.logging.config.file=myLoggingConfigFilePath\n#\n# If this property is not specified, then the config file is\n# retrieved from its default location at:\n#\n# JDK_HOME/jre/lib/logging.properties\n\n# Global logging properties.\n# ------------------------------------------\n# The set of handlers to be loaded upon startup.\n# Comma-separated list of class names.\n# (? LogManager docs say no comma here, but JDK example has comma.)\n# handlers=java.util.logging.ConsoleHandler\norg.apache.parquet.handlers= java.util.logging.FileHandler\n\n# Default global logging level.\n# Loggers and Handlers may override this level\n.level=INFO\n\n# Handlers\n# -----------------------------------------\n\n# --- ConsoleHandler ---\n# Override of global logging level\njava.util.logging.ConsoleHandler.level=INFO\njava.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter\njava.util.logging.SimpleFormatter.format=[%1$tc] %4$s: %2$s - %5$s %6$s%n\n\n# --- FileHandler ---\n# Override of global logging level\njava.util.logging.FileHandler.level=ALL\n\n# Naming style for the output file:\n# (The output file is placed in the system temporary directory.\n# %u is used to provide unique identifier for the file.\n# For more information refer\n# https://docs.oracle.com/javase/7/docs/api/java/util/logging/FileHandler.html)\njava.util.logging.FileHandler.pattern=%t/parquet-%u.log\n\n# Limiting size of output file in bytes:\njava.util.logging.FileHandler.limit=50000000\n\n# Number of output files to cycle through, by appending an\n# integer to the base file name:\njava.util.logging.FileHandler.count=1\n\n# Style of output (Simple or XML):\njava.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter"
        }
      }
    },
    {
      "hive-site" : {
        "properties_attributes" : {
          "hidden" : {
            "javax.jdo.option.ConnectionPassword" : "HIVE_CLIENT,WEBHCAT_SERVER,HCAT,CONFIG_DOWNLOAD"
          }
        },
        "properties" : {
          "hive.exec.reducers.bytes.per.reducer" : "67108864",
          "hive.metastore.pre.event.listeners" : "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
          "hive.optimize.reducededuplication" : "true",
          "hive.metastore.sasl.enabled" : "true",
          "hive.vectorized.execution.enabled" : "true",
          "hive.security.authorization.manager" : "org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory",
          "hive.auto.convert.join.noconditionaltask" : "true",
          "hive.exec.orc.compression.strategy" : "SPEED",
          "hive.server2.allow.user.substitution" : "true",
          "hive.limit.pushdown.memory.usage" : "0.04",
          "hive.merge.rcfile.block.level" : "true",
          "hive.stats.fetch.column.stats" : "true",
          "hive.tez.dynamic.partition.pruning" : "true",
          "hive.exec.max.dynamic.partitions.pernode" : "2000",
          "hive.exec.orc.default.compress" : "ZLIB",
          "hive.merge.mapredfiles" : "false",
          "hive.compactor.abortedtxn.threshold" : "1000",
          "hive.map.aggr" : "true",
          "hive.tez.dynamic.partition.pruning.max.data.size" : "104857600",
          "hive.compactor.initiator.on" : "false",
          "hive.smbjoin.cache.rows" : "10000",
          "hive.exec.max.dynamic.partitions" : "5000",
          "hive.auto.convert.join" : "true",
          "hive.server2.support.dynamic.service.discovery" : "true",
          "hive.tez.log.level" : "INFO",
          "hive.compactor.worker.timeout" : "86400L",
          "hive.metastore.authorization.storage.checks" : "false",
          "hive.merge.mapfiles" : "true",
          "hive.server2.authentication.kerberos.principal" : "hive/_HOST@LBG.DEV",
          "hive.exec.post.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.server2.transport.mode" : "binary",
          "hive.server2.thrift.http.path" : "cliservice",
          "hive.enforce.sortmergebucketmapjoin" : "true",
          "hive.metastore.execute.setugi" : "true",
          "hive.tez.smb.number.waves" : "0.5",
          "hive.server2.authentication.spnego.keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "hive.zookeeper.quorum" : "%HOSTGROUP::host_group_2%:2181,%HOSTGROUP::host_group_3%:2181",
          "hive.mapjoin.bucket.cache.size" : "10000",
          "hive.metastore.kerberos.principal" : "hive/_HOST@LBG.DEV",
          "hive.tez.auto.reducer.parallelism" : "true",
          "hive.security.metastore.authorization.manager" : "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider",
          "datanucleus.autoCreateSchema" : "false",
          "datanucleus.fixedDatastore" : "true",
          "hive.compute.query.using.stats" : "true",
          "hive.security.authorization.enabled" : "true",
          "hive.server2.thrift.sasl.qop" : "auth",
          "hive.merge.orcfile.stripe.level" : "true",
          "hive.orc.splits.include.file.footer" : "false",
          "hive.exec.compress.output" : "false",
          "hive.user.install.directory" : "/user/",
          "hive.prewarm.enabled" : "false",
          "hive.compactor.delta.num.threshold" : "10",
          "hive.orc.compute.splits.num.threads" : "10",
          "hive.vectorized.groupby.checkinterval" : "4096",
          "hive.txn.manager" : "org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager",
          "datanucleus.cache.level2.type" : "none",
          "hive.map.aggr.hash.percentmemory" : "0.5",
          "hive.optimize.bucketmapjoin" : "true",
          "hive.tez.max.partition.factor" : "2.0",
          "hive.server2.thrift.port" : "10000",
          "hive.exec.failure.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.exec.compress.intermediate" : "false",
          "hive.exec.max.created.files" : "100000",
          "hive.mapred.reduce.tasks.speculative.execution" : "false",
          "hive.vectorized.groupby.flush.percent" : "0.1",
          "hive.metastore.client.socket.timeout" : "1800s",
          "hive.server2.tez.initialize.default.sessions" : "false",
          "atlas.hook.hive.minThreads" : "1",
          "hive.stats.autogather" : "true",
          "hive.optimize.sort.dynamic.partition" : "false",
          "hive.txn.max.open.batch" : "1000",
          "hive.default.fileformat" : "TextFile",
          "hive.mapjoin.optimized.hashtable" : "true",
          "hive.vectorized.groupby.maxentries" : "100000",
          "hive.compactor.check.interval" : "300L",
          "hive.security.authenticator.manager" : "org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator",
          "hive.security.metastore.authorization.auth.reads" : "true",
          "hive.compactor.delta.pct.threshold" : "0.1f",
          "hive.vectorized.execution.reduce.enabled" : "false",
          "javax.jdo.option.ConnectionDriverName" : "org.postgresql.Driver",
          "hive.stats.dbclass" : "fs",
          "hive.exec.parallel" : "false",
          "hive.compactor.worker.threads" : "0",
          "hive.exec.submitviachild" : "false",
          "hive.fetch.task.conversion" : "more",
          "hive.server2.authentication" : "KERBEROS",
          "hive.map.aggr.hash.force.flush.memory.threshold" : "0.9",
          "hive.start.cleanup.scratchdir" : "false",
          "hive.merge.tezfiles" : "false",
          "hive.metastore.cache.pinobjtypes" : "Table,Database,Type,FieldSchema,Order",
          "hive.optimize.index.filter" : "true",
          "hive.server2.authentication.spnego.principal" : "HTTP/_HOST@LBG.DEV",
          "hive.convert.join.bucket.mapjoin.tez" : "false",
          "hive.metastore.warehouse.dir" : "/apps/hive/warehouse",
          "hive.execution.engine" : "tez",
          "atlas.hook.hive.maxThreads" : "1",
          "hive.tez.dynamic.partition.pruning.max.event.size" : "1048576",
          "hive.cbo.enable" : "true",
          "hive.exec.orc.encoding.strategy" : "SPEED",
          "hive.optimize.constant.propagation" : "true",
          "hive.tez.container.size" : "1536",
          "hive.metastore.connect.retries" : "24",
          "hive.optimize.reducededuplication.min.reducer" : "4",
          "hive.tez.input.format" : "org.apache.hadoop.hive.ql.io.HiveInputFormat",
          "hive.cluster.delegation.token.store.zookeeper.connectString" : "%HOSTGROUP::host_group_2%:2181,%HOSTGROUP::host_group_3%:2181",
          "hive.metastore.uris" : "thrift://%HOSTGROUP::host_group_4%:9083",
          "hive.server2.max.start.attempts" : "5",
          "hive.exec.dynamic.partition.mode" : "strict",
          "hive.server2.thrift.max.worker.threads" : "500",
          "hive.server2.use.SSL" : "false",
          "hive.tez.java.opts" : "-server -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseG1GC -XX:+ResizeTLAB -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps",
          "hive.exec.submit.local.task.via.child" : "true",
          "hive.optimize.null.scan" : "true",
          "hive.exec.orc.default.stripe.size" : "67108864",
          "hive.limit.optimize.enable" : "true",
          "hive.cluster.delegation.token.store.zookeeper.znode" : "/hive/cluster/delegation",
          "hive.exec.pre.hooks" : "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.cluster.delegation.token.store.class" : "org.apache.hadoop.hive.thrift.ZooKeeperTokenStore",
          "hive.server2.authentication.kerberos.keytab" : "/etc/security/keytabs/hive.service.keytab",
          "ambari.hive.db.schema.name" : "hive",
          "hive.zookeeper.client.port" : "2181",
          "hive.enforce.sorting" : "true",
          "hive.tez.cpu.vcores" : "-1",
          "hive.metastore.client.connect.retry.delay" : "5s",
          "hive.server2.tez.default.queues" : "default",
          "hive.server2.tez.sessions.per.default.queue" : "1",
          "hive.server2.thrift.http.port" : "10001",
          "hive.server2.logging.operation.log.location" : "/tmp/hive/operation_logs",
          "hive.map.aggr.hash.min.reduction" : "0.5",
          "hive.merge.size.per.task" : "256000000",
          "hive.merge.smallfiles.avgsize" : "16000000",
          "hive.exec.reducers.max" : "1009",
          "hive.optimize.metadataonly" : "true",
          "hive.fetch.task.conversion.threshold" : "1073741824",
          "hive.prewarm.numcontainers" : "3",
          "hive.tez.min.partition.factor" : "0.25",
          "hive.auto.convert.join.noconditionaltask.size" : "429496729",
          "hive.server2.logging.operation.enabled" : "true",
          "hive.metastore.kerberos.keytab.file" : "/etc/security/keytabs/hive.service.keytab",
          "hive.exec.parallel.thread.number" : "8",
          "hive.support.concurrency" : "false",
          "javax.jdo.option.ConnectionUserName" : "hive",
          "hive.conf.restricted.list" : "hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role",
          "hive.auto.convert.sortmerge.join.to.mapjoin" : "false",
          "hive.fetch.task.aggr" : "false",
          "hive.cli.print.header" : "false",
          "hive.server2.table.type.mapping" : "CLASSIC",
          "hive.txn.timeout" : "300",
          "hive.warehouse.subdir.inherit.perms" : "true",
          "hive.stats.fetch.partition.stats" : "true",
          "hive.optimize.bucketmapjoin.sortedmerge" : "false",
          "hive.security.metastore.authenticator.manager" : "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
          "hive.server2.enable.doAs" : "false",
          "hive.server2.zookeeper.namespace" : "hiveserver2",
          "hive.default.fileformat.managed" : "TextFile",
          "hive.enforce.bucketing" : "true",
          "hive.exec.scratchdir" : "/tmp/hive",
          "hive.exec.dynamic.partition" : "true",
          "hive.metastore.server.max.threads" : "100000",
          "hive.metastore.failure.retries" : "24",
          "hive.auto.convert.sortmerge.join" : "false",
          "hive.zookeeper.namespace" : "hive_zookeeper_namespace"
        }
      }
    },
    {
      "tez-site" : {
        "properties_attributes" : { },
        "properties" : {
          "tez.am.launch.cmd-opts" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseG1GC -XX:+ResizeTLAB{{heap_dump_opts}}",
          "tez.runtime.sorter.class" : "PIPELINED",
          "tez.counters.max.groups" : "3000",
          "tez.am.view-acls" : "",
          "tez.runtime.shuffle.memory.limit.percent" : "0.25",
          "tez.staging-dir" : "/tmp/${user.name}/staging",
          "tez.am.container.reuse.locality.delay-allocation-millis" : "250",
          "tez.runtime.compress" : "true",
          "tez.am.am-rm.heartbeat.interval-ms.max" : "250",
          "tez.am.container.idle.release-timeout-min.millis" : "10000",
          "tez.task.launch.cmd-opts" : "-XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps -XX:+UseNUMA -XX:+UseG1GC -XX:+ResizeTLAB{{heap_dump_opts}}",
          "tez.lib.uris" : "/hdp/apps/${hdp.version}/tez/tez.tar.gz",
          "tez.counters.max" : "10000",
          "tez.generate.debug.artifacts" : "false",
          "tez.runtime.convert.user-payload.to.history-text" : "false",
          "tez.shuffle-vertex-manager.max-src-fraction" : "0.4",
          "tez.am.log.level" : "INFO",
          "tez.task.am.heartbeat.counter.interval-ms.max" : "4000",
          "tez.am.container.idle.release-timeout-max.millis" : "20000",
          "tez.am.resource.memory.mb" : "3072",
          "tez.am.max.app.attempts" : "2",
          "tez.cluster.additional.classpath.prefix" : "/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
          "tez.am.container.reuse.non-local-fallback.enabled" : "false",
          "tez.am.container.reuse.rack-fallback.enabled" : "true",
          "tez.task.get-task.sleep.interval-ms.max" : "200",
          "tez.runtime.io.sort.mb" : "405",
          "tez.task.resource.memory.mb" : "1536",
          "tez.runtime.optimize.local.fetch" : "true",
          "tez.runtime.pipelined.sorter.sort.threads" : "2",
          "tez.shuffle-vertex-manager.min-src-fraction" : "0.2",
          "tez.session.am.dag.submit.timeout.secs" : "600",
          "tez.session.client.timeout.secs" : "-1",
          "tez.am.launch.cluster-default.cmd-opts" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "tez.am.maxtaskfailures.per.node" : "10",
          "tez.am.tez-ui.history-url.template" : "__HISTORY_URL_BASE__?viewPath=%2F%23%2Ftez-app%2F__APPLICATION_ID__",
          "tez.history.logging.timeline-cache-plugin.old-num-dags-per-group" : "5",
          "tez.runtime.shuffle.fetch.buffer.percent" : "0.6",
          "tez.task.launch.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64:./tezlib/lib/native:./tezlib/lib/native/Linux-{{architecture}}-64",
          "tez.use.cluster.hadoop-libs" : "false",
          "tez.queue.name" : "default",
          "tez.runtime.unordered.output.buffer.size-mb" : "115",
          "tez.am.container.reuse.enabled" : "true",
          "tez.grouping.split-waves" : "1.7",
          "tez.grouping.max-size" : "1073741824",
          "tez.task.launch.cluster-default.cmd-opts" : "-server -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "tez.task.max-events-per-heartbeat" : "500",
          "tez.history.logging.service.class" : "org.apache.tez.dag.history.logging.ats.ATSV15HistoryLoggingService",
          "tez.grouping.min-size" : "16777216",
          "tez.task.generate.counters.per.io" : "true",
          "tez.am.launch.env" : "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-{{architecture}}-64:./tezlib/lib/native:./tezlib/lib/native/Linux-{{architecture}}-64",
          "tez.runtime.compress.codec" : "org.apache.hadoop.io.compress.SnappyCodec"
        }
      }
    },
    {
      "webhcat-site" : {
        "properties_attributes" : { },
        "properties" : {
          "templeton.zookeeper.hosts" : "%HOSTGROUP::host_group_2%:2181,%HOSTGROUP::host_group_3%:2181",
          "templeton.hadoop.queue.name" : "default",
          "templeton.hadoop" : "/usr/hdp/${hdp.version}/hadoop/bin/hadoop",
          "webhcat.proxyuser.ambari-server-dev.hosts" : "ambari-server.lbg.dev",
          "templeton.hive.extra.files" : "/usr/hdp/${hdp.version}/tez/conf/tez-site.xml,/usr/hdp/${hdp.version}/tez,/usr/hdp/${hdp.version}/tez/lib",
          "templeton.hcat.home" : "hive.tar.gz/hive/hcatalog",
          "templeton.override.enabled" : "false",
          "templeton.kerberos.principal" : "HTTP/_HOST@LBG.DEV",
          "templeton.hive.properties" : "hive.metastore.local=false,hive.metastore.uris=thrift://%HOSTGROUP::host_group_4%:9083,hive.metastore.sasl.enabled=true,hive.metastore.execute.setugi=true,hive.metastore.warehouse.dir=/apps/hive/warehouse,hive.exec.mode.local.auto=false,hive.metastore.kerberos.principal=hive/_HOST@LBG.DEV",
          "templeton.python" : "${env.PYTHON_CMD}",
          "templeton.storage.class" : "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
          "templeton.streaming.jar" : "hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar",
          "templeton.hadoop.conf.dir" : "/etc/hadoop/conf",
          "templeton.hcat" : "/usr/hdp/${hdp.version}/hive/bin/hcat",
          "templeton.jar" : "/usr/hdp/${hdp.version}/hive/share/webhcat/svr/lib/hive-webhcat-*.jar",
          "templeton.port" : "50111",
          "webhcat.proxyuser.knox.groups" : "users",
          "templeton.libjars" : "/usr/hdp/${hdp.version}/zookeeper/zookeeper.jar,/usr/hdp/${hdp.version}/hive/lib/hive-common.jar",
          "webhcat.proxyuser.ambari-server-dev.groups" : "*",
          "templeton.hive.path" : "hive.tar.gz/hive/bin/hive",
          "templeton.exec.timeout" : "60000",
          "templeton.sqoop.home" : "sqoop.tar.gz/sqoop",
          "templeton.sqoop.archive" : "hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz",
          "templeton.hive.archive" : "hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz",
          "templeton.kerberos.keytab" : "/etc/security/keytabs/spnego.service.keytab",
          "templeton.hive.home" : "hive.tar.gz/hive",
          "templeton.pig.archive" : "hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz",
          "templeton.pig.path" : "pig.tar.gz/pig/bin/pig",
          "templeton.sqoop.path" : "sqoop.tar.gz/sqoop/bin/sqoop",
          "webhcat.proxyuser.knox.hosts" : "%HOSTGROUP::host_group_1%"
        }
      }
    },
    {
      "slider-env" : {
        "properties_attributes" : { },
        "properties" : {
          "content" : "\n# Set Slider-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java64_home}}\n# The hadoop conf directory.  Optional as slider-client.xml can be edited to add properties.\nexport HADOOP_CONF_DIR={{hadoop_conf_dir}}"
        }
      }
    },
    {
      "hivemetastore-site" : {
        "properties_attributes" : { },
        "properties" : {
          "hive.service.metrics.hadoop2.component" : "hivemetastore",
          "hive.metastore.metrics.enabled" : "true",
          "hive.service.metrics.reporter" : "HADOOP2"
        }
      }
    },
    {
      "kerberos-env" : {
        "properties_attributes" : { },
        "properties" : {
          "password_min_uppercase_letters" : "1",
          "password_min_whitespace" : "0",
          "password_min_punctuation" : "1",
          "manage_auth_to_local" : "true",
          "password_min_digits" : "1",
          "set_password_expiry" : "false",
          "encryption_types" : "aes des3-cbc-sha1 rc4 des-cbc-md5",
          "kdc_create_attributes" : "",
          "create_ambari_principal" : "true",
          "password_min_lowercase_letters" : "1",
          "password_length" : "20",
          "case_insensitive_username_rules" : "false",
          "manage_identities" : "true",
          "password_chat_timeout" : "5",
          "ad_create_attributes_template" : "\n{\n  \"objectClass\": [\"top\", \"person\", \"organizationalPerson\", \"user\"],\n  \"cn\": \"$principal_name\",\n  #if( $is_service )\n  \"servicePrincipalName\": \"$principal_name\",\n  #end\n  \"userPrincipalName\": \"$normalized_principal\",\n  \"unicodePwd\": \"$password\",\n  \"accountExpires\": \"0\",\n  \"userAccountControl\": \"66048\"\n}",
          "preconfigure_services" : "DEFAULT",
          "install_packages" : "false",
          "ldap_url" : "",
          "executable_search_paths" : "/usr/bin, /usr/kerberos/bin, /usr/sbin, /usr/lib/mit/bin, /usr/lib/mit/sbin",
          "group" : "ambari-managed-principals"
        }
      }
    },
    {
      "ssl-client" : {
        "properties_attributes" : { },
        "properties" : {
          "ssl.client.truststore.reload.interval" : "10000",
          "ssl.client.keystore.location" : "/etc/security/clientKeys/keystore.jks",
          "ssl.client.truststore.location" : "/etc/security/clientKeys/all.jks",
          "ssl.client.truststore.type" : "jks",
          "ssl.client.keystore.type" : "jks"
        }
      }
    },
    {
      "hive-atlas-application.properties" : {
        "properties_attributes" : { },
        "properties" : {
          "atlas.hook.hive.maxThreads" : "5",
          "atlas.hook.hive.keepAliveTime" : "10",
          "atlas.jaas.KafkaClient.option.keyTab" : "/etc/security/keytabs/hive.service.keytab",
          "atlas.hook.hive.synchronous" : "false",
          "atlas.hook.hive.minThreads" : "5",
          "atlas.hook.hive.numRetries" : "3",
          "atlas.hook.hive.queueSize" : "1000",
          "atlas.jaas.KafkaClient.option.principal" : "hive/_HOST@LBG.DEV"
        }
      }
    },
    {
      "ranger-kafka-plugin-properties" : {
        "properties_attributes" : { },
        "properties" : {
          "hadoop.rpc.protection" : "",
          "zookeeper.connect" : "localhost:2181",
          "ranger-kafka-plugin-enabled" : "Yes",
          "external_ranger_admin_username" : "",
          "REPOSITORY_CONFIG_USERNAME" : "kafka",
          "external_admin_username" : "",
          "common.name.for.certificate" : "",
          "policy_user" : "ambari-qa"
        }
      }
    },
    {
      "ranger-hdfs-security" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.add-hadoop-authorization" : "true",
          "ranger.plugin.hdfs.policy.rest.ssl.config.file" : "/etc/hadoop/conf/ranger-policymgr-ssl.xml",
          "ranger.plugin.hdfs.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
          "ranger.plugin.hdfs.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
          "ranger.plugin.hdfs.policy.pollIntervalMs" : "30000",
          "ranger.plugin.hdfs.service.name" : "{{repo_name}}",
          "ranger.plugin.hdfs.policy.rest.url" : "http://ambari-server.lbg.dev:6080"
        }
      }
    },
    {
      "kafka-logsearch-conf" : {
        "properties_attributes" : { },
        "properties" : {
          "component_mappings" : "KAFKA_BROKER:kafka_server,kafka_request,kafka_logcleaner,kafka_controller,kafka_statechange",
          "content" : "\n{\n  \"input\":[\n    {\n      \"type\":\"kafka_controller\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/kafka-env/kafka_log_dir', '/var/log/kafka')}}/controller.log\"\n    },\n    {\n      \"type\":\"kafka_request\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/kafka-env/kafka_log_dir', '/var/log/kafka')}}/kafka-request.log\"\n    },\n    {\n      \"type\":\"kafka_logcleaner\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/kafka-env/kafka_log_dir', '/var/log/kafka')}}/log-cleaner.log\"\n    },\n    {\n      \"type\":\"kafka_server\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{default('/configurations/kafka-env/kafka_log_dir', '/var/log/kafka')}}/server.log\"\n    },\n    {\n      \"type\":\"kafka_statechange\",\n      \"rowtype\":\"service\",\n      \"path\":\"{{kafka_log_dir}}/state-change.log\"\n    }\n   ],\n  \"filter\":[\n    {\n      \"filter\":\"grok\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"kafka_controller\",\n            \"kafka_request\",\n            \"kafka_logcleaner\"\n          ]\n         }\n       },\n      \"log4j_format\":\"[%d] %p %m (%c)%n\",\n      \"multiline_pattern\":\"^(\\\\[%{TIMESTAMP_ISO8601:logtime}\\\\])\",\n      \"message_pattern\":\"(?m)^\\\\[%{TIMESTAMP_ISO8601:logtime}\\\\]%{SPACE}%{LOGLEVEL:level}%{SPACE}\\\\[%{DATA:thread_name}\\\\]%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     },\n    {\n      \"filter\":\"grok\",\n      \"comment\":\"Suppose to be same log4j pattern as other kafka processes, but some reason thread is not printed\",\n      \"conditions\":{\n        \"fields\":{\n          \"type\":[\n            \"kafka_server\",\n            \"kafka_statechange\"\n          ]\n         }\n       },\n      \"log4j_format\":\"[%d] %p %m (%c)%n\",\n      \"multiline_pattern\":\"^(\\\\[%{TIMESTAMP_ISO8601:logtime}\\\\])\",\n      \"message_pattern\":\"(?m)^\\\\[%{TIMESTAMP_ISO8601:logtime}\\\\]%{SPACE}%{LOGLEVEL:level}%{SPACE}%{GREEDYDATA:log_message}\",\n      \"post_map_values\":{\n        \"logtime\":{\n          \"map_date\":{\n            \"target_date_pattern\":\"yyyy-MM-dd HH:mm:ss,SSS\"\n          }\n         }\n       }\n     }\n   ]\n }",
          "service_name" : "Kafka"
        }
      }
    },
    {
      "yarn-log4j" : {
        "properties_attributes" : { },
        "properties" : {
          "yarn_rm_summary_log_max_backup_size" : "256",
          "yarn_rm_summary_log_number_of_backup_files" : "20",
          "content" : "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize={{yarn_rm_summary_log_max_backup_size}}MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex={{yarn_rm_summary_log_number_of_backup_files}}\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false\n\n# Appender for viewing information for errors and warnings\nyarn.ewma.cleanupInterval=300\nyarn.ewma.messageAgeLimitSeconds=86400\nyarn.ewma.maxUniqueMessages=250\nlog4j.appender.EWMA=org.apache.hadoop.yarn.util.Log4jWarningErrorMetricsAppender\nlog4j.appender.EWMA.cleanupInterval=${yarn.ewma.cleanupInterval}\nlog4j.appender.EWMA.messageAgeLimitSeconds=${yarn.ewma.messageAgeLimitSeconds}\nlog4j.appender.EWMA.maxUniqueMessages=${yarn.ewma.maxUniqueMessages}\n\n# Audit logging for ResourceManager\nrm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=${rm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAuditLogger=false\nlog4j.appender.RMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.RMAUDIT.File=${yarn.log.dir}/rm-audit.log\nlog4j.appender.RMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.RMAUDIT.DatePattern=.yyyy-MM-dd\n\n# Audit logging for NodeManager\nnm.audit.logger=${hadoop.root.logger}\nlog4j.logger.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=${nm.audit.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.nodemanager.NMAuditLogger=false\nlog4j.appender.NMAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.NMAUDIT.File=${yarn.log.dir}/nm-audit.log\nlog4j.appender.NMAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.NMAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.NMAUDIT.DatePattern=.yyyy-MM-dd"
        }
      }
    },
    {
      "mapred-env" : {
        "properties_attributes" : { },
        "properties" : {
          "jobhistory_heapsize" : "900",
          "mapred_user_nofile_limit" : "32768",
          "mapred_user" : "mapred",
          "mapred_user_nproc_limit" : "65536",
          "mapred_pid_dir_prefix" : "/var/run/hadoop-mapreduce",
          "mapred_log_dir_prefix" : "/var/log/hadoop-mapreduce",
          "content" : "\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\n\n{% if security_enabled %}\nexport HADOOP_JOB_HISTORYSERVER_OPTS=\"-Djava.security.auth.login.config={{mapred_jaas_file}}  -Djavax.security.auth.useSubjectCredsOnly=false\"\n{% endif %}\n#export HADOOP_MAPRED_LOG_DIR=\"\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"\nexport HADOOP_OPTS=\"-Djava.io.tmpdir={{hadoop_java_io_tmpdir}} $HADOOP_OPTS\"\nexport JAVA_LIBRARY_PATH=\"${JAVA_LIBRARY_PATH}:{{hadoop_java_io_tmpdir}}\""
        }
      }
    },
    {
      "ranger-kafka-security" : {
        "properties_attributes" : { },
        "properties" : {
          "ranger.plugin.kafka.policy.rest.url" : "http://ambari-server.lbg.dev:6080",
          "ranger.plugin.kafka.policy.rest.ssl.config.file" : "/etc/kafka/conf/ranger-policymgr-ssl.xml",
          "ranger.plugin.kafka.service.name" : "{{repo_name}}",
          "ranger.plugin.kafka.policy.pollIntervalMs" : "30000",
          "ranger.plugin.kafka.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
          "ranger.plugin.kafka.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache"
        }
      }
    },
    {
      "hive-env" : {
        "properties_attributes" : { },
        "properties" : {
          "webhcat_user" : "hcat",
          "hive_log_dir" : "/var/log/hive",
          "hive_security_authorization" : "Ranger",
          "hive_user_nproc_limit" : "16000",
          "content" : "\nexport HADOOP_USER_CLASSPATH_FIRST=true  #this prevents old metrics libs from mapreduce lib from bringing in old jar deps overriding HIVE_LIB\nif [ \"$SERVICE\" = \"cli\" ]; then\n  if [ -z \"$DEBUG\" ]; then\n    export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseNUMA -XX:+UseParallelGC -XX:-UseGCOverheadLimit\"\n  else\n    export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n  fi\nfi\n\n# The heap size of the jvm stared by hive shell script can be controlled via:\n\nif [ \"$SERVICE\" = \"metastore\" ]; then\n  export HADOOP_HEAPSIZE={{hive_metastore_heapsize}} # Setting for HiveMetastore\nelse\n  export HADOOP_HEAPSIZE={{hive_heapsize}} # Setting for HiveServer2 and Client\nfi\n\nexport HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS  -Xmx${HADOOP_HEAPSIZE}m\"\nexport HADOOP_CLIENT_OPTS=\"$HADOOP_CLIENT_OPTS{{heap_dump_opts}}\"\n\n# Larger heap size may be required when running queries over large number of files or partitions.\n# By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n# appropriate for hive server (hwi etc).\n\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\nexport HIVE_HOME=${HIVE_HOME:-{{hive_home_dir}}}\n\n# Hive Configuration Directory can be controlled by:\nexport HIVE_CONF_DIR=${HIVE_CONF_DIR:-{{hive_config_dir}}}\n\n# Folder containing extra libraries required for hive compilation/execution can be controlled by:\nexport HIVE_AUX_JARS_PATH={{stack_root}}/current/ext/hive\nif [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n  if [ -f \"${HIVE_AUX_JARS_PATH}\" ] || [ -d \"${HIVE_AUX_JARS_PATH}\" ] ; then\n    export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\n  elif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n    export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar\n  fi\nelif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n  export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar\nfi\n\nexport METASTORE_PORT={{hive_metastore_port}}\n\n{% if sqla_db_used or lib_dir_available %}\nexport LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:{{jdbc_libs_dir}}\"\nexport JAVA_LIBRARY_PATH=\"$JAVA_LIBRARY_PATH:{{jdbc_libs_dir}}\"\n{% endif %}",
          "hive.atlas.hook" : "false",
          "hive_txn_acid" : "off",
          "hive.client.heapsize" : "1024",
          "hive.heapsize" : "4505",
          "hive_database_type" : "postgres",
          "hive_user_nofile_limit" : "32000",
          "alert_ldap_username" : "",
          "hcat_pid_dir" : "/var/run/webhcat",
          "heap_dump_location" : "/tmp",
          "hive_database" : "Existing PostgreSQL Database",
          "hcat_log_dir" : "/var/log/webhcat",
          "hive_exec_orc_storage_strategy" : "SPEED",
          "hive_user" : "hive",
          "hive.metastore.heapsize" : "1501",
          "hive_timeline_logging_enabled" : "true",
          "hive.log.level" : "INFO",
          "hive_database_name" : "hive",
          "enable_heap_dump" : "false",
          "hive_pid_dir" : "/var/run/hive",
          "hcat_user" : "hcat",
          "hive_ambari_database" : "MySQL"
        }
      }
    },
    {
      "ranger-hive-security" : {
        "properties_attributes" : { },
        "properties" : {
          "xasecure.hive.update.xapolicies.on.grant.revoke" : "true",
          "ranger.plugin.hive.policy.source.impl" : "org.apache.ranger.admin.client.RangerAdminRESTClient",
          "ranger.plugin.hive.policy.pollIntervalMs" : "30000",
          "ranger.plugin.hive.policy.rest.ssl.config.file" : "/usr/hdp/current/{{ranger_hive_component}}/conf/conf.server/ranger-policymgr-ssl.xml",
          "ranger.plugin.hive.policy.cache.dir" : "/etc/ranger/{{repo_name}}/policycache",
          "ranger.plugin.hive.urlauth.filesystem.schemes" : "hdfs:,file:,wasb:,adl:",
          "ranger.plugin.hive.service.name" : "{{repo_name}}",
          "ranger.plugin.hive.policy.rest.url" : "http://ambari-server.lbg.dev:6080"
        }
      }
    }
  ],
  "host_groups" : [
    {
      "components" : [
        {
          "name" : "NODEMANAGER"
        },
        {
          "name" : "KAFKA_BROKER"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "SOLR_SERVER"
        },
        {
          "name" : "DATANODE"
        },
        {
          "name" : "KERBEROS_CLIENT"
        }
      ],
      "configurations" : [ ],
      "name" : "host_group_2",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "RANGER_ADMIN"
        },
        {
          "name" : "RANGER_TAGSYNC"
        },
        {
          "name" : "AMBARI_SERVER"
        },
        {
          "name" : "RANGER_USERSYNC"
        },
        {
          "name" : "KERBEROS_CLIENT"
        }
      ],
      "configurations" : [ ],
      "name" : "host_group_1",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "YARN_CLIENT"
        },
        {
          "name" : "HDFS_CLIENT"
        },
        {
          "name" : "HIVE_SERVER"
        },
        {
          "name" : "SPARK2_CLIENT"
        },
        {
          "name" : "HISTORYSERVER"
        },
        {
          "name" : "HIVE_METASTORE"
        },
        {
          "name" : "NAMENODE"
        },
        {
          "name" : "TEZ_CLIENT"
        },
        {
          "name" : "ZOOKEEPER_CLIENT"
        },
        {
          "name" : "HCAT"
        },
        {
          "name" : "PIG"
        },
        {
          "name" : "SPARK2_JOBHISTORYSERVER"
        },
        {
          "name" : "WEBHCAT_SERVER"
        },
        {
          "name" : "SECONDARY_NAMENODE"
        },
        {
          "name" : "MAPREDUCE2_CLIENT"
        },
        {
          "name" : "SLIDER"
        },
        {
          "name" : "KERBEROS_CLIENT"
        },
        {
          "name" : "APP_TIMELINE_SERVER"
        },
        {
          "name" : "HIVE_CLIENT"
        },
        {
          "name" : "RESOURCEMANAGER"
        }
      ],
      "configurations" : [ ],
      "name" : "host_group_4",
      "cardinality" : "1"
    },
    {
      "components" : [
        {
          "name" : "NODEMANAGER"
        },
        {
          "name" : "KAFKA_BROKER"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "DATANODE"
        },
        {
          "name" : "KERBEROS_CLIENT"
        }
      ],
      "configurations" : [ ],
      "name" : "host_group_3",
      "cardinality" : "2"
    }
  ],
  "settings" : [
    {
      "recovery_settings" : [
        {
          "recovery_enabled" : "false"
        }
      ]
    },
    {
      "service_settings" : [
        {
          "name" : "HIVE",
          "credential_store_enabled" : "true"
        }
      ]
    },
    {
      "component_settings" : [ ]
    }
  ],
  "Blueprints" : {
    "security" : {
      "type" : "KERBEROS",
      "kerberos_descriptor" : {
        "properties" : {
          "additional_realms" : "",
          "keytab_dir" : "/etc/security/keytabs",
          "principal_suffix" : "-${cluster_name|toLower()}",
          "realm" : "LBG.DEV"
        },
        "identities" : [
          {
            "keytab" : {
              "configuration" : "cluster-env/smokeuser_keytab",
              "file" : "${keytab_dir}/smokeuser.headless.keytab",
              "group" : {
                "access" : "r",
                "name" : "${cluster-env/user_group}"
              },
              "owner" : {
                "access" : "r",
                "name" : "${cluster-env/smokeuser}"
              }
            },
            "name" : "smokeuser",
            "principal" : {
              "configuration" : "cluster-env/smokeuser_principal_name",
              "local_username" : "${cluster-env/smokeuser}",
              "type" : "user",
              "value" : "${cluster-env/smokeuser}${principal_suffix}@${realm}"
            },
            "referencePath" : "smokeuser"
          },
          {
            "keytab" : {
              "file" : "${keytab_dir}/spnego.service.keytab",
              "group" : {
                "access" : "r",
                "name" : "${cluster-env/user_group}"
              },
              "owner" : {
                "access" : "r",
                "name" : "root"
              }
            },
            "name" : "spnego",
            "principal" : {
              "type" : "service",
              "value" : "HTTP/_HOST@${realm}"
            },
            "referencePath" : "spnego"
          }
        ],
        "services" : [
          {
            "components" : [
              {
                "name" : "ACCUMULO_CLIENT"
              },
              {
                "name" : "ACCUMULO_GC"
              },
              {
                "identities" : [
                  {
                    "name" : "accumulo_accumulo_master_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "ACCUMULO/ACCUMULO_MASTER/accumulo_accumulo_master_hdfs"
                  }
                ],
                "name" : "ACCUMULO_MASTER"
              },
              {
                "name" : "ACCUMULO_MONITOR"
              },
              {
                "name" : "ACCUMULO_TRACER"
              },
              {
                "name" : "ACCUMULO_TSERVER"
              }
            ],
            "configurations" : [
              {
                "accumulo-site" : {
                  "general.delegation.token.lifetime" : "7d",
                  "general.delegation.token.update.interval" : "1d",
                  "instance.rpc.sasl.enabled" : "true",
                  "instance.security.authenticator" : "org.apache.accumulo.server.security.handler.KerberosAuthenticator",
                  "instance.security.authorizor" : "org.apache.accumulo.server.security.handler.KerberosAuthorizor",
                  "instance.security.permissionHandler" : "org.apache.accumulo.server.security.handler.KerberosPermissionHandler",
                  "trace.token.type" : "org.apache.accumulo.core.client.security.tokens.KerberosToken"
                }
              },
              {
                "client" : {
                  "kerberos.server.primary" : "{{bare_accumulo_principal}}"
                }
              }
            ],
            "identities" : [
              {
                "keytab" : {
                  "configuration" : "accumulo-env/accumulo_user_keytab",
                  "file" : "${keytab_dir}/accumulo.headless.keytab",
                  "group" : {
                    "access" : "r",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${accumulo-env/accumulo_user}"
                  }
                },
                "name" : "accumulo",
                "principal" : {
                  "configuration" : "accumulo-env/accumulo_principal_name",
                  "local_username" : "${accumulo-env/accumulo_user}",
                  "type" : "user",
                  "value" : "${accumulo-env/accumulo_user}${principal_suffix}@${realm}"
                },
                "referencePath" : "ACCUMULO/accumulo"
              },
              {
                "keytab" : {
                  "configuration" : "accumulo-site/general.kerberos.keytab",
                  "file" : "${keytab_dir}/accumulo.service.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${accumulo-env/accumulo_user}"
                  }
                },
                "name" : "accumulo_service",
                "principal" : {
                  "configuration" : "accumulo-site/general.kerberos.principal",
                  "local_username" : "${accumulo-env/accumulo_user}",
                  "type" : "service",
                  "value" : "${accumulo-env/accumulo_user}/_HOST@${realm}"
                },
                "referencePath" : "ACCUMULO/accumulo_service"
              },
              {
                "name" : "accumulo_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "ACCUMULO/accumulo_smokeuser"
              },
              {
                "keytab" : {
                  "configuration" : "accumulo-site/trace.token.property.keytab",
                  "file" : "${keytab_dir}/accumulo-tracer.headless.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${accumulo-env/accumulo_user}"
                  }
                },
                "name" : "accumulo_tracer",
                "principal" : {
                  "configuration" : "accumulo-site/trace.user",
                  "local_username" : "${accumulo-env/accumulo_user}",
                  "type" : "user",
                  "value" : "tracer${principal_suffix}@${realm}"
                },
                "referencePath" : "ACCUMULO/accumulo_tracer"
              }
            ],
            "name" : "ACCUMULO"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "file" : "${keytab_dir}/ambari.server.keytab",
                      "group" : { },
                      "owner" : {
                        "access" : "r"
                      }
                    },
                    "name" : "ambari-server",
                    "principal" : {
                      "configuration" : "cluster-env/ambari_principal_name",
                      "type" : "user",
                      "value" : "ambari-server${principal_suffix}@${realm}"
                    },
                    "referencePath" : "AMBARI/AMBARI_SERVER/ambari-server"
                  },
                  {
                    "name" : "ambari-server_spnego",
                    "reference" : "/spnego",
                    "referencePath" : "AMBARI/AMBARI_SERVER/ambari-server_spnego"
                  }
                ],
                "name" : "AMBARI_SERVER"
              }
            ],
            "name" : "AMBARI"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "infra-solr-env/infra_solr_kerberos_keytab",
                      "file" : "${keytab_dir}/ambari-infra-solr.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${infra-solr-env/infra_solr_user}"
                      }
                    },
                    "name" : "infra-solr",
                    "principal" : {
                      "configuration" : "infra-solr-env/infra_solr_kerberos_principal",
                      "type" : "service",
                      "value" : "infra-solr/_HOST@${realm}"
                    },
                    "referencePath" : "AMBARI_INFRA/INFRA_SOLR/infra-solr"
                  }
                ],
                "name" : "INFRA_SOLR"
              },
              {
                "name" : "INFRA_SOLR_CLIENT"
              }
            ],
            "identities" : [
              {
                "name" : "ambari_infra_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "AMBARI_INFRA/ambari_infra_smokeuser"
              },
              {
                "keytab" : {
                  "configuration" : "infra-solr-env/infra_solr_web_kerberos_keytab"
                },
                "name" : "ambari_infra_spnego",
                "principal" : {
                  "configuration" : "infra-solr-env/infra_solr_web_kerberos_principal"
                },
                "reference" : "/spnego",
                "referencePath" : "AMBARI_INFRA/ambari_infra_spnego"
              }
            ],
            "name" : "AMBARI_INFRA"
          },
          {
            "components" : [
              {
                "configurations" : [
                  {
                    "ams-hbase-security-site" : {
                      "hadoop.security.authentication" : "kerberos",
                      "hbase.coprocessor.master.classes" : "org.apache.hadoop.hbase.security.access.AccessController",
                      "hbase.coprocessor.region.classes" : "org.apache.hadoop.hbase.security.token.TokenProvider,org.apache.hadoop.hbase.security.access.AccessController",
                      "hbase.security.authentication" : "kerberos",
                      "hbase.security.authorization" : "true",
                      "hbase.zookeeper.property.authProvider.1" : "org.apache.zookeeper.server.auth.SASLAuthenticationProvider",
                      "hbase.zookeeper.property.jaasLoginRenew" : "3600000",
                      "hbase.zookeeper.property.kerberos.removeHostFromPrincipal" : "true",
                      "hbase.zookeeper.property.kerberos.removeRealmFromPrincipal" : "true"
                    }
                  },
                  {
                    "ams-hbase-site" : {
                      "zookeeper.znode.parent" : "/ams-hbase-secure"
                    }
                  }
                ],
                "identities" : [
                  {
                    "name" : "ambari_metrics_metrics_collector_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "when" : {
                      "contains" : [
                        "services",
                        "HDFS"
                      ]
                    },
                    "referencePath" : "AMBARI_METRICS/METRICS_COLLECTOR/ambari_metrics_metrics_collector_hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ams-hbase-security-site/hbase.myclient.keytab",
                      "file" : "${keytab_dir}/ams.collector.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${ams-env/ambari_metrics_user}"
                      }
                    },
                    "name" : "ams_collector",
                    "principal" : {
                      "configuration" : "ams-hbase-security-site/hbase.myclient.principal",
                      "local_username" : "${ams-env/ambari_metrics_user}",
                      "type" : "service",
                      "value" : "amshbase/_HOST@${realm}"
                    },
                    "referencePath" : "AMBARI_METRICS/METRICS_COLLECTOR/ams_collector"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ams-hbase-security-site/hbase.master.keytab.file",
                      "file" : "${keytab_dir}/ams-hbase.master.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${ams-env/ambari_metrics_user}"
                      }
                    },
                    "name" : "ams_hbase_master_hbase",
                    "principal" : {
                      "configuration" : "ams-hbase-security-site/hbase.master.kerberos.principal",
                      "local_username" : "${ams-env/ambari_metrics_user}",
                      "type" : "service",
                      "value" : "amshbase/_HOST@${realm}"
                    },
                    "referencePath" : "AMBARI_METRICS/METRICS_COLLECTOR/ams_hbase_master_hbase"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ams-hbase-security-site/hbase.regionserver.keytab.file",
                      "file" : "${keytab_dir}/ams-hbase.regionserver.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${ams-env/ambari_metrics_user}"
                      }
                    },
                    "name" : "ams_hbase_regionserver_hbase",
                    "principal" : {
                      "configuration" : "ams-hbase-security-site/hbase.regionserver.kerberos.principal",
                      "local_username" : "${ams-env/ambari_metrics_user}",
                      "type" : "service",
                      "value" : "amshbase/_HOST@${realm}"
                    },
                    "referencePath" : "AMBARI_METRICS/METRICS_COLLECTOR/ams_hbase_regionserver_hbase"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ams-hbase-security-site/ams.zookeeper.keytab",
                      "file" : "${keytab_dir}/ams-zk.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${ams-env/ambari_metrics_user}"
                      }
                    },
                    "name" : "ams_zookeeper",
                    "principal" : {
                      "configuration" : "ams-hbase-security-site/ams.zookeeper.principal",
                      "local_username" : "${ams-env/ambari_metrics_user}",
                      "type" : "service",
                      "value" : "amszk/_HOST@${realm}"
                    },
                    "referencePath" : "AMBARI_METRICS/METRICS_COLLECTOR/ams_zookeeper"
                  }
                ],
                "name" : "METRICS_COLLECTOR"
              }
            ],
            "identities" : [
              {
                "name" : "ambari_metrics_spnego",
                "reference" : "/spnego",
                "referencePath" : "AMBARI_METRICS/ambari_metrics_spnego"
              }
            ],
            "name" : "AMBARI_METRICS"
          },
          {
            "auth_to_local_properties" : [
              "application-properties/atlas.authentication.method.kerberos.name.rules|new_lines_escaped"
            ],
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "application-properties/atlas.jaas.KafkaClient.option.keyTab",
                      "file" : "${keytab_dir}/atlas.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${atlas-env/metadata_user}"
                      }
                    },
                    "name" : "atlas",
                    "principal" : {
                      "configuration" : "application-properties/atlas.jaas.KafkaClient.option.principal",
                      "local_username" : "${atlas-env/metadata_user}",
                      "type" : "service",
                      "value" : "atlas/_HOST@${realm}"
                    },
                    "referencePath" : "ATLAS/ATLAS_SERVER/atlas"
                  },
                  {
                    "name" : "atlas_atlas_server_infra-solr",
                    "reference" : "/AMBARI_INFRA/INFRA_SOLR/infra-solr",
                    "referencePath" : "ATLAS/ATLAS_SERVER/atlas_atlas_server_infra-solr"
                  },
                  {
                    "name" : "atlas_atlas_server_kafka_broker",
                    "reference" : "/KAFKA/KAFKA_BROKER/kafka_broker",
                    "referencePath" : "ATLAS/ATLAS_SERVER/atlas_atlas_server_kafka_broker"
                  },
                  {
                    "keytab" : {
                      "configuration" : "application-properties/atlas.authentication.method.kerberos.keytab"
                    },
                    "name" : "atlas_atlas_server_spnego",
                    "principal" : {
                      "configuration" : "application-properties/atlas.authentication.method.kerberos.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "ATLAS/ATLAS_SERVER/atlas_atlas_server_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "application-properties/atlas.authentication.keytab"
                    },
                    "name" : "atlas_auth",
                    "principal" : {
                      "configuration" : "application-properties/atlas.authentication.principal"
                    },
                    "reference" : "/ATLAS/ATLAS_SERVER/atlas",
                    "referencePath" : "ATLAS/ATLAS_SERVER/atlas_auth"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-atlas-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "ranger_atlas_audit",
                    "principal" : {
                      "configuration" : "ranger-atlas-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/ATLAS/ATLAS_SERVER/atlas",
                    "referencePath" : "ATLAS/ATLAS_SERVER/ranger_atlas_audit"
                  }
                ],
                "name" : "ATLAS_SERVER"
              }
            ],
            "configurations" : [
              {
                "application-properties" : {
                  "atlas.authentication.method.kerberos" : "true",
                  "atlas.jaas.KafkaClient.loginModuleControlFlag" : "required",
                  "atlas.jaas.KafkaClient.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "atlas.jaas.KafkaClient.option.serviceName" : "${kafka-env/kafka_user}",
                  "atlas.jaas.KafkaClient.option.storeKey" : "true",
                  "atlas.jaas.KafkaClient.option.useKeyTab" : "true",
                  "atlas.kafka.sasl.kerberos.service.name" : "${kafka-env/kafka_user}",
                  "atlas.kafka.security.protocol" : "PLAINTEXTSASL",
                  "atlas.server.ha.zookeeper.acl" : "auth:",
                  "atlas.solr.kerberos.enable" : "true"
                }
              },
              {
                "ranger-atlas-audit" : {
                  "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              }
            ],
            "name" : "ATLAS"
          },
          {
            "auth_to_local_properties" : [
              "druid-common/druid.hadoop.security.spnego.authToLocal|new_lines_escaped"
            ],
            "components" : [
              {
                "name" : "DRUID_BROKER"
              },
              {
                "name" : "DRUID_COORDINATOR"
              },
              {
                "name" : "DRUID_HISTORICAL"
              },
              {
                "name" : "DRUID_MIDDLEMANAGER"
              },
              {
                "name" : "DRUID_OVERLORD"
              },
              {
                "name" : "DRUID_ROUTER"
              }
            ],
            "configurations" : [
              {
                "druid-common" : {
                  "druid.hadoop.security.spnego.excludedPaths" : "[\"/status\"]",
                  "druid.security.extensions.loadList" : "[\"druid-kerberos\"]"
                }
              }
            ],
            "identities" : [
              {
                "keytab" : {
                  "configuration" : "druid-common/druid.hadoop.security.kerberos.keytab",
                  "file" : "${keytab_dir}/druid.headless.keytab",
                  "group" : {
                    "access" : "r",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${druid-env/druid_user}"
                  }
                },
                "name" : "druid",
                "principal" : {
                  "configuration" : "druid-common/druid.hadoop.security.kerberos.principal",
                  "local_username" : "${druid-env/druid_user}",
                  "type" : "user",
                  "value" : "${druid-env/druid_user}${principal_suffix}@${realm}"
                },
                "referencePath" : "DRUID/druid"
              },
              {
                "name" : "druid_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "DRUID/druid_smokeuser"
              },
              {
                "keytab" : {
                  "configuration" : "druid-common/druid.hadoop.security.spnego.keytab"
                },
                "name" : "druid_spnego",
                "principal" : {
                  "configuration" : "druid-common/druid.hadoop.security.spnego.principal"
                },
                "reference" : "/spnego",
                "referencePath" : "DRUID/druid_spnego"
              }
            ],
            "name" : "DRUID"
          },
          {
            "auth_to_local_properties" : [
              "falcon-startup.properties/*.falcon.http.authentication.kerberos.name.rules|new_lines_escaped"
            ],
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "falcon-atlas-application.properties/atlas.jaas.KafkaClient.option.keyTab"
                    },
                    "name" : "falcon_falcon_server_falcon_server",
                    "principal" : {
                      "configuration" : "falcon-atlas-application.properties/atlas.jaas.KafkaClient.option.principal"
                    },
                    "reference" : "/FALCON/FALCON_SERVER/falcon_server",
                    "referencePath" : "FALCON/FALCON_SERVER/falcon_falcon_server_falcon_server"
                  },
                  {
                    "keytab" : {
                      "configuration" : "falcon-startup.properties/*.falcon.http.authentication.kerberos.keytab"
                    },
                    "name" : "falcon_falcon_server_falcon_spnego",
                    "principal" : {
                      "configuration" : "falcon-startup.properties/*.falcon.http.authentication.kerberos.principal",
                      "value" : "HTTP/_HOST@${realm}"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "FALCON/FALCON_SERVER/falcon_falcon_server_falcon_spnego"
                  },
                  {
                    "name" : "falcon_falcon_server_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "FALCON/FALCON_SERVER/falcon_falcon_server_hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "falcon-startup.properties/*.falcon.service.authentication.kerberos.keytab",
                      "file" : "${keytab_dir}/falcon.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${falcon-env/falcon_user}"
                      }
                    },
                    "name" : "falcon_server",
                    "principal" : {
                      "configuration" : "falcon-startup.properties/*.falcon.service.authentication.kerberos.principal",
                      "local_username" : "${falcon-env/falcon_user}",
                      "type" : "service",
                      "value" : "falcon/_HOST@${realm}"
                    },
                    "referencePath" : "FALCON/FALCON_SERVER/falcon_server"
                  }
                ],
                "name" : "FALCON_SERVER"
              }
            ],
            "configurations" : [
              {
                "falcon-startup.properties" : {
                  "*.dfs.namenode.kerberos.principal" : "nn/_HOST@${realm}",
                  "*.falcon.authentication.type" : "kerberos",
                  "*.falcon.http.authentication.type" : "kerberos"
                }
              }
            ],
            "identities" : [
              {
                "name" : "falcon_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "FALCON/falcon_smokeuser"
              },
              {
                "name" : "falcon_spnego",
                "reference" : "/spnego",
                "referencePath" : "FALCON/falcon_spnego"
              }
            ],
            "name" : "FALCON"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "hbase_hbase_master_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "HBASE/HBASE_MASTER/hbase_hbase_master_hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hbase-site/hbase.security.authentication.spnego.kerberos.keytab"
                    },
                    "name" : "hbase_hbase_master_spnego",
                    "principal" : {
                      "configuration" : "hbase-site/hbase.security.authentication.spnego.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "HBASE/HBASE_MASTER/hbase_hbase_master_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hbase-site/hbase.master.keytab.file",
                      "file" : "${keytab_dir}/hbase.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hbase-env/hbase_user}"
                      }
                    },
                    "name" : "hbase_master_hbase",
                    "principal" : {
                      "configuration" : "hbase-site/hbase.master.kerberos.principal",
                      "local_username" : "${hbase-env/hbase_user}",
                      "type" : "service",
                      "value" : "hbase/_HOST@${realm}"
                    },
                    "referencePath" : "HBASE/HBASE_MASTER/hbase_master_hbase"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-hbase-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "ranger_hbase_audit",
                    "principal" : {
                      "configuration" : "ranger-hbase-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/HBASE/HBASE_MASTER/hbase_master_hbase",
                    "referencePath" : "HBASE/HBASE_MASTER/ranger_hbase_audit"
                  }
                ],
                "name" : "HBASE_MASTER"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "hbase-site/hbase.security.authentication.spnego.kerberos.keytab"
                    },
                    "name" : "hbase_hbase_regionserver_spnego",
                    "principal" : {
                      "configuration" : "hbase-site/hbase.security.authentication.spnego.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "HBASE/HBASE_REGIONSERVER/hbase_hbase_regionserver_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hbase-site/hbase.regionserver.keytab.file",
                      "file" : "${keytab_dir}/hbase.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hbase-env/hbase_user}"
                      }
                    },
                    "name" : "hbase_regionserver_hbase",
                    "principal" : {
                      "configuration" : "hbase-site/hbase.regionserver.kerberos.principal",
                      "local_username" : "${hbase-env/hbase_user}",
                      "type" : "service",
                      "value" : "hbase/_HOST@${realm}"
                    },
                    "referencePath" : "HBASE/HBASE_REGIONSERVER/hbase_regionserver_hbase"
                  }
                ],
                "name" : "HBASE_REGIONSERVER"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "hbase-site/phoenix.queryserver.keytab.file"
                    },
                    "name" : "phoenix_spnego",
                    "principal" : {
                      "configuration" : "hbase-site/phoenix.queryserver.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "HBASE/PHOENIX_QUERY_SERVER/phoenix_spnego"
                  }
                ],
                "name" : "PHOENIX_QUERY_SERVER"
              }
            ],
            "configurations" : [
              {
                "hbase-site" : {
                  "hbase.bulkload.staging.dir" : "/apps/hbase/staging",
                  "hbase.coprocessor.master.classes" : "{{hbase_coprocessor_master_classes}}",
                  "hbase.coprocessor.region.classes" : "{{hbase_coprocessor_region_classes}}",
                  "hbase.coprocessor.regionserver.classes" : "{{hbase_coprocessor_regionserver_classes}}",
                  "hbase.master.ui.readonly" : "true",
                  "hbase.security.authentication" : "kerberos",
                  "hbase.security.authorization" : "true",
                  "zookeeper.znode.parent" : "/hbase-secure"
                }
              },
              {
                "ranger-hbase-audit" : {
                  "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              }
            ],
            "identities" : [
              {
                "keytab" : {
                  "configuration" : "hbase-env/hbase_user_keytab",
                  "file" : "${keytab_dir}/hbase.headless.keytab",
                  "group" : {
                    "access" : "r",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${hbase-env/hbase_user}"
                  }
                },
                "name" : "hbase",
                "principal" : {
                  "configuration" : "hbase-env/hbase_principal_name",
                  "local_username" : "${hbase-env/hbase_user}",
                  "type" : "user",
                  "value" : "${hbase-env/hbase_user}${principal_suffix}@${realm}"
                },
                "referencePath" : "HBASE/hbase"
              },
              {
                "name" : "hbase_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "HBASE/hbase_smokeuser"
              },
              {
                "name" : "hbase_spnego",
                "reference" : "/spnego",
                "referencePath" : "HBASE/hbase_spnego"
              }
            ],
            "name" : "HBASE"
          },
          {
            "auth_to_local_properties" : [
              "core-site/hadoop.security.auth_to_local"
            ],
            "components" : [
              {
                "configurations" : [
                  {
                    "hdfs-site" : {
                      "dfs.datanode.address" : "0.0.0.0:1019",
                      "dfs.datanode.http.address" : "0.0.0.0:1022"
                    }
                  }
                ],
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "hdfs-site/dfs.datanode.keytab.file",
                      "file" : "${keytab_dir}/dn.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      }
                    },
                    "name" : "datanode_dn",
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.datanode.kerberos.principal",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "type" : "service",
                      "value" : "dn/_HOST@${realm}"
                    },
                    "referencePath" : "HDFS/DATANODE/datanode_dn"
                  }
                ],
                "name" : "DATANODE"
              },
              {
                "identities" : [
                  {
                    "name" : "hdfs_hdfs_client_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "HDFS/HDFS_CLIENT/hdfs_hdfs_client_hdfs"
                  }
                ],
                "name" : "HDFS_CLIENT"
              },
              {
                "identities" : [
                  {
                    "name" : "hdfs_journalnode_spnego",
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.journalnode.kerberos.internal.spnego.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "HDFS/JOURNALNODE/hdfs_journalnode_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hdfs-site/dfs.journalnode.keytab.file",
                      "file" : "${keytab_dir}/jn.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      }
                    },
                    "name" : "journalnode_jn",
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.journalnode.kerberos.principal",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "type" : "service",
                      "value" : "jn/_HOST@${realm}"
                    },
                    "referencePath" : "HDFS/JOURNALNODE/journalnode_jn"
                  }
                ],
                "name" : "JOURNALNODE"
              },
              {
                "configurations" : [
                  {
                    "hdfs-site" : {
                      "dfs.block.access.token.enable" : "true"
                    }
                  }
                ],
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "hadoop-env/hdfs_user_keytab",
                      "file" : "${keytab_dir}/hdfs.headless.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      }
                    },
                    "name" : "hdfs",
                    "principal" : {
                      "configuration" : "hadoop-env/hdfs_principal_name",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "type" : "user",
                      "value" : "${hadoop-env/hdfs_user}${principal_suffix}@${realm}"
                    },
                    "referencePath" : "HDFS/NAMENODE/hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-hdfs-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "hdfs_namenode_namenode_nn",
                    "principal" : {
                      "configuration" : "ranger-hdfs-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/HDFS/NAMENODE/namenode_nn",
                    "referencePath" : "HDFS/NAMENODE/hdfs_namenode_namenode_nn"
                  },
                  {
                    "name" : "hdfs_namenode_spnego",
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.namenode.kerberos.internal.spnego.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "HDFS/NAMENODE/hdfs_namenode_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hdfs-site/dfs.namenode.keytab.file",
                      "file" : "${keytab_dir}/nn.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      }
                    },
                    "name" : "namenode_nn",
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.namenode.kerberos.principal",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "type" : "service",
                      "value" : "nn/_HOST@${realm}"
                    },
                    "referencePath" : "HDFS/NAMENODE/namenode_nn"
                  }
                ],
                "name" : "NAMENODE"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "hdfs-site/nfs.keytab.file",
                      "file" : "${keytab_dir}/nfs.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      }
                    },
                    "name" : "nfsgateway",
                    "principal" : {
                      "configuration" : "hdfs-site/nfs.kerberos.principal",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "type" : "service",
                      "value" : "nfs/_HOST@${realm}"
                    },
                    "referencePath" : "HDFS/NFS_GATEWAY/nfsgateway"
                  }
                ],
                "name" : "NFS_GATEWAY"
              },
              {
                "identities" : [
                  {
                    "name" : "hdfs_secondary_namenode_spnego",
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.secondary.namenode.kerberos.internal.spnego.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "HDFS/SECONDARY_NAMENODE/hdfs_secondary_namenode_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hdfs-site/dfs.secondary.namenode.keytab.file",
                      "file" : "${keytab_dir}/nn.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hadoop-env/hdfs_user}"
                      }
                    },
                    "name" : "secondary_namenode_nn",
                    "principal" : {
                      "configuration" : "hdfs-site/dfs.secondary.namenode.kerberos.principal",
                      "local_username" : "${hadoop-env/hdfs_user}",
                      "type" : "service",
                      "value" : "nn/_HOST@${realm}"
                    },
                    "referencePath" : "HDFS/SECONDARY_NAMENODE/secondary_namenode_nn"
                  }
                ],
                "name" : "SECONDARY_NAMENODE"
              }
            ],
            "configurations" : [
              {
                "core-site" : {
                  "ha.zookeeper.acl" : "sasl:nn:rwcda",
                  "hadoop.proxyuser.HTTP.groups" : "${hadoop-env/proxyuser_group}",
                  "hadoop.security.authentication" : "kerberos",
                  "hadoop.security.authorization" : "true"
                }
              },
              {
                "ranger-hdfs-audit" : {
                  "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              }
            ],
            "identities" : [
              {
                "name" : "hdfs_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "HDFS/hdfs_smokeuser"
              },
              {
                "keytab" : {
                  "configuration" : "hdfs-site/dfs.web.authentication.kerberos.keytab"
                },
                "name" : "hdfs_spnego",
                "principal" : {
                  "configuration" : "hdfs-site/dfs.web.authentication.kerberos.principal"
                },
                "reference" : "/spnego",
                "referencePath" : "HDFS/hdfs_spnego"
              }
            ],
            "name" : "HDFS"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "hive-site/hive.metastore.kerberos.keytab.file"
                    },
                    "name" : "hive_hive_metastore_hive_server_hive",
                    "principal" : {
                      "configuration" : "hive-site/hive.metastore.kerberos.principal"
                    },
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "referencePath" : "HIVE/HIVE_METASTORE/hive_hive_metastore_hive_server_hive"
                  }
                ],
                "name" : "HIVE_METASTORE"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "hive-atlas-application.properties/atlas.jaas.KafkaClient.option.keyTab"
                    },
                    "name" : "atlas_kafka",
                    "principal" : {
                      "configuration" : "hive-atlas-application.properties/atlas.jaas.KafkaClient.option.principal"
                    },
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "referencePath" : "HIVE/HIVE_SERVER/atlas_kafka"
                  },
                  {
                    "name" : "hive_hive_server_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "HIVE/HIVE_SERVER/hive_hive_server_hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hive-site/hive.server2.authentication.spnego.keytab"
                    },
                    "name" : "hive_hive_server_spnego",
                    "principal" : {
                      "configuration" : "hive-site/hive.server2.authentication.spnego.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "HIVE/HIVE_SERVER/hive_hive_server_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hive-site/hive.server2.authentication.kerberos.keytab",
                      "file" : "${keytab_dir}/hive.service.keytab",
                      "group" : {
                        "access" : "r",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${hive-env/hive_user}"
                      }
                    },
                    "name" : "hive_server_hive",
                    "principal" : {
                      "configuration" : "hive-site/hive.server2.authentication.kerberos.principal",
                      "local_username" : "${hive-env/hive_user}",
                      "type" : "service",
                      "value" : "hive/_HOST@${realm}"
                    },
                    "referencePath" : "HIVE/HIVE_SERVER/hive_server_hive"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-hive-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "ranger_audit",
                    "principal" : {
                      "configuration" : "ranger-hive-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "referencePath" : "HIVE/HIVE_SERVER/ranger_audit"
                  }
                ],
                "name" : "HIVE_SERVER"
              },
              {
                "identities" : [
                  {
                    "name" : "hive_hive_server_interactive_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "HIVE/HIVE_SERVER_INTERACTIVE/hive_hive_server_interactive_hdfs"
                  },
                  {
                    "name" : "hive_hive_server_interactive_hive_server_hive",
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "referencePath" : "HIVE/HIVE_SERVER_INTERACTIVE/hive_hive_server_interactive_hive_server_hive"
                  },
                  {
                    "name" : "hive_hive_server_interactive_llap_zk_hive",
                    "reference" : "/YARN/NODEMANAGER/llap_zk_hive",
                    "referencePath" : "HIVE/HIVE_SERVER_INTERACTIVE/hive_hive_server_interactive_llap_zk_hive"
                  },
                  {
                    "name" : "hive_hive_server_interactive_spnego",
                    "reference" : "/HIVE/HIVE_SERVER/spnego",
                    "referencePath" : "HIVE/HIVE_SERVER_INTERACTIVE/hive_hive_server_interactive_spnego"
                  }
                ],
                "name" : "HIVE_SERVER_INTERACTIVE"
              },
              {
                "configurations" : [
                  {
                    "core-site" : {
                      "hadoop.proxyuser.HTTP.hosts" : "${clusterHostInfo/webhcat_server_host|append(core-site/hadoop.proxyuser.HTTP.hosts, \\\\,, true)}"
                    }
                  },
                  {
                    "webhcat-site" : {
                      "templeton.hive.properties" : "hive.metastore.local=false,hive.metastore.uris=${clusterHostInfo/hive_metastore_host|each(thrift://%s:9083, \\\\,, \\s*\\,\\s*)},hive.metastore.sasl.enabled=true,hive.metastore.execute.setugi=true,hive.metastore.warehouse.dir=/apps/hive/warehouse,hive.exec.mode.local.auto=false,hive.metastore.kerberos.principal=hive/_HOST@${realm}",
                      "templeton.kerberos.secret" : "secret"
                    }
                  }
                ],
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "webhcat-site/templeton.kerberos.keytab"
                    },
                    "name" : "hive_webhcat_server_spnego",
                    "principal" : {
                      "configuration" : "webhcat-site/templeton.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "HIVE/WEBHCAT_SERVER/hive_webhcat_server_spnego"
                  }
                ],
                "name" : "WEBHCAT_SERVER"
              }
            ],
            "configurations" : [
              {
                "hive-site" : {
                  "hive.metastore.sasl.enabled" : "true",
                  "hive.server2.authentication" : "KERBEROS"
                }
              },
              {
                "ranger-hive-audit" : {
                  "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              }
            ],
            "identities" : [
              {
                "name" : "hive_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "HIVE/hive_smokeuser"
              },
              {
                "name" : "hive_spnego",
                "reference" : "/spnego",
                "referencePath" : "HIVE/hive_spnego"
              }
            ],
            "name" : "HIVE"
          },
          {
            "auth_to_local_properties" : [
              "kafka-broker/sasl.kerberos.principal.to.local.rules|comma"
            ],
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "kafka-env/kafka_keytab",
                      "file" : "${keytab_dir}/kafka.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${kafka-env/kafka_user}"
                      }
                    },
                    "name" : "kafka_broker",
                    "principal" : {
                      "configuration" : "kafka-env/kafka_principal_name",
                      "type" : "service",
                      "value" : "${kafka-env/kafka_user}/_HOST@${realm}"
                    },
                    "referencePath" : "KAFKA/KAFKA_BROKER/kafka_broker"
                  },
                  {
                    "name" : "kafka_kafka_broker_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "when" : {
                      "contains" : [
                        "services",
                        "HDFS"
                      ]
                    },
                    "referencePath" : "KAFKA/KAFKA_BROKER/kafka_kafka_broker_hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-kafka-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "kafka_kafka_broker_kafka_broker",
                    "principal" : {
                      "configuration" : "ranger-kafka-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/KAFKA/KAFKA_BROKER/kafka_broker",
                    "referencePath" : "KAFKA/KAFKA_BROKER/kafka_kafka_broker_kafka_broker"
                  }
                ],
                "name" : "KAFKA_BROKER"
              }
            ],
            "configurations" : [
              {
                "kafka-broker" : {
                  "authorizer.class.name" : "org.apache.ranger.authorization.kafka.authorizer.RangerKafkaAuthorizer",
                  "principal.to.local.class" : "kafka.security.auth.KerberosPrincipalToLocal",
                  "security.inter.broker.protocol" : "PLAINTEXTSASL",
                  "super.users" : "user:${kafka-env/kafka_user}",
                  "zookeeper.set.acl" : "true"
                }
              },
              {
                "ranger-kafka-audit" : {
                  "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              }
            ],
            "identities" : [
              {
                "name" : "kafka_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "KAFKA/kafka_smokeuser"
              }
            ],
            "name" : "KAFKA"
          },
          {
            "components" : [
              {
                "name" : "KERBEROS_CLIENT"
              }
            ],
            "identities" : [
              {
                "name" : "kerberos_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "KERBEROS/kerberos_smokeuser"
              }
            ],
            "name" : "KERBEROS"
          },
          {
            "components" : [
              {
                "configurations" : [
                  {
                    "core-site" : {
                      "hadoop.proxyuser.${knox-env/knox_user}.groups" : "${hadoop-env/proxyuser_group}",
                      "hadoop.proxyuser.${knox-env/knox_user}.hosts" : "${clusterHostInfo/knox_gateway_hosts}"
                    }
                  },
                  {
                    "gateway-site" : {
                      "gateway.hadoop.kerberos.secured" : "true",
                      "java.security.krb5.conf" : "/etc/krb5.conf"
                    }
                  },
                  {
                    "oozie-site" : {
                      "oozie.service.ProxyUserService.proxyuser.${knox-env/knox_user}.groups" : "${hadoop-env/proxyuser_group}",
                      "oozie.service.ProxyUserService.proxyuser.${knox-env/knox_user}.hosts" : "${clusterHostInfo/knox_gateway_hosts}"
                    }
                  },
                  {
                    "ranger-knox-audit" : {
                      "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                      "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                      "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                      "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                      "xasecure.audit.jaas.Client.option.storeKey" : "false",
                      "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                    }
                  },
                  {
                    "webhcat-site" : {
                      "webhcat.proxyuser.${knox-env/knox_user}.groups" : "${hadoop-env/proxyuser_group}",
                      "webhcat.proxyuser.${knox-env/knox_user}.hosts" : "${clusterHostInfo/knox_gateway_hosts}"
                    }
                  }
                ],
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "ranger-knox-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "knox_knox_gateway_knox_principal",
                    "principal" : {
                      "configuration" : "ranger-knox-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/KNOX/KNOX_GATEWAY/knox_principal",
                    "referencePath" : "KNOX/KNOX_GATEWAY/knox_knox_gateway_knox_principal"
                  },
                  {
                    "keytab" : {
                      "configuration" : "knox-env/knox_keytab_path",
                      "file" : "${keytab_dir}/knox.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${knox-env/knox_user}"
                      }
                    },
                    "name" : "knox_principal",
                    "principal" : {
                      "configuration" : "knox-env/knox_principal_name",
                      "local_username" : "${knox-env/knox_user}",
                      "type" : "service",
                      "value" : "${knox-env/knox_user}/_HOST@${realm}"
                    },
                    "referencePath" : "KNOX/KNOX_GATEWAY/knox_principal"
                  }
                ],
                "name" : "KNOX_GATEWAY"
              }
            ],
            "name" : "KNOX"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "logfeeder-env/logfeeder_kerberos_keytab",
                      "file" : "${keytab_dir}/logfeeder.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "root"
                      }
                    },
                    "name" : "logfeeder",
                    "principal" : {
                      "configuration" : "logfeeder-env/logfeeder_kerberos_principal",
                      "type" : "service",
                      "value" : "logfeeder/_HOST@${realm}"
                    },
                    "referencePath" : "LOGSEARCH/LOGSEARCH_LOGFEEDER/logfeeder"
                  }
                ],
                "name" : "LOGSEARCH_LOGFEEDER"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "logsearch-env/logsearch_kerberos_keytab",
                      "file" : "${keytab_dir}/logsearch.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${logsearch-env/logsearch_user}"
                      }
                    },
                    "name" : "logsearch",
                    "principal" : {
                      "configuration" : "logsearch-env/logsearch_kerberos_principal",
                      "type" : "service",
                      "value" : "logsearch/_HOST@${realm}"
                    },
                    "referencePath" : "LOGSEARCH/LOGSEARCH_SERVER/logsearch"
                  }
                ],
                "name" : "LOGSEARCH_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "logsearch_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "LOGSEARCH/logsearch_smokeuser"
              }
            ],
            "name" : "LOGSEARCH"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "mahout_mahout_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "MAHOUT/MAHOUT/mahout_mahout_hdfs"
                  }
                ],
                "name" : "MAHOUT"
              }
            ],
            "identities" : [
              {
                "name" : "mahout_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "MAHOUT/mahout_smokeuser"
              }
            ],
            "name" : "MAHOUT"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "mapred-site/mapreduce.jobhistory.keytab",
                      "file" : "${keytab_dir}/jhs.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${mapred-env/mapred_user}"
                      }
                    },
                    "name" : "history_server_jhs",
                    "principal" : {
                      "configuration" : "mapred-site/mapreduce.jobhistory.principal",
                      "local_username" : "${mapred-env/mapred_user}",
                      "type" : "service",
                      "value" : "jhs/_HOST@${realm}"
                    },
                    "referencePath" : "MAPREDUCE2/HISTORYSERVER/history_server_jhs"
                  },
                  {
                    "name" : "mapreduce2_historyserver_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "MAPREDUCE2/HISTORYSERVER/mapreduce2_historyserver_hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "mapred-site/mapreduce.jobhistory.webapp.spnego-keytab-file"
                    },
                    "name" : "mapreduce2_historyserver_spnego",
                    "principal" : {
                      "configuration" : "mapred-site/mapreduce.jobhistory.webapp.spnego-principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "MAPREDUCE2/HISTORYSERVER/mapreduce2_historyserver_spnego"
                  }
                ],
                "name" : "HISTORYSERVER"
              }
            ],
            "identities" : [
              {
                "name" : "mapreduce2_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "MAPREDUCE2/mapreduce2_smokeuser"
              },
              {
                "name" : "mapreduce2_spnego",
                "reference" : "/spnego",
                "referencePath" : "MAPREDUCE2/mapreduce2_spnego"
              }
            ],
            "name" : "MAPREDUCE2"
          },
          {
            "auth_to_local_properties" : [
              "oozie-site/oozie.authentication.kerberos.name.rules"
            ],
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "oozie_oozie_server_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "OOZIE/OOZIE_SERVER/oozie_oozie_server_hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "oozie-site/oozie.authentication.kerberos.keytab"
                    },
                    "name" : "oozie_oozie_server_spnego",
                    "principal" : {
                      "configuration" : "oozie-site/oozie.authentication.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "OOZIE/OOZIE_SERVER/oozie_oozie_server_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "oozie-site/oozie.service.HadoopAccessorService.keytab.file",
                      "file" : "${keytab_dir}/oozie.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${oozie-env/oozie_user}"
                      }
                    },
                    "name" : "oozie_server",
                    "principal" : {
                      "configuration" : "oozie-site/oozie.service.HadoopAccessorService.kerberos.principal",
                      "local_username" : "${oozie-env/oozie_user}",
                      "type" : "service",
                      "value" : "oozie/_HOST@${realm}"
                    },
                    "referencePath" : "OOZIE/OOZIE_SERVER/oozie_server"
                  }
                ],
                "name" : "OOZIE_SERVER"
              }
            ],
            "configurations" : [
              {
                "oozie-site" : {
                  "local.realm" : "${realm}",
                  "oozie.authentication.type" : "kerberos",
                  "oozie.credentials.credentialclasses" : "hcat=org.apache.oozie.action.hadoop.HCatCredentials,hive2=org.apache.oozie.action.hadoop.Hive2Credentials",
                  "oozie.service.AuthorizationService.authorization.enabled" : "true",
                  "oozie.service.HadoopAccessorService.kerberos.enabled" : "true",
                  "oozie.zookeeper.secure" : "true"
                }
              }
            ],
            "identities" : [
              {
                "name" : "oozie_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "OOZIE/oozie_smokeuser"
              },
              {
                "name" : "oozie_spnego",
                "reference" : "/spnego",
                "referencePath" : "OOZIE/oozie_spnego"
              }
            ],
            "name" : "OOZIE"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "pig_pig_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "PIG/PIG/pig_pig_hdfs"
                  }
                ],
                "name" : "PIG"
              }
            ],
            "name" : "PIG"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "ranger-admin-site/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "ranger_ranger_admin_rangeradmin",
                    "principal" : {
                      "configuration" : "ranger-admin-site/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/RANGER/RANGER_ADMIN/rangeradmin",
                    "referencePath" : "RANGER/RANGER_ADMIN/ranger_ranger_admin_rangeradmin"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-admin-site/ranger.spnego.kerberos.keytab"
                    },
                    "name" : "ranger_ranger_admin_spnego",
                    "reference" : "/spnego",
                    "referencePath" : "RANGER/RANGER_ADMIN/ranger_ranger_admin_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-admin-site/ranger.admin.kerberos.keytab",
                      "file" : "${keytab_dir}/rangeradmin.service.keytab",
                      "group" : { },
                      "owner" : {
                        "access" : "r",
                        "name" : "${ranger-env/ranger_user}"
                      }
                    },
                    "name" : "rangeradmin",
                    "principal" : {
                      "configuration" : "ranger-admin-site/ranger.admin.kerberos.principal",
                      "local_username" : "${ranger-env/ranger_user}",
                      "type" : "service",
                      "value" : "rangeradmin/_HOST@${realm}"
                    },
                    "referencePath" : "RANGER/RANGER_ADMIN/rangeradmin"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-admin-site/ranger.lookup.kerberos.keytab",
                      "file" : "${keytab_dir}/rangerlookup.service.keytab",
                      "group" : { },
                      "owner" : {
                        "access" : "r",
                        "name" : "${ranger-env/ranger_user}"
                      }
                    },
                    "name" : "rangerlookup",
                    "principal" : {
                      "configuration" : "ranger-admin-site/ranger.lookup.kerberos.principal",
                      "type" : "service",
                      "value" : "rangerlookup/_HOST@${realm}"
                    },
                    "referencePath" : "RANGER/RANGER_ADMIN/rangerlookup"
                  }
                ],
                "name" : "RANGER_ADMIN"
              },
              {
                "configurations" : [
                  {
                    "tagsync-application-properties" : {
                      "atlas.jaas.KafkaClient.loginModuleControlFlag" : "required",
                      "atlas.jaas.KafkaClient.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                      "atlas.jaas.KafkaClient.option.serviceName" : "kafka",
                      "atlas.jaas.KafkaClient.option.storeKey" : "true",
                      "atlas.jaas.KafkaClient.option.useKeyTab" : "true",
                      "atlas.kafka.sasl.kerberos.service.name" : "kafka",
                      "atlas.kafka.security.protocol" : "PLAINTEXTSASL"
                    }
                  }
                ],
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "tagsync-application-properties/atlas.jaas.KafkaClient.option.keyTab"
                    },
                    "name" : "ranger_ranger_tagsync_rangertagsync",
                    "principal" : {
                      "configuration" : "tagsync-application-properties/atlas.jaas.KafkaClient.option.principal"
                    },
                    "reference" : "/RANGER/RANGER_TAGSYNC/rangertagsync",
                    "referencePath" : "RANGER/RANGER_TAGSYNC/ranger_ranger_tagsync_rangertagsync"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-tagsync-site/ranger.tagsync.kerberos.keytab",
                      "file" : "${keytab_dir}/rangertagsync.service.keytab",
                      "group" : { },
                      "owner" : {
                        "access" : "r",
                        "name" : "${ranger-env/ranger_user}"
                      }
                    },
                    "name" : "rangertagsync",
                    "principal" : {
                      "configuration" : "ranger-tagsync-site/ranger.tagsync.kerberos.principal",
                      "local_username" : "rangertagsync",
                      "type" : "service",
                      "value" : "rangertagsync/_HOST@${realm}"
                    },
                    "referencePath" : "RANGER/RANGER_TAGSYNC/rangertagsync"
                  }
                ],
                "name" : "RANGER_TAGSYNC"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "ranger-ugsync-site/ranger.usersync.kerberos.keytab",
                      "file" : "${keytab_dir}/rangerusersync.service.keytab",
                      "group" : { },
                      "owner" : {
                        "access" : "r",
                        "name" : "${ranger-env/ranger_user}"
                      }
                    },
                    "name" : "rangerusersync",
                    "principal" : {
                      "configuration" : "ranger-ugsync-site/ranger.usersync.kerberos.principal",
                      "local_username" : "rangerusersync",
                      "type" : "service",
                      "value" : "rangerusersync/_HOST@${realm}"
                    },
                    "referencePath" : "RANGER/RANGER_USERSYNC/rangerusersync"
                  }
                ],
                "name" : "RANGER_USERSYNC"
              }
            ],
            "configurations" : [
              {
                "ranger-admin-site" : {
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              }
            ],
            "identities" : [
              {
                "name" : "ranger_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "RANGER/ranger_smokeuser"
              },
              {
                "name" : "ranger_spnego",
                "reference" : "/spnego",
                "referencePath" : "RANGER/ranger_spnego"
              }
            ],
            "name" : "RANGER"
          },
          {
            "auth_to_local_properties" : [
              "kms-site/hadoop.kms.authentication.kerberos.name.rules"
            ],
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "ranger-kms-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "ranger_kms_ranger_kms_server_rangerkms",
                    "principal" : {
                      "configuration" : "ranger-kms-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/RANGER_KMS/RANGER_KMS_SERVER/rangerkms",
                    "referencePath" : "RANGER_KMS/RANGER_KMS_SERVER/ranger_kms_ranger_kms_server_rangerkms"
                  },
                  {
                    "keytab" : {
                      "configuration" : "kms-site/hadoop.kms.authentication.signer.secret.provider.zookeeper.kerberos.keytab"
                    },
                    "name" : "ranger_kms_ranger_kms_server_spnego",
                    "principal" : {
                      "configuration" : "kms-site/hadoop.kms.authentication.signer.secret.provider.zookeeper.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "RANGER_KMS/RANGER_KMS_SERVER/ranger_kms_ranger_kms_server_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "dbks-site/ranger.ks.kerberos.keytab",
                      "file" : "${keytab_dir}/rangerkms.service.keytab",
                      "group" : { },
                      "owner" : {
                        "access" : "r",
                        "name" : "${kms-env/kms_user}"
                      }
                    },
                    "name" : "rangerkms",
                    "principal" : {
                      "configuration" : "dbks-site/ranger.ks.kerberos.principal",
                      "local_username" : "keyadmin",
                      "type" : "service",
                      "value" : "rangerkms/_HOST@${realm}"
                    },
                    "referencePath" : "RANGER_KMS/RANGER_KMS_SERVER/rangerkms"
                  }
                ],
                "name" : "RANGER_KMS_SERVER"
              }
            ],
            "configurations" : [
              {
                "kms-site" : {
                  "hadoop.kms.authentication.kerberos.principal" : "*",
                  "hadoop.kms.authentication.type" : "kerberos"
                }
              },
              {
                "ranger-kms-audit" : {
                  "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              }
            ],
            "identities" : [
              {
                "keytab" : {
                  "configuration" : "kms-site/hadoop.kms.authentication.kerberos.keytab"
                },
                "name" : "ranger_kms_spnego",
                "reference" : "/spnego",
                "referencePath" : "RANGER_KMS/ranger_kms_spnego"
              }
            ],
            "name" : "RANGER_KMS"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "slider_slider_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "SLIDER/SLIDER/slider_slider_hdfs"
                  }
                ],
                "name" : "SLIDER"
              }
            ],
            "name" : "SLIDER"
          },
          {
            "components" : [
              {
                "configurations" : [
                  {
                    "ams-hbase-site" : {
                      "hbase.superuser" : "${activity-conf/global.activity.analyzer.user},${activity-conf/activity.explorer.user},${ams-env/ambari_metrics_user}"
                    }
                  },
                  {
                    "yarn-site" : {
                      "yarn.admin.acl" : "${yarn-env/yarn_user},dr.who"
                    }
                  }
                ],
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "activity-conf/global.activity.analyzer.user.keytab",
                      "file" : "${keytab_dir}/activity-analyzer.headless.keytab",
                      "group" : { },
                      "owner" : {
                        "access" : "r"
                      }
                    },
                    "name" : "activity_analyzer",
                    "principal" : {
                      "configuration" : "activity-conf/global.activity.analyzer.user.principal",
                      "local_username" : "${activity-conf/global.activity.analyzer.user}",
                      "type" : "service",
                      "value" : "${activity-conf/global.activity.analyzer.user}/_HOST@${realm}"
                    },
                    "referencePath" : "SMARTSENSE/ACTIVITY_ANALYZER/activity_analyzer"
                  }
                ],
                "name" : "ACTIVITY_ANALYZER"
              },
              {
                "configurations" : [
                  {
                    "activity-zeppelin-site" : {
                      "zeppelin.server.kerberos.keytab" : "${keytab_dir}/activity-explorer.headless.keytab",
                      "zeppelin.server.kerberos.principal" : "${activity-conf/activity.explorer.user}/_HOST@${realm}"
                    }
                  },
                  {
                    "ams-hbase-site" : {
                      "hbase.superuser" : "${activity-conf/global.activity.analyzer.user},${activity-conf/activity.explorer.user},${ams-env/ambari_metrics_user}"
                    }
                  },
                  {
                    "yarn-site" : {
                      "yarn.admin.acl" : "${yarn-env/yarn_user},dr.who"
                    }
                  }
                ],
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "activity-conf/activity.explorer.user.keytab",
                      "file" : "${keytab_dir}/activity-explorer.headless.keytab",
                      "group" : { },
                      "owner" : {
                        "access" : "r"
                      }
                    },
                    "name" : "activity_explorer",
                    "principal" : {
                      "configuration" : "activity-conf/activity.explorer.user.principal",
                      "local_username" : "${activity-conf/activity.explorer.user}",
                      "type" : "service",
                      "value" : "${activity-conf/activity.explorer.user}/_HOST@${realm}"
                    },
                    "referencePath" : "SMARTSENSE/ACTIVITY_EXPLORER/activity_explorer"
                  }
                ],
                "name" : "ACTIVITY_EXPLORER"
              }
            ],
            "name" : "SMARTSENSE"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "solr-config-env/solr_keytab_path",
                      "file" : "${keytab_dir}/solr.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${solr-config-env/solr_config_user}"
                      }
                    },
                    "name" : "solr_kerberos",
                    "principal" : {
                      "configuration" : "solr-config-env/solr_principal_name",
                      "type" : "service",
                      "value" : "solr/_HOST@${realm}"
                    },
                    "referencePath" : "SOLR/SOLR_SERVER/solr_kerberos"
                  },
                  {
                    "keytab" : {
                      "configuration" : "solr-config-env/solr_metrics_keytab_path",
                      "file" : "${keytab_dir}/solr.metrics.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${solr-config-env/solr_config_user}"
                      }
                    },
                    "name" : "solr_metrics_kerberos",
                    "principal" : {
                      "configuration" : "solr-config-env/solr_metrics_principal_name",
                      "type" : "service",
                      "value" : "solr_metrics/_HOST@${realm}"
                    },
                    "referencePath" : "SOLR/SOLR_SERVER/solr_metrics_kerberos"
                  }
                ],
                "name" : "SOLR_SERVER"
              }
            ],
            "identities" : [
              {
                "keytab" : {
                  "configuration" : "solr-config-env/solr_spnego_keytab_path",
                  "file" : "${keytab_dir}/spnego.service.keytab"
                },
                "name" : "/spnego",
                "principal" : {
                  "configuration" : "solr-config-env/solr_spnego_principal_name",
                  "value" : "HTTP/_HOST@${realm}"
                },
                "referencePath" : "SOLR//spnego"
              }
            ],
            "name" : "SOLR"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "SPARK/LIVY_SERVER/hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "livy-conf/livy.server.auth.kerberos.keytab"
                    },
                    "name" : "livy_spnego",
                    "principal" : {
                      "configuration" : "livy-conf/livy.server.auth.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "SPARK/LIVY_SERVER/livy_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "livy-conf/livy.server.launch.kerberos.keytab",
                      "file" : "${keytab_dir}/livy.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${livy-env/livy_user}"
                      }
                    },
                    "name" : "livyuser",
                    "principal" : {
                      "configuration" : "livy-conf/livy.server.launch.kerberos.principal",
                      "local_username" : "${livy-env/livy_user}",
                      "type" : "service",
                      "value" : "${livy-env/livy_user}/_HOST@${realm}"
                    },
                    "referencePath" : "SPARK/LIVY_SERVER/livyuser"
                  }
                ],
                "name" : "LIVY_SERVER"
              },
              {
                "name" : "SPARK_CLIENT"
              },
              {
                "identities" : [
                  {
                    "name" : "hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "SPARK/SPARK_JOBHISTORYSERVER/hdfs"
                  }
                ],
                "name" : "SPARK_JOBHISTORYSERVER"
              },
              {
                "identities" : [
                  {
                    "name" : "hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "SPARK/SPARK_THRIFTSERVER/hdfs"
                  },
                  {
                    "name" : "hive_server_hive",
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "referencePath" : "SPARK/SPARK_THRIFTSERVER/hive_server_hive"
                  }
                ],
                "name" : "SPARK_THRIFTSERVER"
              }
            ],
            "configurations" : [
              {
                "core-site" : {
                  "hadoop.proxyuser.${livy-env/livy_user}.groups" : "*",
                  "hadoop.proxyuser.${livy-env/livy_user}.hosts" : "*"
                }
              },
              {
                "livy-conf" : {
                  "livy.impersonation.enabled" : "true",
                  "livy.server.auth.type" : "kerberos"
                }
              },
              {
                "spark-defaults" : {
                  "spark.history.kerberos.enabled" : "true"
                }
              },
              {
                "spark-thrift-sparkconf" : {
                  "spark.yarn.keytab" : "${spark-env/hive_kerberos_keytab}",
                  "spark.yarn.principal" : "${spark-env/hive_kerberos_principal}"
                }
              }
            ],
            "identities" : [
              {
                "name" : "spark_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "SPARK/spark_smokeuser"
              },
              {
                "keytab" : {
                  "configuration" : "spark-defaults/spark.history.kerberos.keytab",
                  "file" : "${keytab_dir}/spark.headless.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${spark-env/spark_user}"
                  }
                },
                "name" : "sparkuser",
                "principal" : {
                  "configuration" : "spark-defaults/spark.history.kerberos.principal",
                  "local_username" : "${spark-env/spark_user}",
                  "type" : "user",
                  "value" : "${spark-env/spark_user}${principal_suffix}@${realm}"
                },
                "referencePath" : "SPARK/sparkuser"
              }
            ],
            "name" : "SPARK"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "SPARK2/LIVY2_SERVER/hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "livy2-conf/livy.server.auth.kerberos.keytab"
                    },
                    "name" : "livy_spnego",
                    "principal" : {
                      "configuration" : "livy2-conf/livy.server.auth.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "SPARK2/LIVY2_SERVER/livy_spnego"
                  },
                  {
                    "keytab" : {
                      "configuration" : "livy2-conf/livy.server.launch.kerberos.keytab",
                      "file" : "${keytab_dir}/livy.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${livy2-env/livy2_user}"
                      }
                    },
                    "name" : "livyuser",
                    "principal" : {
                      "configuration" : "livy2-conf/livy.server.launch.kerberos.principal",
                      "local_username" : "${livy2-env/livy2_user}",
                      "type" : "service",
                      "value" : "${livy2-env/livy2_user}/_HOST@${realm}"
                    },
                    "referencePath" : "SPARK2/LIVY2_SERVER/livyuser"
                  }
                ],
                "name" : "LIVY2_SERVER"
              },
              {
                "name" : "SPARK2_CLIENT"
              },
              {
                "identities" : [
                  {
                    "name" : "hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "SPARK2/SPARK2_JOBHISTORYSERVER/hdfs"
                  }
                ],
                "name" : "SPARK2_JOBHISTORYSERVER"
              },
              {
                "identities" : [
                  {
                    "name" : "hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "SPARK2/SPARK2_THRIFTSERVER/hdfs"
                  },
                  {
                    "name" : "hive_server_hive",
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "referencePath" : "SPARK2/SPARK2_THRIFTSERVER/hive_server_hive"
                  }
                ],
                "name" : "SPARK2_THRIFTSERVER"
              }
            ],
            "configurations" : [
              {
                "core-site" : {
                  "hadoop.proxyuser.${livy2-env/livy2_user}.groups" : "*",
                  "hadoop.proxyuser.${livy2-env/livy2_user}.hosts" : "*"
                }
              },
              {
                "livy2-conf" : {
                  "livy.impersonation.enabled" : "true",
                  "livy.server.auth.type" : "kerberos"
                }
              },
              {
                "spark2-defaults" : {
                  "spark.history.kerberos.enabled" : "true"
                }
              },
              {
                "spark2-thrift-sparkconf" : {
                  "spark.yarn.keytab" : "${spark2-env/hive_kerberos_keytab}",
                  "spark.yarn.principal" : "${spark2-env/hive_kerberos_principal}"
                }
              }
            ],
            "identities" : [
              {
                "name" : "spark2_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "SPARK2/spark2_smokeuser"
              },
              {
                "keytab" : {
                  "configuration" : "spark2-defaults/spark.history.kerberos.keytab",
                  "file" : "${keytab_dir}/spark.headless.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${spark2-env/spark_user}"
                  }
                },
                "name" : "spark2user",
                "principal" : {
                  "configuration" : "spark2-defaults/spark.history.kerberos.principal",
                  "local_username" : "${spark2-env/spark_user}",
                  "type" : "user",
                  "value" : "${spark2-env/spark_user}${principal_suffix}@${realm}"
                },
                "referencePath" : "SPARK2/spark2user"
              }
            ],
            "name" : "SPARK2"
          },
          {
            "components" : [
              {
                "name" : "SQOOP"
              }
            ],
            "configurations" : [
              {
                "sqoop-atlas-application.properties" : {
                  "atlas.jaas.KafkaClient.option.renewTicket" : "true",
                  "atlas.jaas.KafkaClient.option.useTicketCache" : "true"
                }
              }
            ],
            "name" : "SQOOP"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "name" : "drpc_server",
                    "reference" : "/STORM/NIMBUS/nimbus_server",
                    "referencePath" : "STORM/DRPC_SERVER/drpc_server"
                  }
                ],
                "name" : "DRPC_SERVER"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "storm-env/nimbus_keytab",
                      "file" : "${keytab_dir}/nimbus.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${storm-env/storm_user}"
                      }
                    },
                    "name" : "nimbus_server",
                    "principal" : {
                      "configuration" : "storm-env/nimbus_principal_name",
                      "type" : "service",
                      "value" : "nimbus/_HOST@${realm}"
                    },
                    "referencePath" : "STORM/NIMBUS/nimbus_server"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-storm-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "storm_numbus_storm_components",
                    "principal" : {
                      "configuration" : "ranger-storm-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/STORM/storm_components",
                    "referencePath" : "STORM/NIMBUS/storm_numbus_storm_components"
                  }
                ],
                "name" : "NIMBUS"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "storm-env/storm_ui_keytab"
                    },
                    "name" : "storm_storm_ui_server_spnego",
                    "principal" : {
                      "configuration" : "storm-env/storm_ui_principal_name"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "STORM/STORM_UI_SERVER/storm_storm_ui_server_spnego"
                  }
                ],
                "name" : "STORM_UI_SERVER"
              },
              {
                "name" : "SUPERVISOR"
              }
            ],
            "configurations" : [
              {
                "ranger-storm-audit" : {
                  "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              },
              {
                "storm-site" : {
                  "drpc.authorizer" : "org.apache.storm.security.auth.authorizer.DRPCSimpleACLAuthorizer",
                  "java.security.auth.login.config" : "{{conf_dir}}/storm_jaas.conf",
                  "nimbus.admins" : "['{{storm_bare_jaas_principal}}', '{{ambari_bare_jaas_principal}}']",
                  "nimbus.authorizer" : "org.apache.storm.security.auth.authorizer.SimpleACLAuthorizer",
                  "nimbus.impersonation.acl" : "{ {{storm_bare_jaas_principal}} : {hosts: ['*'], groups: ['*']}}",
                  "nimbus.impersonation.authorizer" : "org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer",
                  "nimbus.supervisor.users" : "['{{storm_bare_jaas_principal}}']",
                  "storm.principal.tolocal" : "org.apache.storm.security.auth.KerberosPrincipalToLocal",
                  "storm.zookeeper.superACL" : "sasl:{{storm_bare_jaas_principal}}",
                  "supervisor.enable" : "true",
                  "ui.filter" : "org.apache.hadoop.security.authentication.server.AuthenticationFilter",
                  "ui.filter.params" : "{'type': 'kerberos', 'kerberos.principal': '{{storm_ui_jaas_principal}}', 'kerberos.keytab': '{{storm_ui_keytab_path}}', 'kerberos.name.rules': 'DEFAULT'}"
                }
              }
            ],
            "identities" : [
              {
                "keytab" : {
                  "configuration" : "storm-env/storm_keytab",
                  "file" : "${keytab_dir}/storm.headless.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${storm-env/storm_user}"
                  }
                },
                "name" : "storm_components",
                "principal" : {
                  "configuration" : "storm-env/storm_principal_name",
                  "type" : "user",
                  "value" : "${storm-env/storm_user}${principal_suffix}@${realm}"
                },
                "referencePath" : "STORM/storm_components"
              },
              {
                "name" : "storm_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "STORM/storm_smokeuser"
              },
              {
                "name" : "storm_spnego",
                "reference" : "/spnego",
                "referencePath" : "STORM/storm_spnego"
              },
              {
                "keytab" : {
                  "configuration" : "storm-atlas-application.properties/atlas.jaas.KafkaClient.option.keyTab"
                },
                "name" : "storm_storm_components",
                "principal" : {
                  "configuration" : "storm-atlas-application.properties/atlas.jaas.KafkaClient.option.principal"
                },
                "reference" : "/STORM/storm_components",
                "referencePath" : "STORM/storm_storm_components"
              }
            ],
            "name" : "STORM"
          },
          {
            "components" : [
              {
                "name" : "SUPERSET"
              }
            ],
            "configurations" : [
              {
                "superset" : {
                  "ENABLE_KERBEROS_AUTHENTICATION" : "True",
                  "KERBEROS_REINIT_TIME_SEC" : "3600"
                }
              }
            ],
            "identities" : [
              {
                "keytab" : {
                  "configuration" : "superset/KERBEROS_KEYTAB",
                  "file" : "${keytab_dir}/superset.headless.keytab",
                  "group" : {
                    "access" : "r",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${superset-env/superset_user}"
                  }
                },
                "name" : "superset",
                "principal" : {
                  "configuration" : "superset/KERBEROS_PRINCIPAL",
                  "local_username" : "${superset-env/superset_user}",
                  "type" : "user",
                  "value" : "${superset-env/superset_user}${principal_suffix}@${realm}"
                },
                "referencePath" : "SUPERSET/superset"
              },
              {
                "name" : "superset_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "SUPERSET/superset_smokeuser"
              }
            ],
            "name" : "SUPERSET"
          },
          {
            "components" : [
              {
                "configurations" : [
                  {
                    "tez-site" : {
                      "tez.am.view-acls" : ""
                    }
                  }
                ],
                "identities" : [
                  {
                    "name" : "tez_tez_client_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "TEZ/TEZ_CLIENT/tez_tez_client_hdfs"
                  }
                ],
                "name" : "TEZ_CLIENT"
              }
            ],
            "name" : "TEZ"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "yarn-site/yarn.timeline-service.keytab",
                      "file" : "${keytab_dir}/yarn.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${yarn-env/yarn_user}"
                      }
                    },
                    "name" : "app_timeline_server_yarn",
                    "principal" : {
                      "configuration" : "yarn-site/yarn.timeline-service.principal",
                      "local_username" : "${yarn-env/yarn_user}",
                      "type" : "service",
                      "value" : "yarn/_HOST@${realm}"
                    },
                    "referencePath" : "YARN/APP_TIMELINE_SERVER/app_timeline_server_yarn"
                  },
                  {
                    "name" : "yarn_app_timeline_server_hdfs",
                    "reference" : "/HDFS/NAMENODE/hdfs",
                    "referencePath" : "YARN/APP_TIMELINE_SERVER/yarn_app_timeline_server_hdfs"
                  },
                  {
                    "keytab" : {
                      "configuration" : "yarn-site/yarn.timeline-service.http-authentication.kerberos.keytab"
                    },
                    "name" : "yarn_app_timeline_server_spnego",
                    "principal" : {
                      "configuration" : "yarn-site/yarn.timeline-service.http-authentication.kerberos.principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "YARN/APP_TIMELINE_SERVER/yarn_app_timeline_server_spnego"
                  }
                ],
                "name" : "APP_TIMELINE_SERVER"
              },
              {
                "configurations" : [
                  {
                    "yarn-site" : {
                      "yarn.nodemanager.container-executor.class" : "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor"
                    }
                  }
                ],
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "hive-interactive-site/hive.llap.task.keytab.file"
                    },
                    "name" : "llap_task_hive",
                    "principal" : {
                      "configuration" : "hive-interactive-site/hive.llap.task.principal"
                    },
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "when" : {
                      "contains" : [
                        "services",
                        "HIVE"
                      ]
                    },
                    "referencePath" : "YARN/NODEMANAGER/llap_task_hive"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hive-interactive-site/hive.llap.zk.sm.keytab.file"
                    },
                    "name" : "llap_zk_hive",
                    "principal" : {
                      "configuration" : "hive-interactive-site/hive.llap.zk.sm.principal"
                    },
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "when" : {
                      "contains" : [
                        "services",
                        "HIVE"
                      ]
                    },
                    "referencePath" : "YARN/NODEMANAGER/llap_zk_hive"
                  },
                  {
                    "keytab" : {
                      "configuration" : "yarn-site/yarn.nodemanager.keytab",
                      "file" : "${keytab_dir}/nm.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${yarn-env/yarn_user}"
                      }
                    },
                    "name" : "nodemanager_nm",
                    "principal" : {
                      "configuration" : "yarn-site/yarn.nodemanager.principal",
                      "local_username" : "${yarn-env/yarn_user}",
                      "type" : "service",
                      "value" : "nm/_HOST@${realm}"
                    },
                    "referencePath" : "YARN/NODEMANAGER/nodemanager_nm"
                  },
                  {
                    "keytab" : {
                      "configuration" : "hive-interactive-site/hive.llap.daemon.keytab.file"
                    },
                    "name" : "yarn_nodemanager_hive_server_hive",
                    "principal" : {
                      "configuration" : "hive-interactive-site/hive.llap.daemon.service.principal"
                    },
                    "reference" : "/HIVE/HIVE_SERVER/hive_server_hive",
                    "when" : {
                      "contains" : [
                        "services",
                        "HIVE"
                      ]
                    },
                    "referencePath" : "YARN/NODEMANAGER/yarn_nodemanager_hive_server_hive"
                  },
                  {
                    "keytab" : {
                      "configuration" : "yarn-site/yarn.nodemanager.webapp.spnego-keytab-file"
                    },
                    "name" : "yarn_nodemanager_spnego",
                    "principal" : {
                      "configuration" : "yarn-site/yarn.nodemanager.webapp.spnego-principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "YARN/NODEMANAGER/yarn_nodemanager_spnego"
                  }
                ],
                "name" : "NODEMANAGER"
              },
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "yarn-site/yarn.resourcemanager.keytab",
                      "file" : "${keytab_dir}/rm.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${yarn-env/yarn_user}"
                      }
                    },
                    "name" : "resource_manager_rm",
                    "principal" : {
                      "configuration" : "yarn-site/yarn.resourcemanager.principal",
                      "local_username" : "${yarn-env/yarn_user}",
                      "type" : "service",
                      "value" : "rm/_HOST@${realm}"
                    },
                    "referencePath" : "YARN/RESOURCEMANAGER/resource_manager_rm"
                  },
                  {
                    "keytab" : {
                      "configuration" : "ranger-yarn-audit/xasecure.audit.jaas.Client.option.keyTab"
                    },
                    "name" : "yarn_resourcemanager_resource_manager_rm",
                    "principal" : {
                      "configuration" : "ranger-yarn-audit/xasecure.audit.jaas.Client.option.principal"
                    },
                    "reference" : "/YARN/RESOURCEMANAGER/resource_manager_rm",
                    "referencePath" : "YARN/RESOURCEMANAGER/yarn_resourcemanager_resource_manager_rm"
                  },
                  {
                    "keytab" : {
                      "configuration" : "yarn-site/yarn.resourcemanager.webapp.spnego-keytab-file"
                    },
                    "name" : "yarn_resourcemanager_spnego",
                    "principal" : {
                      "configuration" : "yarn-site/yarn.resourcemanager.webapp.spnego-principal"
                    },
                    "reference" : "/spnego",
                    "referencePath" : "YARN/RESOURCEMANAGER/yarn_resourcemanager_spnego"
                  }
                ],
                "name" : "RESOURCEMANAGER"
              }
            ],
            "configurations" : [
              {
                "capacity-scheduler" : {
                  "yarn.scheduler.capacity.root.acl_administer_jobs" : "${yarn-env/yarn_user}",
                  "yarn.scheduler.capacity.root.acl_administer_queue" : "${yarn-env/yarn_user}",
                  "yarn.scheduler.capacity.root.default.acl_administer_jobs" : "${yarn-env/yarn_user}",
                  "yarn.scheduler.capacity.root.default.acl_administer_queue" : "${yarn-env/yarn_user}",
                  "yarn.scheduler.capacity.root.default.acl_submit_applications" : "${yarn-env/yarn_user}"
                }
              },
              {
                "core-site" : {
                  "hadoop.proxyuser.${yarn-env/yarn_user}.groups" : "*",
                  "hadoop.proxyuser.${yarn-env/yarn_user}.hosts" : "${clusterHostInfo/rm_host}"
                }
              },
              {
                "ranger-yarn-audit" : {
                  "xasecure.audit.destination.solr.force.use.inmemory.jaas.config" : "true",
                  "xasecure.audit.jaas.Client.loginModuleControlFlag" : "required",
                  "xasecure.audit.jaas.Client.loginModuleName" : "com.sun.security.auth.module.Krb5LoginModule",
                  "xasecure.audit.jaas.Client.option.serviceName" : "solr",
                  "xasecure.audit.jaas.Client.option.storeKey" : "false",
                  "xasecure.audit.jaas.Client.option.useKeyTab" : "true"
                }
              },
              {
                "yarn-site" : {
                  "hadoop.registry.client.auth" : "kerberos",
                  "hadoop.registry.jaas.context" : "Client",
                  "hadoop.registry.secure" : "true",
                  "hadoop.registry.system.accounts" : "sasl:${principals/YARN/APP_TIMELINE_SERVER/app_timeline_server_yarn|principalPrimary()},sasl:${principals/MAPREDUCE2/HISTORYSERVER/history_server_jhs|principalPrimary()},sasl:${principals/HDFS/NAMENODE/hdfs|principalPrimary()},sasl:${principals/YARN/RESOURCEMANAGER/resource_manager_rm|principalPrimary()},sasl:${principals/HIVE/HIVE_SERVER/hive_server_hive|principalPrimary()}",
                  "yarn.acl.enable" : "true",
                  "yarn.admin.acl" : "${yarn-env/yarn_user},dr.who",
                  "yarn.resourcemanager.proxy-user-privileges.enabled" : "true",
                  "yarn.resourcemanager.proxyuser.*.groups" : "",
                  "yarn.resourcemanager.proxyuser.*.hosts" : "",
                  "yarn.resourcemanager.proxyuser.*.users" : "",
                  "yarn.resourcemanager.zk-acl" : "sasl:${principals/YARN/RESOURCEMANAGER/resource_manager_rm|principalPrimary()}:rwcda",
                  "yarn.timeline-service.enabled" : "true",
                  "yarn.timeline-service.http-authentication.cookie.domain" : "",
                  "yarn.timeline-service.http-authentication.cookie.path" : "",
                  "yarn.timeline-service.http-authentication.kerberos.name.rules" : "",
                  "yarn.timeline-service.http-authentication.proxyuser.*.groups" : "",
                  "yarn.timeline-service.http-authentication.proxyuser.*.hosts" : "",
                  "yarn.timeline-service.http-authentication.proxyuser.*.users" : "",
                  "yarn.timeline-service.http-authentication.signature.secret" : "",
                  "yarn.timeline-service.http-authentication.signature.secret.file" : "",
                  "yarn.timeline-service.http-authentication.signer.secret.provider" : "",
                  "yarn.timeline-service.http-authentication.signer.secret.provider.object" : "",
                  "yarn.timeline-service.http-authentication.token.validity" : "",
                  "yarn.timeline-service.http-authentication.type" : "kerberos"
                }
              }
            ],
            "identities" : [
              {
                "name" : "yarn_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "YARN/yarn_smokeuser"
              },
              {
                "name" : "yarn_spnego",
                "reference" : "/spnego",
                "referencePath" : "YARN/yarn_spnego"
              }
            ],
            "name" : "YARN"
          },
          {
            "components" : [
              {
                "name" : "ZEPPELIN_MASTER"
              }
            ],
            "configurations" : [
              {
                "core-site" : {
                  "hadoop.proxyuser.${zeppelin-env/zeppelin_user}.groups" : "*",
                  "hadoop.proxyuser.${zeppelin-env/zeppelin_user}.hosts" : "*"
                }
              },
              {
                "zeppelin-env" : {
                  "zeppelin.kerberos.enabled" : "true"
                }
              }
            ],
            "identities" : [
              {
                "name" : "zeppelin_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "ZEPPELIN/zeppelin_smokeuser"
              },
              {
                "keytab" : {
                  "configuration" : "zeppelin-env/zeppelin.server.kerberos.keytab",
                  "file" : "${keytab_dir}/zeppelin.server.kerberos.keytab",
                  "group" : {
                    "access" : "",
                    "name" : "${cluster-env/user_group}"
                  },
                  "owner" : {
                    "access" : "r",
                    "name" : "${zeppelin-env/zeppelin_user}"
                  }
                },
                "name" : "zeppelin_user",
                "principal" : {
                  "configuration" : "zeppelin-env/zeppelin.server.kerberos.principal",
                  "local_username" : "${zeppelin-env/zeppelin_user}",
                  "type" : "user",
                  "value" : "${zeppelin-env/zeppelin_user}${principal_suffix}@${realm}"
                },
                "referencePath" : "ZEPPELIN/zeppelin_user"
              }
            ],
            "name" : "ZEPPELIN"
          },
          {
            "components" : [
              {
                "identities" : [
                  {
                    "keytab" : {
                      "configuration" : "zookeeper-env/zookeeper_keytab_path",
                      "file" : "${keytab_dir}/zk.service.keytab",
                      "group" : {
                        "access" : "",
                        "name" : "${cluster-env/user_group}"
                      },
                      "owner" : {
                        "access" : "r",
                        "name" : "${zookeeper-env/zk_user}"
                      }
                    },
                    "name" : "zookeeper_zk",
                    "principal" : {
                      "configuration" : "zookeeper-env/zookeeper_principal_name",
                      "type" : "service",
                      "value" : "zookeeper/_HOST@${realm}"
                    },
                    "referencePath" : "ZOOKEEPER/ZOOKEEPER_SERVER/zookeeper_zk"
                  }
                ],
                "name" : "ZOOKEEPER_SERVER"
              }
            ],
            "identities" : [
              {
                "name" : "zookeeper_smokeuser",
                "reference" : "/smokeuser",
                "referencePath" : "ZOOKEEPER/zookeeper_smokeuser"
              }
            ],
            "name" : "ZOOKEEPER"
          }
        ]
      }
    },
    "stack_name" : "HDP",
    "stack_version" : "2.6"
  }
}
